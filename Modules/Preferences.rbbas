#tag ModuleProtected Module Preferences	#tag Method, Flags = &h0		Sub LoadPrefs()		  Dim f as FolderItem = SpecialFolder.Preferences.Child("com.vidalvanbergen.vimediamanager.xml")		  Dim Xml as new XmlDocument		  Dim xnode as XmlNode		  Dim itemIteration, count as Integer		  Dim t() as string		  		  ReDim TVShowPaths(-1)		  ReDim MoviePaths(-1)		  		  Xml.PreserveWhitespace = False		  		  if f.Exists then		    Xml.LoadXml(f)		  else		    return		  end if		  		  for itemIteration = 0 to Xml.DocumentElement.ChildCount - 1		    		    xnode = Xml.DocumentElement.Child(itemIteration)		    		    if xnode.FirstChild <> nil then		      select case xnode.Name		        		      case "DBLanguage"		        DBLanguage = xnode.FirstChild.Value		        		      case "SortBy"		        SortBy = xnode.FirstChild.Value		        		      case "MoviePaths"		        if xnode.ChildCount > 0 then		          for count = 0 to xnode.ChildCount - 1		            MoviePaths.Append xnode.Child(count).FirstChild.Value		          next		        end if		        		      case "TVPaths"		        if xnode.ChildCount > 0 then		          for count = 0 to xnode.ChildCount - 1		            TVShowPaths.Append xnode.Child(count).FirstChild.Value		          next		        end if		        		      case "AnimePaths"		        if xnode.ChildCount > 0 then		          for count = 0 to xnode.ChildCount - 1		            AnimePaths.Append xnode.Child(count).FirstChild.Value		          next		        end if		        		      case "AnimeMinGenreWeight"		        AniDBMinGenreWeight = val( xnode.FirstChild.Value )		        		      case "Timeout"		        TimeOut = val( xnode.FirstChild.Value )		        		      case "NSWindowMain"		        t() = xnode.FirstChild.Value.Split(", ")		        wndMain.Top = val( t(0) )		        wndMain.Left = val( t(1) )		        wndMain.Width = val( t(2) )		        wndMain.Height = val( t(3) )		        		      case "NSSplitterMovies"		        Dim SplitMovies as Integer = val(xnode.FirstChild.Value)		        wndMain.lstMovies.Width  = SplitMovies		        wndMain.ListToolbar(0).Width = SplitMovies + 1		        wndMain.btnTestMovies.Left   = SplitMovies + 50		        wndMain.splitMovies.Left     = SplitMovies		        wndMain.cvsMovies.Left       = SplitMovies - 1		        'wndMain.cvsMovies.Width      = (1200 - wndMain.Width) + val( t(1) ) - ( SplitMovies - 1 )		        		      case "NSSplitterTVShows"		        Dim SplitTVShows as Integer = val(xnode.FirstChild.Value)		        wndMain.lstTVShows.Width  = SplitTVShows		        wndMain.ListToolbar(1).Width  = SplitTVShows + 1		        wndMain.btnTVTest.Left    = SplitTVShows + 50		        wndMain.splitTVShows.left = SplitTVShows		        wndMain.cvsTVShows.Left   = SplitTVShows - 1		        'wndMain.cvsTVShows.Width  = ( 1200 - wndMain.Width ) + val( t(1) ) - ( SplitTVShows - 1 )		        		      case "NSSplitterAnime"		        Dim SplitAnime as Integer = val(xnode.FirstChild.Value)		        wndMain.lstAnime.Width  = SplitAnime		        wndMain.ListToolbar(2).Width = SplitAnime + 1		        wndMain.btnTestAnime.Left = SplitAnime + 50		        wndMain.splitAnime.left = SplitAnime		        wndMain.cvsAnime.Left   = SplitAnime - 1		        'wndMain.cvsAnime.Width  = ( 1200 - wndMain.Width ) + val( t(1) ) - ( SplitAnime - 1 )		        		      case "NSWindowPrefsTab"		        PrefsLastItem = val( xnode.FirstChild.Value )		        		      case "NSWindowMainTab"		        MainWindowMode = val( xnode.FirstChild.Value )		        		      case "NSWindowMovieMetaDataTab"		        MovieMetaDataWindowTab = val( xnode.FirstChild.Value )		        		      case "NSWindowShowMetaDataTab"		        ShowMetaDataWindowTab  = val( xnode.FirstChild.Value )		        		      case "NSWindowAnimeMetaDataTab"		        AnimeMetaDataWindowTab = val( xnode.FirstChild.Value )		        		      case "NSWindowAnimeMovieMetaDataTab"		        AnimeMovieMetaDataWindowTab = val( xnode.FirstChild.Value )		        		      case "EnableIMDBScraper"		        if xnode.FirstChild.Value = "True" then		          IMDBScrapeEnabled = True		        elseif xnode.FirstChild.Value = "False" then		          IMDBScrapeEnabled = False		        else		          IMDBScrapeEnabled = True		        end if		        		      case "DefaultTVThumb"		        DefaultTVThumb = xnode.FirstChild.Value		        		      case "DefaultAnimeThumb"		        DefaultAnimeThumb = xnode.FirstChild.Value		        		      case "ArticlesLast"		        if xnode.FirstChild.Value = "True" then		          ArticlesLast = True		        elseif xnode.FirstChild.Value = "False" then		          ArticlesLast = False		        end if		        		      case "RenameStringMovies"		        RenameStringMovies = xnode.FirstChild.Value		        		      case "RenameStringTVShows"		        RenameStringTVShows = xnode.FirstChild.Value		        		      case "RenameStringAnime"		        RenameStringAnime = xnode.FirstChild.Value		        		      case "CheckForUpdates"		        CheckForUpdates = xnode.FirstChild.Value		        		      case "CheckForBetaUpdates"		        CheckForBetaUpdates = xnode.FirstChild.Value		        		      case "SkipVersion"		        SkipVersion = xnode.FirstChild.Value		        		      end select		    end if		  next		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub WritePrefs()		  Dim Xml as new XmlDocument		  Dim xroot, xnode, xitem as XmlNode		  		  Dim f as FolderItem		  Dim i as integer		  		  Xml.PreserveWhitespace = True		  		  // ROOT		  xroot = Xml.AppendChild( Xml.CreateElement("root") )		  		  // Database Language		  xnode = xroot.AppendChild( Xml.CreateElement("DBLanguage") )		  xnode.AppendChild( Xml.CreateTextNode( DBLanguage ) )		  		  // Sort By		  xnode = xroot.AppendChild( Xml.CreateElement("SortBy") )		  xnode.AppendChild( Xml.CreateTextNode( SortBy ) )		  		  // Movie Paths		  xnode = xroot.AppendChild( Xml.CreateElement("MoviePaths") )		  		  for i = 0 to MoviePaths.Ubound		    xitem = xnode.AppendChild( Xml.CreateElement("string") )		    xitem.AppendChild( Xml.CreateTextNode( MoviePaths(i) ) )		  next		  		  // TV Show Paths		  xnode = xroot.AppendChild( Xml.CreateElement("TVPaths") )		  		  for i = 0 to TVShowPaths.Ubound		    xitem = xnode.AppendChild( Xml.CreateElement("string") )		    xitem.AppendChild( Xml.CreateTextNode( TVShowPaths(i) ) )		  next		  		  // Anime Paths		  xnode = xroot.AppendChild( Xml.CreateElement("AnimePaths") )		  		  for i = 0 to AnimePaths.Ubound		    xitem = xnode.AppendChild( Xml.CreateElement("string") )		    xitem.AppendChild( Xml.CreateTextNode( AnimePaths(i) ) )		  next		  		  if TimeOut <> 30 and TimeOut > 1 then		    xitem = xnode.AppendChild( Xml.CreateElement("Timeout") )		    xitem.AppendChild( Xml.CreateTextNode( str( TimeOut ) ) )		  end if		  		  // MainWindow Position		  xnode = xroot.AppendChild( Xml.CreateElement("NSWindowMain") )		  xnode.AppendChild( Xml.CreateTextNode(  str(wndMain.Top) + ", " + str(wndMain.Left) + ", " + str(wndMain.Width) + ", " + str(wndMain.Height) ) )		  		  // Preferences Last Tab		  xnode = xroot.AppendChild( Xml.CreateElement("NSWindowPrefsTab") )		  xnode.AppendChild( Xml.CreateTextNode( str(PrefsLastItem) ) )		  		  // MainWindow Last Tab		  xnode = xroot.AppendChild( Xml.CreateElement("NSWindowMainTab") )		  xnode.AppendChild( Xml.CreateTextNode( str(MainWindowMode) ) )		  		  // MainWindow Splitter Movies control		  xnode = xroot.AppendChild( Xml.CreateElement("NSSplitterMovies") )		  xnode.AppendChild( Xml.CreateTextNode( str(wndMain.lstMovies.Width) ) )		  		  // MainWindow Splitter TV Shows control		  xnode = xroot.AppendChild( Xml.CreateElement("NSSplitterTVShows") )		  xnode.AppendChild( Xml.CreateTextNode( str(wndMain.lstTVShows.Width) ) )		  		  // MainWindow Splitter Anime control		  xnode = xroot.AppendChild( Xml.CreateElement("NSSplitterAnime") )		  xnode.AppendChild( Xml.CreateTextNode( str(wndMain.lstAnime.Width) ) )		  		  // MovieMetaData Last Tab		  xnode = xroot.AppendChild( Xml.CreateElement("NSWindowMovieMetaDataTab") )		  xnode.AppendChild( Xml.CreateTextNode( str(MovieMetaDataWindowTab) ) )		  		  // ShowMetaData Last Tab		  xnode = xroot.AppendChild( Xml.CreateElement("NSWindowShowMetaDataTab") )		  xnode.AppendChild( Xml.CreateTextNode( str(ShowMetaDataWindowTab) ) )		  		  // AnimeMetaData Last Tab		  xnode = xroot.AppendChild( Xml.CreateElement("NSWindowAnimeMetaDataTab") )		  xnode.AppendChild( Xml.CreateTextNode( str(AnimeMetaDataWindowTab) ) )		  		  // AnimeMovieMetaData Last Tab		  xnode = xroot.AppendChild( Xml.CreateElement("NSWindowAnimeMovieMetaDataTab") )		  xnode.AppendChild( Xml.CreateTextNode( str(AnimeMovieMetaDataWindowTab ) ) )		  		  // Enable IMDb Scraper		  if IMDBScrapeEnabled = False then		    xnode = xroot.AppendChild( Xml.CreateElement("EnableIMDBScraper") )		    xnode.AppendChild( Xml.CreateTextNode( str(IMDBScrapeEnabled) ) )		  end if		  		  // AniDB Genre weight		  xnode = xroot.AppendChild( Xml.CreateElement("AnimeMinGenreWeight") )		  xnode.AppendChild( Xml.CreateTextNode( str( AniDBMinGenreWeight ) ) )		  		  xnode = xroot.AppendChild( Xml.CreateElement("DefaultTVThumb") )		  xnode.AppendChild( Xml.CreateTextNode( str(DefaultTVThumb) ) )		  		  xnode = xroot.AppendChild( Xml.CreateElement("DefaultAnimeThumb") )		  xnode.AppendChild( Xml.CreateTextNode( str(DefaultAnimeThumb) ) )		  		  // Renaming: Articles Last		  xnode = xroot.AppendChild( Xml.CreateElement("ArticlesLast") )		  xnode.AppendChild( Xml.CreateTextNode( str(ArticlesLast) ) )		  		  // Renaming Pattern Movie Items		  xnode = xroot.AppendChild( Xml.CreateElement("RenameStringMovies") )		  xnode.AppendChild( Xml.CreateTextNode( RenameStringMovies ) )		  		  // Renaming Pattern TV Items		  xnode = xroot.AppendChild( Xml.CreateElement("RenameStringTVShows") )		  xnode.AppendChild( Xml.CreateTextNode( RenameStringTVShows ) )		  		  // Renaming Pattern TV Items		  xnode = xroot.AppendChild( Xml.CreateElement("RenameStringAnime") )		  xnode.AppendChild( Xml.CreateTextNode( RenameStringAnime ) )		  		  // Check For Updates		  xnode = xroot.AppendChild( Xml.CreateElement("CheckForUpdates") )		  xnode.AppendChild( Xml.CreateTextNode( CheckForUpdates ) )		  		  // Check For Beta Updates		  xnode = xroot.AppendChild( Xml.CreateElement("CheckForBetaUpdates") )		  xnode.AppendChild( Xml.CreateTextNode( CheckForBetaUpdates ) )		  		  // Skip Version		  if SkipVersion <> "" then		    xnode = xroot.AppendChild( Xml.CreateElement("SkipVersion") )		    xnode.AppendChild( Xml.CreateTextNode( SkipVersion ) )		  end if		  		  // Tidy & Save Preferences		  f = SpecialFolder.Preferences.Child("com.vidalvanbergen.vimediamanager.xml")		  xml.LoadXml( TidyXML(xml.ToString) )		  Xml.SaveXml(f)		  		  'return true		  'f.Parent.Launch		  'else		  'return false		  'end if		End Sub	#tag EndMethod	#tag Property, Flags = &h0		AniDBMinGenreWeight As Integer = 400	#tag EndProperty	#tag Property, Flags = &h0		AniDBSearchExact As Boolean = False	#tag EndProperty	#tag Property, Flags = &h0		AnimeMetaDataWindowTab As Integer = 0	#tag EndProperty	#tag Property, Flags = &h0		AnimeMovieMetaDataWindowTab As Integer = 0	#tag EndProperty	#tag Property, Flags = &h0		AnimePaths() As String	#tag EndProperty	#tag Property, Flags = &h0		ArticlesLast As Boolean = True	#tag EndProperty	#tag Property, Flags = &h0		CheckForBetaUpdates As String = "False"	#tag EndProperty	#tag Property, Flags = &h0		CheckForUpdates As String = "True"	#tag EndProperty	#tag Property, Flags = &h0		DBLanguage As String = "en"	#tag EndProperty	#tag Property, Flags = &h0		DBPreferance As String = "AniDB"	#tag EndProperty	#tag Property, Flags = &h0		DefaultAnimeThumb As String = "Poster"	#tag EndProperty	#tag Property, Flags = &h0		DefaultTVThumb As String = "Poster"	#tag EndProperty	#tag Property, Flags = &h0		IMDBScrapeEnabled As boolean = True	#tag EndProperty	#tag Property, Flags = &h0		#tag Note			mode 0 = Movies			mode 1 = TV Shows		#tag EndNote		MainWindowMode As Integer = 0	#tag EndProperty	#tag Property, Flags = &h0		MovieMetaDataWindowTab As Integer = 0	#tag EndProperty	#tag Property, Flags = &h0		MoviePaths() As String = "-1"	#tag EndProperty	#tag Property, Flags = &h0		#tag Note			Mode 0 = General Preferences			Mode 1 = Movie Preferences			Mode 2 = TV Show Preferences			Mode 3 = Update Preferences		#tag EndNote		PrefsLastItem As Integer = 0	#tag EndProperty	#tag Property, Flags = &h0		RenameStringAnime As String = "$T"	#tag EndProperty	#tag Property, Flags = &h0		RenameStringMovies As String = "$T ($Y)"	#tag EndProperty	#tag Property, Flags = &h0		RenameStringTVShows As String = "$T"	#tag EndProperty	#tag Property, Flags = &h0		ShowMetaDataWindowTab As Integer = 0	#tag EndProperty	#tag Property, Flags = &h0		SkipVersion As String	#tag EndProperty	#tag Property, Flags = &h0		#tag Note			Name			Status		#tag EndNote		SortBy As String = "Name"	#tag EndProperty	#tag Property, Flags = &h0		TimeOut As Integer = 30	#tag EndProperty	#tag Property, Flags = &h0		TVShowPaths() As String = "-1"	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="AniDBMinGenreWeight"			Group="Behavior"			InitialValue="400"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="AniDBSearchExact"			Group="Behavior"			InitialValue="False"			Type="Boolean"		#tag EndViewProperty		#tag ViewProperty			Name="AnimeMetaDataWindowTab"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="AnimeMovieMetaDataWindowTab"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="ArticlesLast"			Group="Behavior"			InitialValue="True"			Type="Boolean"		#tag EndViewProperty		#tag ViewProperty			Name="CheckForBetaUpdates"			Group="Behavior"			InitialValue="False"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="CheckForUpdates"			Group="Behavior"			InitialValue="True"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="DBLanguage"			Group="Behavior"			InitialValue="en"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="DBPreferance"			Group="Behavior"			InitialValue="AniDB"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="DefaultAnimeThumb"			Group="Behavior"			InitialValue="Banner"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="DefaultTVThumb"			Group="Behavior"			InitialValue="Banner"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="IMDBScrapeEnabled"			Group="Behavior"			InitialValue="True"			Type="boolean"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="MainWindowMode"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="MovieMetaDataWindowTab"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="PrefsLastItem"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="RenameStringAnime"			Group="Behavior"			InitialValue="$T"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="RenameStringMovies"			Group="Behavior"			InitialValue="$T ($Y)"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="RenameStringTVShows"			Group="Behavior"			InitialValue="$T"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="ShowMetaDataWindowTab"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="SkipVersion"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="SortBy"			Group="Behavior"			InitialValue="Name"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="TimeOut"			Group="Behavior"			InitialValue="30"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Module#tag EndModule