#tag ModuleProtected Module CommonCore	#tag Method, Flags = &h0		Function ActiveListbox() As Listbox		  Select Case ActiveSection		    		  Case 0		    Return wndMain.lstMovies		  Case 1		    Return wndMain.lstTVShows		  Case 2		    #pragma Warning "Build the Anime section first"		    		  End Select		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function ActiveSection() As Integer		  Return wndMain.ppMain.Value		End Function	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub Clean()		  wndClean.Show		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function CurrentItemName() As String		  If ActiveSection = 0 Then		    Return FindMovieName( MovieAttr.FolderParent, True, NOT Prefs.boolForKey("UseFolderNameForLookUp") )		  ElseIf ActiveSection = 1 Then		    If TVAttr.Title <> "" Then Return TVAttr.Title		    Return TVAttr.FolderParent.Name		  End If		End Function	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub DeleteItem()		  If ActiveListbox.ListIndex = -1 Then		    MsgBox Loc.kNothingToDelete		    Return		  End If		  		  If ActiveListbox.RowTag( ActiveListbox.ListIndex ) = "Folder" Then Return		  		  		  Dim Path as String = ActiveListbox.Cell( ActiveListbox.ListIndex, 1 )		  		  If ActiveSection = 0 Then wndMain.lstMovies.DeleteItem		  If ActiveSection = 1 Then wndMain.lstTVShows.DeleteItem		  		  Dim LstBox as Listbox = ActiveListbox		  If ActiveSection = 1 Then LstBox = wndMain.lstTVShadow		  wndMain.ActBar( ActiveSection ).TextValue( Str( LstBox.ListCount ) + " " + SectionName )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub EditInfo()		  If ActiveSection = 0 And ActiveListbox.ListIndex > -1 Then wndMovieMetadata.Show		  If ActiveSection = 1 And ActiveListbox.ListIndex > -1 And ActiveListbox.RowTag( ActiveListbox.ListIndex ) <> "Folder" Then wndShowMetadata.Show		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub FetchMetadata()		  // Movie		  If ActiveSection = 0 And ActiveListbox.ListIndex > -1 Then		    		    If PriorArtFound( MovieAttr.FolderParent ) Then 'And _		      If Prefs.integerForKey("KeepImages") = 0 Then // Ask First		        If MsgDlg( Nil, 1, MovieCore.msgPriorMovieArtFound.ReplaceAll( "<movie>", CurrentItemName ), MovieCore.msgPriorArtDeletion, MovieCore.btnReplaceExistingArtwork, MovieCore.btnDownloadMissingArtwork ) = 1 Then PriorArtDelete( MovieAttr.FolderParent )		      ElseIf Prefs.integerForKey("KeepImages") = 1 Then // Always Delete		        PriorArtDelete( MovieAttr.FolderParent )		      End If		      		    End If		    		    dlgProgress.Start( Loc.kSearching + ":", CurrentItemName, 0, "SearchMovie" )		    		    // TV		  ElseIf ActiveSection = 1 And ActiveListbox.ListIndex > -1 And ActiveListbox.RowTag( ActiveListbox.ListIndex ) <> "Folder" Then		    		    If PriorArtFound( TVAttr.FolderParent ) Then		      If Prefs.integerForKey("KeepImages") = 0 Then // Ask First		        If MsgDlg( Nil, 1, MovieCore.msgPriorMovieArtFound.ReplaceAll( "<movie>", CurrentItemName ), MovieCore.msgPriorArtDeletion, MovieCore.btnReplaceExistingArtwork, MovieCore.btnDownloadMissingArtwork ) = 1 Then PriorArtDelete( TVAttr.FolderParent )		      ElseIf Prefs.integerForKey("KeepImages") = 1 Then // Always Delete		        PriorArtDelete( TVAttr.FolderParent )		      End If		    End If		    		    dlgProgress.Start( Loc.kSearching + ":", CurrentItemName, 0, "SearchTVShow" )		    		  End If // @END PriorArtFound		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub FetchMissingMetadata()		  Dim UnScrapedItems as Integer = 0		  For i as Integer = 0 to ActiveListbox.ListCount - 1		    If ActiveListbox.Cell(i, 2) = "" Then UnScrapedItems = UnScrapedItems + 1		  Next		  		  If UnScrapedItems = 0 Then		    MessageBox Loc.kNothingLeft		    Return		  End If		  		  UnScrapedItems = UnScrapedItems + 1 // Just for good measure, and to not show the ever spinning progress bar.		  		  If ActiveListbox.ListCount > 0 Then		    If ActiveSection = 0 Then dlgProgress.Start( Loc.kSearching + ":", Loc.Movies + "...", UnScrapedItems, "FetchMissingMovies" )		    If ActiveSection = 1 Then dlgProgress.Start( Loc.kSearching + ":", Loc.TVShows + "...", UnScrapedItems, "FetchMissingTVShows" )		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetImageBackdrop()		  If ActiveListbox.RowTag( ActiveListbox.ListIndex ) = "Folder" Then Return		  		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kFanart, 2, "GetMovieFanart" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kFanart, 2, "GetTVShowFanart" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetImageBanner()		  If ActiveListbox.RowTag( ActiveListbox.ListIndex ) = "Folder" Then Return		  		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kBanner + "...", 0, "GetMovieBanner" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kBanner + "...", 0, "GetTVShowBanner" )		  If ActiveSection = 2 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kBanner + "...", 0, "GetAnimeBanner" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetImageCharacterArt()		  If ActiveListbox.RowTag( ActiveListbox.ListIndex ) = "Folder" Then Return		  		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kCharacterArt + "...", 0, "GetTVShowCharacterArt" )		  If ActiveSection = 2 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kCharacterArt + "...", 0, "GetAnimeCharacterArt" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetImageClearArt()		  If ActiveListbox.RowTag( ActiveListbox.ListIndex ) = "Folder" Then Return		  		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kClearArt + "...", 0, "GetMovieClearArt" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kClearArt + "...", 0, "GetTVShowClearArt" )		  If ActiveSection = 2 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kClearArt + "...", 0, "GetAnimeBanner" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetImageDiscArt()		  If ActiveListbox.RowTag( ActiveListbox.ListIndex ) = "Folder" Then Return		  		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kDiscArt + "...", 0, "GetMovieDisc" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetImageLogo()		  If ActiveListbox.RowTag( ActiveListbox.ListIndex ) = "Folder" Then Return		  		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kLogo + "...", 0, "GetMovieLogo" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kLogo + "...", 0, "GetTVShowLogo" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetImagePoster()		  If ActiveListbox.RowTag( ActiveListbox.ListIndex ) = "Folder" Then Return		  		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kPoster, 2, "GetMoviePoster" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kPoster, 2, "GetTVShowPoster" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetImageSeason(Mode as String = "Poster", Season as Integer = - 1)		  		  Select Case Mode		    		  Case "Poster"		    dlgProgress.SpecialSeason( TVAttr.ID_TVDB, TVAttr.Title, Season, "SeasonPoster" )		    		  Case "Fanart"		    dlgProgress.SpecialSeason( TVAttr.ID_TVDB, TVAttr.Title, Season, "SeasonFanart" )		    		  Case "Banner"		    dlgProgress.SpecialSeason( TVAttr.ID_TVDB, TVAttr.Title, Season, "SeasonBanner" )		    		  Case "Thumb"		    dlgProgress.SpecialSeason( TVAttr.ID_TVDB, TVAttr.Title, Season, "SeasonThumb" )		    		  End Select		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetImagesExtraBackdrops()		  If ActiveListbox.RowTag( ActiveListbox.ListIndex ) = "Folder" Then Return		  		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kExtraFanarts, 0, "GetMovieExtraFanart" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kExtraFanarts, 0, "GetTVShowExtraFanart" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetImagesExtraThumbs()		  If ActiveListbox.RowTag( ActiveListbox.ListIndex ) = "Folder" Then Return		  		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kExtraThumbs, 0, "GetMovieExtraThumbs" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kExtraThumbs, 0, "GetTVShowExtraThumbs" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetImageThumb()		  If ActiveListbox.RowTag( ActiveListbox.ListIndex ) = "Folder" Then Return		  		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kThumb + "...", 0, "GetMovieThumb" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kSearching + ":", Loc.kThumb + "...", 0, "GetTVShowThumb" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetLatestEpisode(ShowTitle as String, Episode as String, Mode as String)		  Dim URL as String		  		  Select Case Mode		    		  Case "TPB"		    URL = "http://pirateproxy.net/search/" + ShowTitle + " " + Episode + " " + "720p" + "/0/99/0"		    		  Case "KAT"		    URL = "http://kat.ph/search/" + ShowTitle + " " + Episode + " 720p" + "/"		    		  Case "YourTVSeries"		    URL = "http://www.yourtvsho.ws/" + ShowTitle.ReplaceAll(" ", "-") + "/" + Episode		    		  Case "YourTVSeriesAllEpisodes"		    URL = "http://www.yourtvsho.ws/series/" + ShowTitle + "/episodes/"		    		  End Select		  		  ShowURL( URL )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub GetMovieTrailer()		  Dim ID as String = MovieAttr.ID_IMDB		  If ID = "" Then ID = MovieAttr.ID_TMDB		  		  If FindTrailerItem( MovieAttr.FolderParent ) <> Nil And _		    MsgDlg( Nil, 1, Loc.msgTrailerExists, Loc.kCantBeUndone, Loc.dlgCancel, Loc.dlgReplace ) = 1 Then		    'DownloadInterupted( URL )		    MessageBox "No way hosey"		    Return		  End If		  		  If ActiveSection = 0 And ID <> "" Then		    dlgProgress.Start( Loc.kDownloading + ":", Loc.kTrailer + "...", 0, "GetTrailer" )		  Else		    MessageBox Loc.msgNoTrailer		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub ManualSearch()		  If ActiveListbox.ListIndex > -1 And ActiveListbox.RowTag( ActiveListbox.ListIndex ) <> "Folder" Then		    wndSearch.Show		    wndSearch.ccSearchBox.edtSearch.Text = CurrentItemName		    wndSearch.ccSearchBox.edtSearch.SelectAll		    Return		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub MarkAsWatched()		  If ActiveSection = 0 Then		    MovieAttr.StatusWatched = NOT MovieAttr.StatusWatched		    If MovieAttr.FolderParent <> Nil And MovieAttr.FolderParent.Exists Then MovieAttr.NFOWrite( MovieAttr.DestinationNFO( MovieAttr.FolderParent ) )		    wndMain.lstMovies.UpdateRow		    wndMain.lstMovies.SortList		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub ReloadList(Update as Boolean = True)		  ReloadUpdate = Update		  		  If ActiveSection = 0 Then		    If wndMain.ccSearchBoxMovies.edtSearch.Text <> "" Then wndMain.ccSearchBoxMovies.Reset		    dlgProgress.Start( Loc.Refresh, "", 0, "ReloadMovies" )		    'wndMain.cvsMovieDetails.Reload		    		    wndMain.ActBar( ActiveSection ).TextValue( Str( wndMain.lstMovies.ListCount ) + " " + SectionName )		  ElseIf ActiveListbox = wndMain.lstTVShows Then		    If wndMain.ccSearchBoxTVShows.edtSearch.Text <> "" Then wndMain.ccSearchBoxTVShows.Reset		    dlgProgress.Start( Loc.Refresh, "", 0, "ReloadTVShows" )		    		    wndMain.ActBar( ActiveSection ).TextValue( Str( wndMain.lstTVShadow.ListCount ) + " " + SectionName )		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub RenameAll()		  Dim FoldersOrFiles as String = Loc.kFolders.Lowercase		  If Prefs.integerForKey("BatchRename") = 1 Then FoldersOrFiles = Loc.kFoldersandFiles.Lowercase		  // Check to see weather the user will go trough with this.		  If MsgDlg( wndMain, 1, Loc.msgMassRename.ReplaceAll( "%F", FoldersOrFiles ), Loc.kCantBeUndone, Loc.dlgRename, Loc.dlgCancel ) = 2 Then Return		  		  		  Dim ScrapedItems as Integer = 0		  For i as Integer = 0 to ActiveListbox.ListCount - 1		    If ActiveListbox.Cell(i, 2) <> "" Then ScrapedItems = ScrapedItems + 1		  Next		  		  If ActiveSection = 0 Then dlgProgress.Start( Menu.ToolsBatchRenaming + ":", SectionName, ScrapedItems, "BatchRenameMovies" )		  If ActiveSection = 0 Then dlgProgress.Start( Menu.ToolsBatchRenaming + ":", SectionName, ScrapedItems, "BatchRenameTVShows" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub RenameSelection()		  If ActiveSection = 0 Then SingleRenamer( MovieAttr.FolderParent )		  If ActiveSection = 1 Then SingleRenamer( TVAttr.FolderParent )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub ShareOn(Service as String = "Facebook")		  Dim URL, Message as String		  		  If ActiveSection = 0 Then		    		    If MovieAttr.ID_TMDB <> "" Then		      URL = "http://www.themoviedb.org/movie/" + MovieAttr.ID_TMDB		    ElseIf MovieAttr.ID_IMDB <> "" Then		      URL = "http://imdb.com/title/" + MovieAttr.ID_IMDB		    End If		    		    If MovieAttr.Title <> "" Then		      If MovieAttr.DateYear > -1 Then Message = MovieAttr.Title + " (" + Str( MovieAttr.DateYear ) + ")" Else Message = MovieAttr.Title		    End If		    		  ElseIf ActiveSection = 1 Then		    		    If TVAttr.ID_TVDB <> "" Then		      URL = "http://thetvdb.com/?tab=series%26id=" + TVAttr.ID_TVDB		    ElseIf TVAttr.ID_IMDb <> "" Then		      URL = "http://www.imdb.com/title/" + TVAttr.ID_IMDb		    End If		    		    If TVAttr.Title <> "" Then		      Message = TVAttr.Title		    End If		    		  End If		  		  		  If Message <> "" And URL <> "" Then		    If Service = "Facebook" Then ShareFaceBookLink URL, Message + " #ViMediaManager"		    If Service = "Twitter"  Then ShareTweet Message + " " + URL + " #ViMediaManager"		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub ShowInFinder()		  If ActiveSection = 0 Then MovieAttr.FolderParent.ShowInFinder()		  If ActiveSection = 1 And wndMain.lstTVShows.RowTag( wndMain.lstTVShows.ListIndex ) <> "Folder" Then TVAttr.FolderParent.ShowInFinder()		  		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub ShowListingGoogle()		  If ActiveSection = 0 Then		    		    If MovieAttr.Title <> "" And MovieAttr.DateYear > -1 Then		      ShowURL "http://www.google.com/search?q=" + MovieAttr.Title + " (" + Str( MovieAttr.DateYear ) + ")"		    ElseIf MovieAttr.Title <> "" Then		      ShowURL "http://www.google.com/search?q=" + MovieAttr.Title		    End If		    		  ElseIf ActiveSection = 1 Then		    		    If TVAttr.Title <> "" And TVAttr.DateYear > -1 Then		      ShowURL "http://www.google.com/search?q=" + TVAttr.Title + " (" + Str( TVAttr.DateYear ) + ")"		    ElseIf TVAttr.Title <> "" Then		      ShowURL "http://www.google.com/search?q=" + TVAttr.Title		    End If		    		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub ShowListingIMDb()		  If ActiveSection = 0 And MovieAttr.ID_IMDB <> "" Then ShowURL "http://www.imdb.com/title/" + MovieAttr.ID_IMDB		  If ActiveSection = 1 And TVAttr.ID_IMDb    <> "" Then ShowURL "http://www.imdb.com/title/" + TVAttr.ID_IMDB		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub ShowListingTMDB()		  If MovieAttr.ID_TMDB <> "" Then ShowURL "http://www.themoviedb.org/movie/" + MovieAttr.ID_TMDB		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub ShowListingTVDB()		  If TVAttr.ID_TVDB <> "" Then ShowURL "http://thetvdb.com/?tab=series&id=" + TVAttr.ID_TVDB		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub ShowListingWiki()		  		  Dim Lang as String = Prefs.textStringForKey("DBLanguage").NthField("-",1)		  Dim Title as String		  If ActiveSection = 0 Then		    Title = MovieAttr.Title		    'If Lang <> "en" Then Title = MovieAttr.TitleOriginal		  ElseIf ActiveSection = 1 Then		    Title = TVAttr.Title		  End If		  		  ShowURL "http://" + Lang + ".wikipedia.org/wiki/Special:Search?search=" + String2Entities( Title )		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub ShowSearchResult(ID as String, DBID as String, Title as String, ReleaseDate as String, PosterURL as String, FanartURL as String, BannerURL as String)		  		  wndSearch.Show		  wndSearch.lstResults.DeleteAllRows		  		  		  Dim DisplayTitle as String = Title		  If ActiveSection = 0 And ReleaseDate <> "" And ReleaseDate <> "False" Then DisplayTitle = Title + " (" + ReleaseDate.Right(4) + ")"		  		  // :0 Display Title / :1 IMDb / :2 Database ID / :3 Original Title / :4 ReleaseDate / :5 PosterURL / :6 FanartURL / :7 BannerURL		  wndSearch.lstResults.AddRow DisplayTitle, ID, DBID, Title, ReleaseDate, PosterURL, FanartURL, BannerURL		  		  		  'wndSearch.ccSearchBox.edtSearch.Text = CurrentItemName		  'wndSearch.ccSearchBox.edtSearch.SelectAll		  wndSearch.lstResults.ListIndex = 0		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub ShowSearchResults(ID() as String, DBID() as String, Title() as String, ReleaseDate() as String, PosterURL() as String = Nil, FanartURL() as String = Nil, BannerURL() as String = Nil)		  		  wndSearch.Show		  wndSearch.lstResults.DeleteAllRows		  		  'wndSearch.ccSearchBox.edtSearch.Text = CurrentItemName		  'wndSearch.ccSearchBox.edtSearch.SelectAll		  		  		  For i as Integer = 0 to ID.Ubound		    Dim DisplayTitle as String = Title(i)		    If ActiveSection = 0 And ReleaseDate(i) <> "" And ReleaseDate(i) <> "False" Then DisplayTitle = Title(i) + " (" + ReleaseDate(i).Left(4) + ")"		    		    Dim tmpPosterURL, tmpFanartURL, tmpBannerURL, tmpDBID as String = ""		    If DBID      <> Nil And DBID.Ubound      >= i Then tmpDBID = DBID(i)		    If PosterURL <> Nil And PosterURL.Ubound >= i Then tmpPosterURL = PosterURL(i)		    If FanartURL <> Nil And FanartURL.Ubound >= i Then tmpFanartURL = FanartURL(i)		    If BannerURL <> Nil And BannerURL.Ubound >= i Then tmpBannerURL = BannerURL(i)		    		    // :0 Display Title / :1 IMDb / :2 Database ID / :3 Original Title / :4 ReleaseDate / :5 PosterURL / :6 FanartURL / :7 BannerURL		    wndSearch.lstResults.AddRow DisplayTitle, ID(i), tmpDBID, Title(i), ReleaseDate(i), tmpPosterURL, tmpFanartURL, tmpBannerURL		  Next		  		  wndSearch.lstResults.ListIndex = 0		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub ShowUnfoundTitles(ActionDescription as String)		  If UnfoundTitles.Ubound < 0 Then Return		  		  wndStatus.Show		  wndStatus.lstResults.DeleteAllRows		  		  For i as Integer = 0 to UnfoundTitles.Ubound		    If UnfoundPaths.Ubound >= i Then		      wndStatus.lstResults.AddRow UnfoundTitles(i)', UnfoundPaths(i).AbsolutePath		      wndStatus.lstResults.RowTag( wndStatus.lstResults.LastIndex ) = UnfoundPaths(i)		    Else		      wndStatus.lstResults.AddRow UnfoundTitles(i)		    End If		  Next		  		  wndStatus.lstResults.Invalidate		  wndStatus.Title = Str( wndStatus.lstResults.ListCount ) + " "		  If ActiveSection = 0 Then		    wndStatus.Title = wndStatus.Title + Loc.Movies		  ElseIf ActiveSection = 1 Then		    wndStatus.Title = wndStatus.Title + Loc.TVShows		  End If		  		  Return		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortAscending()		  		  If ActiveSection = 0 Then		    Prefs.boolForKey("SortMovieAscending") = True		  ElseIf ActiveSection = 1 Then		    Prefs.boolForKey("SortTVAscending") = True		  End If		  		  CheckMenuItems()		  SortList()		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortByNextAired()		  If ActiveSection = 1 Then Prefs.integerForKey("SortByTV") = 3		  		  CheckMenuItems()		  SortList()		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortByPath()		  If ActiveSection = 0 Then Prefs.integerForKey("SortByMovie") = 2		  If ActiveSection = 1 Then Prefs.integerForKey("SortByTV" )   = 2		  		  CheckMenuItems()		  SortList()		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortByPremiereDate()		  If ActiveSection = 0 Then Prefs.integerForKey("SortByMovie") = 4		  		  CheckMenuItems()		  SortList()		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortByQuality()		  If ActiveSection = 0 Then Prefs.integerForKey("SortByMovie") = 5		  		  CheckMenuItems()		  SortList()		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortByRating()		  If ActiveSection = 0 Then Prefs.integerForKey("SortByMovie") = 6		  If ActiveSection = 1 Then Prefs.integerForKey("SortByTV")    = 4		  		  CheckMenuItems()		  SortList()		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortByRuntime()		  If ActiveSection = 0  Then Prefs.integerForKey("SortByMovie") = 8		  		  CheckMenuItems()		  SortList()		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortBySize()		  If ActiveSection = 0 Then Prefs.integerForKey("SortByMovie") = 7		  If ActiveSection = 1 Then Prefs.integerForKey("SortByTV")    = 5		  		  CheckMenuItems()		  SortList()		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortByStatus()		  If ActiveSection = 0 Then Prefs.integerForKey("SortByMovie") = 3		  If ActiveSection = 1 Then Prefs.integerForKey("SortByTV")    = 5		  		  CheckMenuItems()		  SortList()		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortByTitle()		  If ActiveSection = 0 Then Prefs.integerForKey("SortByMovie") = 0		  If ActiveSection = 1 Then Prefs.integerForKey("SortByTV" )   = 0		  		  CheckMenuItems()		  SortList()		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortByTitleSort()		  If ActiveSection = 0 Then Prefs.integerForKey("SortByMovie") = 1		  If ActiveSection = 1 Then Prefs.integerForKey("SortByTV" )   = 1		  		  CheckMenuItems()		  SortList()		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortDescending()		  		  If ActiveSection = 0 Then		    Prefs.boolForKey("SortMovieAscending") = False		  ElseIf ActiveListbox = wndMain.lstTVShows Then		    Prefs.boolForKey("SortTVAscending") = False		  End If		  		  CheckMenuItems()		  SortList()		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SortList()		  If ActiveSection = 0 Then wndMain.lstMovies.SortList		  If ActiveSection = 1 Then wndMain.lstTVShows.SortList		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub UpdateAllImages()		  Dim Scrapeditems as Integer = 0		  For i as Integer = 0 to ActiveListbox.ListCount - 1		    If ActiveListbox.Cell(i, 2) <> "" Then Scrapeditems = Scrapeditems + 1		  Next		  		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kImages.Titlecase + "...", Scrapeditems, "UpdateAllMovieImages" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kImages.Titlecase + "...", Scrapeditems, "UpdateAllTVShowImages" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub UpdateAllMovieRatings()		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kSearching + ":", Loc.mRating.ReplaceAll( ":", "" ) + "...", 0, "UpdateAllMovieRatings" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kSearching + ":", Loc.mRating.ReplaceAll( ":", "" ) + "...", 0, "UpdateAllTVShowRatings" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub UpdateAllShowStatus()		  Dim ScrapedCount as Integer		  For i as Integer = 0 to wndMain.lstTVShadow.ListCount - 1		    If wndMain.lstTVShadow.Cell( i, 2 ) <> "" Then ScrapedCount = ScrapedCount + 1		  Next		  		  dlgProgress.Start( Loc.kDownloading + ":", Loc.kStatus.ReplaceAll( ":", "" ) + "...", ScrapedCount, "UpdateAllTVShowStatus" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub UpdateMetadata()		  If MsgDlg( wndMain, 1, _		    Loc.msgUpdate.ReplaceAll( "%F", SectionName.Lowercase ), _		    Loc.msgWhatWillBeUpdated.ReplaceAll( "%F", SectionName.Lowercase ), _		    Loc.dlgOK, Loc.dlgCancel ) = 2 Then Return		    		    Dim ScrapedItems as Integer = 0		    For i as Integer = 0 to ActiveListbox.ListCount - 1		      If ActiveListbox.Cell(i, 2) <> "" Then ScrapedItems = ScrapedItems + 1		    Next		    		    If ActiveSection = 0 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.mTabInfo + "...", ScrapedItems, "UpdateAllMovies" )		    If ActiveSection = 1 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.mTabInfo + "...", ScrapedItems, "UpdateAllTVShows" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub UpdateSingleImages()		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kImages.Titlecase + "...", 11, "UpdateSingleMovieImages" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kImages.Titlecase + "...", 11, "UpdateSingleTVShowImages" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub UpdateSingleItem()		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kUpdating + ":", CurrentItemName + "...", 4, "UpdateSingleMovie" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kUpdating + ":", CurrentItemName + "...", 4, "UpdateSingleTVShow" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub UpdateSingleMovieRating()		  If ActiveSection = 0 Then dlgProgress.Start( Loc.kSearching + ":", CurrentItemName + " " + Loc.mRating.ReplaceAll(":", "..."), 4, "UpdateSingleMovieRating" )		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kSearching + ":", CurrentItemName + " " + Loc.mRating.ReplaceAll(":", "..."), 4, "UpdateSingleTVShowRating" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub UpdateSingleTVShowStatus()		  If ActiveSection = 1 Then dlgProgress.Start( Loc.kDownloading + ":", CurrentItemName + " " + Loc.kStatus.ReplaceAll( ":", "" ).Lowercase + "...", 2, "UpdateSingleTVShowStatus" )		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub WatchMovie()		  Dim MovieFile as FolderItem = FindMovieItem( MovieAttr.FolderParent )		  If MovieFile <> Nil And MovieFile.Exists Then MovieFile.Launch		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub WatchTrailer()		  If ActiveSection = 0 Then		    Dim TrailerItem as FolderItem = FindTrailerItem( MovieAttr.FolderParent )		    If TrailerItem <> Nil And TrailerItem.Exists Then TrailerItem.Launch Else MsgBox Loc.msgNoTrailer		  End If		End Sub	#tag EndMethod	#tag Property, Flags = &h1		Protected MassSearch As Boolean = False	#tag EndProperty	#tag Property, Flags = &h1		Protected ReloadUpdate As Boolean = False	#tag EndProperty	#tag Property, Flags = &h1		Protected SectionName As String	#tag EndProperty	#tag Property, Flags = &h1		Protected UnfoundPaths() As FolderItem	#tag EndProperty	#tag Property, Flags = &h1		Protected UnfoundTitles() As String	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Module#tag EndModule