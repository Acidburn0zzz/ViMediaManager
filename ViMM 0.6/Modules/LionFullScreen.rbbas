#tag ModuleProtected Module LionFullScreen	#tag Method, Flags = &h21		Private Sub EnableFullScreenSupport()		  #If TargetCocoa		    Const NSApplicationPresentationFullScreen = 1024		    		    If Supported And FullScreenEnabled = False Then		      Try		        Soft Declare Function objc_getClass Lib "Cocoa.framework" (aClassName As CString) As Integer		        Soft Declare Function GetSharedApplication Lib "AppKit" Selector "sharedApplication" (target As Integer) As Integer		        Soft Declare Sub SetPresentationOptions Lib "AppKit" Selector "setPresentationOptions:" (target As Integer, options As Integer)		        		        Dim appclass As Integer = objc_getClass("NSApplication")		        If appclass > 0 Then		          Dim appid As Integer = GetSharedApplication(appclass)		          If appid > 0 Then		            SetPresentationOptions(appid,NSApplicationPresentationFullScreen)		            FullScreenEnabled = True		          End		        End		      Catch err As runtimeexception		      End		    End		  #EndIf		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function FullScreenAllowed(Extends W As Window) As Boolean		  #If TargetCocoa		    		    If Supported Then		      Try		        Soft Declare Function GetCollectionBehavior Lib "AppKit" Selector "collectionBehavior" (target As Integer) As Integer		        Dim Value As Integer = GetCollectionBehavior(w.handle)		        Return Bitwise.BitAnd(Value,NSWindowCollectionBehaviorFullScreenPrimary) = NSWindowCollectionBehaviorFullScreenPrimary		      Catch err As RuntimeException		      End Try		    End If		  #EndIf		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub FullScreenAllowed(Extends W As Window, Assigns Value As Boolean)		  #If TargetCocoa		    If FullScreenEnabled = False Then		      EnableFullScreenSupport		    End If		    If Supported Then		      Try		        Soft Declare Sub SetCollectionBehavior Lib "AppKit" Selector "setCollectionBehavior:" (target As Integer, behavior As Integer)		        If Value Then		          SetCollectionBehavior(w.handle,NSWindowCollectionBehaviorFullScreenPrimary)		        Else		          SetCollectionBehavior(w.handle,NSWindowCollectionBehaviorFullScreenAuxillary)		        End If		      Catch err As RuntimeException		      End Try		    End If		  #EndIf		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function IsFullScreen(Extends W As Window) As Boolean		  #If TargetCocoa		    		    If Supported Then		      Try		        Soft Declare Function GetStyleMask Lib "AppKit" Selector "styleMask" (target As Integer) As Integer		        Dim Value As Integer = GetStyleMask(w.handle)		        Return Bitwise.BitAnd(Value,NSFullScreenWindowMask) = NSFullScreenWindowMask		      Catch err As RuntimeException		      End Try		    End If		  #EndIf		End Function	#tag EndMethod	#tag Method, Flags = &h1		Protected Function Supported() As Boolean		  Const kMacOSXMin = &h1070		  		  #If TargetMacOS		    		    Dim b As Boolean		    Dim res As Integer		    		    b = System.Gestalt( "sysv", res )		    If res >= kMacOSXMin Then		      Return True		    End If		    		  #EndIf		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub ToggleFullScreen(Extends W As Window)		  #If TargetCocoa		    If Supported Then		      Try		        Soft Declare Sub NSWindowToggleFullScreen Lib "AppKit" Selector "toggleFullScreen:" (target As Integer, sender As Ptr)		        NSWindowToggleFullScreen(w.handle,Nil)		      Catch err As RuntimeException		      End Try		    End If		  #EndIf		End Sub	#tag EndMethod	#tag Property, Flags = &h21		Private FullScreenEnabled As Boolean	#tag EndProperty	#tag Constant, Name = NSFullScreenWindowMask, Type = Double, Dynamic = False, Default = \"16384", Scope = Private	#tag EndConstant	#tag Constant, Name = NSWindowCollectionBehaviorFullScreenAuxillary, Type = Double, Dynamic = False, Default = \"256", Scope = Private	#tag EndConstant	#tag Constant, Name = NSWindowCollectionBehaviorFullScreenPrimary, Type = Double, Dynamic = False, Default = \"128", Scope = Private	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Module#tag EndModule