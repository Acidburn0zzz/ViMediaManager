#tag ClassProtected Class AppInherits Application	#tag Event		Sub Close()		  Preferences.WriteDefaults		End Sub	#tag EndEvent	#tag Event		Sub Open()		  App.DebugMode = Keyboard.AsyncAltKey		  RegisterMBS		  		  HelpAbout.Text = Menu.HelpAbout + App.kAppName		  		  Preferences.LoadDefaults		  Growl.Register		  		  VersionCurrent = str( App.MajorVersion ) + "." + str( App.MinorVersion )		  If App.BugVersion > 0 Then VersionCurrent = VersionCurrent + str( App.BugVersion )		  If App.StageCode = 2  Then VersionCurrent = VersionCurrent + "β" + str( App.NonReleaseVersion )		  If App.StageCode = 1  Then VersionCurrent = VersionCurrent + "α" + str( App.NonReleaseVersion )		  		  #If DebugBuild then		    InitializeSparkle("http://localhost/~Vidal/appcast.xml") // Local testing		  #Else		    InitializeSparkle("http://vidalvanbergen.github.com/ViMediaManager/appcast-alpha.xml") // Official appcast		  #EndIf		End Sub	#tag EndEvent	#tag Event		Function UnhandledException(error As RuntimeException) As Boolean		  #If NOT DebugBuild Then		    		    Dim Msg, st, Stack() as String		    		    If error IsA NilObjectException Then		      Msg = "Nil object exception " + Localizable.kError.Uppercase + ": " + str( error.ErrorNumber )		    ElseIf error IsA OutOfBoundsException Then		      Msg = "Out of Bounds " + Localizable.kError.Uppercase + ": " + str( error.ErrorNumber )		    ElseIf error IsA TypeMismatchException then		      Msg = "Type mismatch " + Localizable.kError.Uppercase + ": " + str( error.ErrorNumber )		    ElseIf error IsA StackOverflowException then		      Msg = "Stack over flow " + Localizable.kError.Uppercase + ": " + str( error.ErrorNumber )		    Else		      Msg = Localizable.kError.Uppercase + ": " + str( error.ErrorNumber )		    End If		    		    Stack = error.Stack		    		    If UBound(Stack) > 0 Then		      Msg = Msg + EndOfLine + "Stack: "		      For i as Integer = 0 to UBound(Stack)		        st = st + Stack(i) + EndOfLine		      Next		    End If		    		    System.Log( System.LogLevelError, Msg )		    If 1 = MsgDlg( Nil, 1, Msg, left(st, 600) + ".....", Localizable.dlgExit, Localizable.btnContinue ) Then Return True		  #EndIf		End Function	#tag EndEvent	#tag MenuHandler		Function EditPreferences() As Boolean Handles EditPreferences.Action			wndPreferences.Show			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpAbout() As Boolean Handles HelpAbout.Action			wndAbout.Show			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpCheckforUpdates() As Boolean Handles HelpCheckforUpdates.Action			Sparkle.CheckForUpdates(True)			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpContactAuthor() As Boolean Handles HelpContactAuthor.Action			ShowURL "mailto:vimediamanager@gmail.com"			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpDonate() As Boolean Handles HelpDonate.Action			ShowURL DonationURL			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpDownloadStudioLogosets() As Boolean Handles HelpDownloadStudioLogosets.Action			MsgBox Localizable.kInstructions + chr(13) + chr(13) + kLogoPackInstructions						ShowURL ( "http://forum.xbmc.org/showthread.php?t=100652" )			ShowURL ( "http://forum.xbmc.org/showthread.php?t=99554"  )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpVisitWebsite() As Boolean Handles HelpVisitWebsite.Action			ShowURL "http://vidalvanbergen.github.com/ViMediaManager/"			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function HelpVisitXBMCForumThread() As Boolean Handles HelpVisitXBMCForumThread.Action			ShowURL XBMCForumURL			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function WindowBringAlltoFront() As Boolean Handles WindowBringAlltoFront.Action			For i as Integer = WindowCount - 1 DownTo 0			Window( WindowCount - 1 ).Show			Next			Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h21		Private Function HandleSparkleCancelQuit() As Boolean		  Return True		End Function	#tag EndMethod	#tag Method, Flags = &h21		Private Sub HandleSparkleFoundVersion(isNew as Boolean, version as String)		  Dim Major, Minor, Bug, Stage, NonRelease As Integer = 0		  Dim VersionPart() as String = Version.Split(".")		  		  If VersionPart.Ubound = -1 then Return		  		  Major = Val( VersionPart(0) )		  If VersionPart.Ubound >= 1 then Minor      = Val( VersionPart(1) )		  If VersionPart.Ubound >= 2 then Bug        = Val( VersionPart(2) )		  If VersionPart.Ubound >= 3 then Stage      = Val( VersionPart(3) )		  If VersionPart.Ubound >= 4 then NonRelease = Val( VersionPart(4) )		  		  VersionNew = str( Major ) + "." + str( Minor )		  If Bug > 0   then VersionNew = VersionNew + "." + str( Bug )		  If Stage = 2 Then VersionNew = VersionNew + "β" + str( NonRelease )		  If Stage = 1 Then VersionNew = VersionNew + "α" + str( NonRelease )		  		  VersionNew = Version		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub InitializeSparkle(FeedURL as String)		  #If TargetMacOS Then		    //You can pass a FolderItem for Sparkle.framework, or you can pass nil.  In this case, Sparkle will look for Sparkle.framework		    //in the Frameworks subdirectory of the app bundle, in ~/Library/Frameworks, and in /Library/Frameworks.		    		    //setting this will prevent problems with unhandled NSExceptions		    Sparkle.UserDefault("SUFeedURL") = FeedURL		    		    Dim SparkleFrameworkLocation as FolderItem = Nil		    Sparkle.Initialize SparkleFrameworkLocation		    Sparkle.FoundVersionHandler = AddressOf HandleSparkleFoundVersion		    Sparkle.CancelQuitHandler   = AddressOf HandleSparkleCancelQuit		    		    Sparkle.CheckStatus		  #EndIf		End Sub	#tag EndMethod	#tag Property, Flags = &h0		DebugMode As Boolean = False	#tag EndProperty	#tag Property, Flags = &h0		VersionCurrent As String	#tag EndProperty	#tag Property, Flags = &h0		VersionNew As String	#tag EndProperty	#tag Constant, Name = DonationURL, Type = String, Dynamic = False, Default = \"https://www.paypal.com/cgi-bin/webscr\?cmd\x3D_donations&business\x3Dvidal%2evanbergen%40gmail%2ecom&lc\x3DGB&item_name\x3DViMediaManager&currency_code\x3DEUR&bn\x3DPP%2dDonationsBF%3abtn_donateCC_LG%2egif%3aNonHosted", Scope = Public	#tag EndConstant	#tag Constant, Name = Identifier, Type = String, Dynamic = False, Default = \"com.vidalvanbergen.vimediamanager-alpha", Scope = Public	#tag EndConstant	#tag Constant, Name = kAppName, Type = String, Dynamic = False, Default = \"ViMediaManager", Scope = Public	#tag EndConstant	#tag Constant, Name = kEditClear, Type = String, Dynamic = False, Default = \"&Delete", Scope = Public		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"&Delete"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"&Delete"	#tag EndConstant	#tag Constant, Name = kFileQuit, Type = String, Dynamic = False, Default = \"&Quit", Scope = Public		#Tag Instance, Platform = Windows, Language = Default, Definition  = \"E&xit"	#tag EndConstant	#tag Constant, Name = kFileQuitShortcut, Type = String, Dynamic = False, Default = \"", Scope = Public		#Tag Instance, Platform = Mac OS, Language = Default, Definition  = \"Cmd+Q"		#Tag Instance, Platform = Linux, Language = Default, Definition  = \"Ctrl+Q"	#tag EndConstant	#tag Constant, Name = kLogoPackInstructions, Type = String, Dynamic = True, Default = \"Once you\'ve downloaded the logo\'s pack\x2C put the pictures inside a folder named \"Studios\" in the same location as ViMediaManager or in the following path: \"~/Library/Application Support/ViMediaManager/Studios/\".\"", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"Once you\'ve downloaded the logo\'s pack\x2C put the pictures inside a folder named \"Studios\" in the same location as ViMediaManager or in the following path: \"~/Library/Application Support/ViMediaManager/Studios/\"."		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Wanneer je de studio logo\'s gedownload hebt\x2C plaats de plaatjes in een map genaamd \"Studios\" in de zelfde map als ViMediaManager\x2C of in de volgende locatie: \"~/Library/Application Support/ViMediaManager/Studios/\"."	#tag EndConstant	#tag Constant, Name = XBMCForumURL, Type = String, Dynamic = False, Default = \"http://forum.xbmc.org/showthread.php\?p\x3D886768", Scope = Public	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="DebugMode"			Group="Behavior"			InitialValue="False"			Type="Boolean"		#tag EndViewProperty		#tag ViewProperty			Name="VersionCurrent"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="VersionNew"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass