#tag WindowBegin ContainerControl ccThumbView   AcceptFocus     =   ""   AcceptTabs      =   True   AutoDeactivate  =   True   BackColor       =   16777215   Backdrop        =   ""   Enabled         =   True   EraseBackground =   True   HasBackColor    =   False   Height          =   300   HelpTag         =   ""   InitialParent   =   ""   Left            =   0   LockBottom      =   ""   LockLeft        =   ""   LockRight       =   ""   LockTop         =   ""   TabIndex        =   0   TabPanelIndex   =   0   TabStop         =   True   Top             =   0   UseFocusRing    =   ""   Visible         =   True   Width           =   300   Begin Canvas cvsPreview      AcceptFocus     =   ""      AcceptTabs      =   ""      AutoDeactivate  =   True      Backdrop        =   ""      DoubleBuffer    =   False      Enabled         =   True      EraseBackground =   True      Height          =   300      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      Scope           =   0      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      Top             =   0      UseFocusRing    =   True      Visible         =   True      Width           =   284   End   Begin ScrollBar scrBar      AcceptFocus     =   true      AutoDeactivate  =   True      Enabled         =   True      Height          =   300      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   284      LineStep        =   1      LiveScroll      =   True      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   False      LockRight       =   True      LockTop         =   True      Maximum         =   0      Minimum         =   0      PageStep        =   128      Scope           =   0      TabIndex        =   1      TabPanelIndex   =   0      TabStop         =   True      Top             =   0      Value           =   0      Visible         =   True      Width           =   16   EndEnd#tag EndWindow#tag WindowCode	#tag Event		Function KeyDown(Key As String) As Boolean		  		  // Up Arrow		  If Keyboard.AsyncKeyDown( &h7E ) Then		    If Selection < MaxCols Then		      'Selection = 0		    Else		      Selection = Selection - MaxCols		    End If		  End If		  		  // Down Arrow		  If Keyboard.AsyncKeyDown( &h7D ) Then		    If Selection > Thumbs.Ubound - MaxCols Then		      'Selection = Thumbs.Ubound		    Else		      Selection = Selection + MaxCols		    End If		  End If		  		  // Right Arrow		  If Keyboard.AsyncKeyDown( &h7C ) And Selection < Thumbs.Ubound Then Selection = Selection + 1		  		  // Left Arrow		  If Keyboard.AsyncKeyDown( &h7B ) And Selection > 0 Then Selection = Selection - 1		  		  AdjustScrollBar()		  		  SelectionChanged Selection		  Refresh		End Function	#tag EndEvent	#tag Method, Flags = &h21		Private Sub AdjustScrollBar()		  // Adjust ScrollBar		  If scrBar.Value + ( MaxRowsOnScreen * ( ThumbSize + 15 ) ) < ( ( Selection + 1 ) / MaxCols ) * ( ThumbSize + 15 ) Then		    // Down		    scrBar.Value = scrBar.Value + ( ThumbSize + 15 )		    'scrBar.Value = ( Selection / MaxCols ) * ( ThumbSize - 10 )		  ElseIf scrBar.Value > ( ( Selection ) / MaxCols ) * ( ThumbSize + 15 ) Then		    // Up		    scrBar.Value = scrBar.Value - ( ThumbSize + 15 )		    'scrBar.Value = ( Selection / MaxCols ) * ( ThumbSize + 20 )		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Sub GetSelection(X as Integer, Y as Integer)		  Dim ColumnSize as Integer = Width / ( MaxCols * ( ThumbSize + 15 ) )		  Dim Column as Integer = (x-5) / ( ThumbSize + 15 )		  Dim Row as Integer = ((Y-5) + scrBar.Value) / ( ThumbSize + 15 )		  		  Selection = ( Row * MaxCols )  + Column		  'MsgBox Str( Column ) + " >= " + Str( MaxCols )		  'If Selection > Thumbs.Ubound or Column > (MaxCols +1) Then Selection = -1		  If Selection > Thumbs.Ubound Then Selection = -1		  If Row > (MaxRows-1) Then Selection = -1		  		  SelectionChanged( Selection )		End Sub	#tag EndMethod	#tag Hook, Flags = &h0		Event DoubleClick(X as Integer, Y as Integer)	#tag EndHook	#tag Hook, Flags = &h0		Event SelectionChanged(Selection as Integer)	#tag EndHook	#tag Property, Flags = &h0		Dimensions() As String	#tag EndProperty	#tag Property, Flags = &h0		Locations() As String	#tag EndProperty	#tag Property, Flags = &h0		MaxCols As Integer	#tag EndProperty	#tag Property, Flags = &h0		MaxRows As Integer	#tag EndProperty	#tag Property, Flags = &h0		MaxRowsOnScreen As Integer = 0	#tag EndProperty	#tag Property, Flags = &h0		Selection As Integer = -1	#tag EndProperty	#tag Property, Flags = &h0		Thumbs() As Picture	#tag EndProperty	#tag Property, Flags = &h0		ThumbSize As Integer = 32	#tag EndProperty#tag EndWindowCode#tag Events cvsPreview	#tag Event		Sub Paint(g As Graphics)		  // Background		  g.ForeColor = &c929292		  g.FillRect 0, 0, Width, Height		  		  If Thumbs.Ubound = -1 Then Return		  		  Dim ThumbLeft, ThumbTop, CurrentRow, ThumbPadding, CountMaxCols as Integer = 0		  Dim CurrentColumn as Integer = -1		  ThumbPadding = ThumbSize + 10		  		  'MaxCols = ( width - 5 ) / ( ThumbPadding + 10 ) - 1		  'MaxRows = ( Thumbs.Ubound + 1 ) / MaxCols		  		  'scrBar.Maximum = ( MaxRows - 1 ) * ThumbPadding ' ( ( MaxRows - 1 ) * ( ThumbPadding + 10 ) ) + 10		  		  For i as Integer = 0 To Thumbs.Ubound		    		    Dim Pic as Picture = ScaleImage( Thumbs(i), ThumbSize, ThumbSize, True )		    		    CurrentColumn = CurrentColumn + 1		    		    If Thumbleft + ( 2 * ( 5 + ThumbPadding ) ) + 15 >= Width And i > 0 Then		      'If CurrentColumn > MaxCols Then		      If CurrentColumn > CountMaxCols Then CountMaxCols = CurrentColumn		      CurrentColumn = 0		      CurrentRow = CurrentRow + 1		    End If		    		    ThumbLeft = 5 + ( ( 5 + ThumbPadding ) * CurrentColumn )		    ThumbTop = 5 + ( ( 5 + ThumbPadding ) * CurrentRow )		    		    If i <> Selection Then		      // Draw Thumb BG + Padding		      g.ForeColor = &cA2A2A2		      g.FillRect ThumbLeft, ThumbTop - scrBar.Value, ThumbPadding, ThumbPadding		      		      g.ForeColor = &c303030		      g.DrawRect ThumbLeft, ThumbTop - scrBar.Value, ThumbPadding, ThumbPadding		      		    ElseIf i = Selection Then		      // Draw Selection BG		      g.DrawGradient( &c3E3E3E, &c6E6E6E, ThumbLeft, ThumbTop - scrBar.Value, ThumbPadding, ThumbPadding - 1 )		      		      g.ForeColor = &cFFFFFF		      g.DrawRect ThumbLeft, ThumbTop - scrBar.Value, ThumbPadding, ThumbPadding		    End If		    		    g.DrawPicture Pic, _		    ThumbLeft + (ThumbPadding / 2 ) - ( Pic.Width / 2 ), _		    ThumbTop + ( ThumbPadding / 2 ) - ( Pic.Height / 2 ) - scrBar.Value		    		    // Draw Dimensions		    If Dimensions.Ubound = Thumbs.Ubound And ThumbSize >= 128 Then'And i <> Selection Then		      g.TextSize = 10		      		      g.ForeColor = &cEEEEEE		      g.FillRect ThumbLeft + 3, ThumbTop +4 - scrBar.Value, g.StringWidth( Dimensions(i) ) + 6, 12		      		      g.ForeColor = &c000000		      g.DrawRect ThumbLeft + 3, ThumbTop +3 - scrBar.Value, g.StringWidth( Dimensions(i) ) + 6, 14		      		      g.DrawString Dimensions(i), ThumbLeft + 6, g.TextSize + ThumbTop + 4 - scrBar.Value, 96, True		    End If		    		  Next		  		  MaxRowsOnScreen = (Height - 5) / ( ThumbPadding + 5 )		  		  MaxCols = CountMaxCols		  MaxRows = Ceil( ( Thumbs.Ubound + 1 ) / MaxCols )		  		  Dim s as Integer = ( 5 + ( ( 5 + ThumbPadding ) * ( MaxRows - MaxRowsOnScreen ) ) )		  If s > 0 And Thumbs.Ubound > MaxCols And MaxRows > 0 Then scrBar.Maximum = s Else scrBar.Maximum = 0		  'scrBar.Maximum = ( 5 + ( ( 5 + ThumbPadding ) * ( MaxRows - MaxRowsOnScreen ) ) )'( MaxRows - 1 ) * ( ThumbPadding + 5 )		  		  g.ForeColor = RGB( 194, 194, 194 )		  g.DrawLine 0, Me.Height - 1, Me.Width, Me.Height - 1		End Sub	#tag EndEvent	#tag Event		Function MouseDown(X As Integer, Y As Integer) As Boolean		  If X < Width - 5 And X > 5 And _		    Y < Height - 5 And Y > 5 Then _		    GetSelection( X, Y ) Else Selection = -1		    		    AdjustScrollBar()		    		    Refresh		    Return True		End Function	#tag EndEvent	#tag Event		Sub MouseDrag(X As Integer, Y As Integer)		  If X < Width - 5 And X > 5 And _		    Y < Height - 5 And Y > 5 Then _		    GetSelection( X, Y ) Else Selection = -1		    		    AdjustScrollBar()		    		    Refresh		End Sub	#tag EndEvent	#tag Event		Function MouseWheel(X As Integer, Y As Integer, deltaX as Integer, deltaY as Integer) As Boolean		  scrBar.Value = scrBar.Value + ( deltaY * 4 )		End Function	#tag EndEvent	#tag Event		Sub DoubleClick(X As Integer, Y As Integer)		  DoubleClick( X, Y )		End Sub	#tag EndEvent#tag EndEvents#tag Events scrBar	#tag Event		Sub ValueChanged()		  cvsPreview.Refresh		End Sub	#tag EndEvent#tag EndEvents