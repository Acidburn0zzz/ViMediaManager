#tag ClassProtected Class PreviewCanvasInherits Canvas	#tag Event		Sub DragExit(obj As DragItem, action As Integer)		  Invalidate( False )		End Sub	#tag EndEvent	#tag Event		Function DragOver(x As Integer, y As Integer, obj As DragItem, action As Integer) As Boolean		  If obj <> Nil then		    		    Dim DropPic as Picture		    Dim PicDimensions as String		    Dim g as Graphics = Me.Graphics		    		    g.ForeColor = &c626262		    g.FillRect 0, 0, Width, Height		    		    g.ForeColor = &c000000		    g.DrawRect 0, 0, Width, Height		    		    DropPic = ScaleImage( Picture.Open( obj.FolderItem ), Width, Height )		    g.DrawPicture DropPic, ( Width / 2 ) - ( DropPic.Width / 2 ), ( Height / 2 ) - ( DropPic.Height / 2 )		    		    PicDimensions = Localizable.kSize + " " + str( DropPic.Width ) + "x" + str( DropPic.Height )		    		    g.TextSize = 11		    g.Bold     = True		    		    g.ForeColor = &cFFFFFF		    g.FillRect 3, 3, g.StringWidth( PicDimensions ) + 10, g.TextHeight + 10		    		    g.ForeColor = &c000000		    g.DrawRect 3, 3, g.StringWidth( PicDimensions ) + 10, g.TextHeight + 10		    		    g.DrawString PicDimensions, 8, 8 + g.TextSize		    		    g.ForeColor = &c000000		    g.DrawRect 0, 0, Width, Height		    		  End If		  		  Return True		End Function	#tag EndEvent	#tag Event		Sub DropObject(obj As DragItem, action As Integer)		  If obj.FolderItemAvailable and obj.FolderItem <> Nil then AddImage obj.FolderItem		End Sub	#tag EndEvent	#tag Event		Sub Open()		  AcceptFileDrop( "image/png" )		  AcceptFileDrop( "image/jpg" )		  		  Open()		End Sub	#tag EndEvent	#tag Event		Sub Paint(g As Graphics)		  Dim Pic as Picture		  Dim PicDimensions as String		  		  g.ForeColor = &c929292		  g.FillRect 0, 0, Width, Height		  If PreviewArt <> Nil then		    Pic = ScaleImage( PreviewArt, Width, Height )		    g.DrawPicture Pic, ( Width / 2 ) - ( Pic.Width / 2 ), ( Height / 2 ) - ( Pic.Height / 2 )		    		    PicDimensions = Localizable.kSize + " " + str( PreviewArt.Width ) + "x" + str( PreviewArt.Height )		    		    g.TextSize = 11		    g.Bold     = True		    		    g.ForeColor = &cFFFFFF		    g.FillRect 3, 3, g.StringWidth( PicDimensions ) + 10, g.TextHeight + 10		    		    g.ForeColor = &c000000		    g.DrawRect 3, 3, g.StringWidth( PicDimensions ) + 10, g.TextHeight + 10		    		    g.DrawString PicDimensions, 8, 8 + g.TextSize		  End If		  		  g.ForeColor = &c000000		  g.DrawRect 0, 0, Width, Height		End Sub	#tag EndEvent	#tag Method, Flags = &h0		Sub AddImage(AddItem as FolderItem)		  If AddItem = Nil or NOT AddItem.Exists then Return		  		  Dim PathParent, PathDestination, MovieFile as FolderItem		  Dim Message as String		  Dim MovieMode as Boolean = False		  		  Message = Mode + msgMessage		  		  // Folder Parent		  Select Case wndMain.ppMain.Value		  case 0		    PathParent = MovieAttr.FolderParent		    MovieFile = FindMovieItem( PathParent )		    MovieMode  = True		  case 1		    // PathParent = TVAttr.FolderParent		  case 2		    // PathParent = AnimeAttr.FolderParent		  End Select		  		  // Destination		  Select Case Mode		    		  Case "Poster"		    PathDestination = FindImagePoster( PathParent )		  Case "Fanart"		    PathDestination = FindImageFanart( PathParent )		  Case "Banner"		    PathDestination = PathParent.Child( "banner.jpg" )		  Case "ClearArt"		    PathDestination = PathParent.Child( "clearart.png" )		  Case "CharacterArt"		    PathDestination = PathParent.Child( "character.png" )		  Case "Logo"		    PathDestination = PathParent.Child( "logo.png" )		  Case "TVThumb"		    PathDestination = PathParent.Child( "landscape.jpg" )		    		  End Select		  		  If PathDestination <> Nil and PathDestination.Exists then		    		    Dim FileName as String = PathDestination.NameWithoutExtension		    		    If dlgWindow( Message, msgExplanation ) = 1 then		      PathDestination.Delete		      		      If AddItem.Type = "image/png" then		        AddItem.CopyFileTo PathParent.Child( FileName + ".png" )		      ElseIf AddItem.Type = "image/jpg" then		        AddItem.CopyFileTo PathParent.Child( FileName + ".jpg" )		      End If		      		    End If		    		  Else		    		    If MovieMode and MovieFile <> Nil and MovieFile.Exists then		      		      If Mode = "Poster" then		        AddItem.CopyFileTo PathParent.Child( Prefs.textStringForKey( "FileNamePoster" ).ReplaceAll( "<movie>", MovieFile.NameWithoutExtension ) )		      ElseIf Mode = "Fanart" then		        AddItem.CopyFileTo PathParent.Child( Prefs.textStringForKey( "FileNameFanart" ).ReplaceAll( "<movie>", MovieFile.NameWithoutExtension ) )		      End If		      		    ElseIf MovieMode and ( MovieFile = Nil or NOT MovieFile.Exists ) then		      		      If Mode = "Poster" then		        AddItem.CopyFileTo PathParent.Child( Prefs.textStringForKey( "FileNamePoster" ).ReplaceAll( "<movie>", "poster" ) )		      ElseIf Mode = "Fanart" then		        AddItem.CopyFileTo PathParent.Child( "fanart.jpg" )		      End if		      		      		    ElseIf NOT MovieMode Then		      		      If AddItem.Type = "image/png" then		        AddItem.CopyFileTo PathParent.Child( PathDestination.NameWithoutExtension + ".png" )		      ElseIf AddItem.Type = "image/jpg" then		        AddItem.CopyFileTo PathParent.Child( PathDestination.NameWithoutExtension + ".jpg" )		      End If		      		    End If		    		  End If		  		  If MovieMode then MovieAttr.LoadImages PathParent // Else TVAttr.LoadImages		  Invalidate False		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Reload(Pic as Picture)		  PreviewArt = Pic		  Invalidate False		End Sub	#tag EndMethod	#tag Hook, Flags = &h0		Event Open()	#tag EndHook	#tag Property, Flags = &h0		Mode As String = "Poster"	#tag EndProperty	#tag Property, Flags = &h0		PreviewArt As Picture	#tag EndProperty	#tag Constant, Name = msgExplanation, Type = String, Dynamic = True, Default = \"If you choose \'OK\'\x2C the existing image will be replaced with the new image.", Scope = Private		#Tag Instance, Platform = Any, Language = en, Definition  = \"If you choose \'OK\'\x2C the existing image will be replaced with the new image."		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Als je \'OK\' kiest\x2C dan wordt het bestaande plaatje vervangen met het nieuwe plaatje."	#tag EndConstant	#tag Constant, Name = msgMessage, Type = String, Dynamic = True, Default = \" image already exists\x2C do you want to replace the existing image\?", Scope = Private		#Tag Instance, Platform = Any, Language = en, Definition  = \" image already exists\x2C do you want to replace the existing image\?"		#Tag Instance, Platform = Any, Language = nl, Definition  = \" plaatje bestaat al\x2C wil je het bestaande plaatje vervangen\?"	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="AcceptFocus"			Visible=true			Group="Behavior"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="AcceptTabs"			Visible=true			Group="Behavior"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="AutoDeactivate"			Visible=true			Group="Appearance"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Backdrop"			Visible=true			Group="Appearance"			Type="Picture"			EditorType="Picture"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="DoubleBuffer"			Visible=true			Group="Behavior"			InitialValue="False"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Enabled"			Visible=true			Group="Appearance"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="EraseBackground"			Visible=true			Group="Behavior"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Height"			Visible=true			Group="Position"			InitialValue="100"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="HelpTag"			Visible=true			Group="Appearance"			Type="String"			EditorType="MultiLineEditor"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="InitialParent"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="LockBottom"			Visible=true			Group="Position"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="LockLeft"			Visible=true			Group="Position"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="LockRight"			Visible=true			Group="Position"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="LockTop"			Visible=true			Group="Position"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Mode"			Group="Behavior"			InitialValue="Poster"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			Type="String"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="PreviewArt"			Group="Behavior"			Type="Picture"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="TabIndex"			Visible=true			Group="Position"			InitialValue="0"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="TabPanelIndex"			Group="Position"			InitialValue="0"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="TabStop"			Visible=true			Group="Position"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="UseFocusRing"			Visible=true			Group="Appearance"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Visible"			Visible=true			Group="Appearance"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Width"			Visible=true			Group="Position"			InitialValue="100"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass