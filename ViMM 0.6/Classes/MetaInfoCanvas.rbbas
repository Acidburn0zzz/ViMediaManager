#tag ClassProtected Class MetaInfoCanvasInherits Canvas	#tag Event		Sub Paint(g As Graphics)		  g.ForeColor = &cFFFFFF		  g.FillRect 0, 0, me.Width, me.Height		  		  If wndMain.ppMain.Value = 0 then		    If NOT App.DebugMode then		      If MovieAttr.ART_Fanart      <> Nil then DrawFanart MovieAttr.ART_Fanart Else DrawFanart IMGmovies		      If MovieAttr.ART_Poster      <> Nil then DrawPoster MovieAttr.ART_Poster		    End If		    		    If MovieAttr.ART_Studio      <> Nil then DrawStudioLogo MovieAttr.ART_Studio		    If MovieAttr.ART_MPAARating  <> Nil then DrawMPAARating MovieAttr.ART_MPAARating		    		    		    If wndMain.lstMovies.ListIndex > -1   then WriteTitle wndMain.lstMovies.Cell( wndMain.lstMovies.ListIndex, 0 ), MovieAttr.ART_Poster <> Nil		    If MovieAttr.DescriptionTagline <> "" then WriteTagline MovieAttr.DescriptionTagline, MovieAttr.ART_Poster <> Nil		    If MovieAttr.Rating >  0              then DrawRatingStars MovieAttr.Rating, MovieAttr.ART_Poster <> Nil, MovieAttr.DescriptionTagline <> ""		    		    WriteGeneralInfo _		    MovieAttr.DatePremiered,_		    MovieAttr.InfoVideoRuntime,_		    MovieAttr.Genres,_		    "",_		    MovieAttr.ART_Poster <> Nil,_		    MovieAttr.DescriptionTagline <> "",_		    MovieAttr.Rating > 0		    		    If MovieAttr.DescriptionPlot <> "" then WriteSummary MovieAttr.DescriptionPlot,_		    MovieAttr.ART_Poster <> Nil,_		    MovieAttr.DescriptionTagline <> "",_		    MovieAttr.Rating > 0		    		    'DrawMovieThumbs		    		  ElseIf wndMain.ppMain.Value = 1 then		    		    		  ElseIf wndMain.ppMain.Value = 2 then		    		    		  End If		  		  		  // Debug		  // g.ForeColor = &cFF0000		  // g.DrawRect 0, 0, me.Width, me.Height		End Sub	#tag EndEvent	#tag Method, Flags = &h0		Sub DrawBanner(Banner as Picture)		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub DrawCharacterArt(CharacterArt as Picture, BannerAvailable as Boolean = True, MPAARatingAvailable as Boolean = True)		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub DrawClearArt(ClearArt as Picture)		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub DrawFanart(Fanart as Picture)		  Dim Pic as New Picture( Width, Height, 32 )		  		  Pic = ScaleImage( Fanart, Pic.Width, Pic.Height, True, True, False )		  Pic.Graphics.DrawPicture IMGFanartOverlay, 0, 0, pic.Width, pic.Height,    0, 0, IMGFanartOverlay.Width, IMGFanartOverlay.Height		  		  Graphics.DrawPicture Pic, 0, 0		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub DrawLogo(Logo as Picture, ClearArtAvailable as Boolean = True)		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub DrawMovieThumbs()		  Dim Pic as New Picture( Width, Height, 32 )		  Dim MyThumb as Picture		  Dim ExtraThumbs as FolderItem = MovieAttr.FolderParent.Child("extrathumbs")		  //Dim f() as FolderItem		  Dim t as Integer = 3		  Dim f as FolderItem		  		  If ExtraThumbs <> Nil And extrathumbs.Exists Then		    		    If ExtraThumbs.Count <= 3 Then t = ExtraThumbs.Count - 1		    		    For i as Integer = 0 to t // ExtraThumbs.Count		      f = ExtraThumbs.Item( ExtraThumbs.Count - i )		      If f <> Nil and f.Exists then		        MyThumb = Picture.Open( ExtraThumbs.Item( ExtraThumbs.Count - i ) )		        Pic = ScaleImage( MyThumb, 100, 150 / 2, False, False, True )		        If Pic <> Nil Then		          Graphics.DrawPicture Pic, 20, Me.Height - ( ( ( 150 / 2 ) + 10 )  * i ) - 170		          Graphics.ForeColor = RGB( 0, 0, 0 )		          Graphics.DrawRect( 19, Me.Height - ( ( ( 150 / 2 ) + 10 )  * i ) - 169, Pic.Width + 1, Pic.Height )		        End If		      End If		    Next		    		  End If		  		  'Pic = ScaleImage( Fanart, Pic.Width, Pic.Height, True, True, False )		  'Pic.Graphics.DrawPicture IMGFanartOverlay, 0, 0, pic.Width, pic.Height,    0, 0, IMGFanartOverlay.Width, IMGFanartOverlay.Height		  		  'Graphics.DrawPicture Pic, 0, 0		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub DrawMPAARating(MPAARating as Picture, BannerAvailable as Boolean = True)		  //Graphics.ForeColor = RGB( 220, 220, 220 )		  Graphics.ForeColor = RGB( 220, 220, 220 )		  If MPAARating = Rating_G    then Graphics.ForeColor = RGB( 166, 220, 166 )		  If MPAARating = Rating_PG   then Graphics.ForeColor = RGB( 220, 220, 166 )		  If MPAARating = Rating_PG13 then Graphics.ForeColor = RGB( 220, 188, 110 )		  If MPAARating = Rating_NC17 then Graphics.ForeColor = RGB( 220, 166, 166 )		  If MPAARating = Rating_R    then Graphics.ForeColor = RGB( 220, 110, 110 )		  		  Graphics.FillRect 20, _		  Height - MPAARating.Height - 20 - 10, _		  MPAARating.Width + 10, _		  MPAARating.Height + 10		  		  Graphics.ForeColor = RGB( 0, 0, 0 )		  Graphics.DrawRect 20, _		  Height - MPAARating.Height - 20 - 10, _		  MPAARating.Width + 10, _		  MPAARating.Height + 10		  		  Graphics.DrawPicture MPAARating, 25, Height - MPAARating.Height - 25		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub DrawPoster(Poster as Picture)		  Dim Pic as Picture		  		  Pic = New Picture( 154, 231, 32 )		  Pic.Graphics.DrawPicture( Poster,        2, 1, 150, 225,   0, 0, Poster.Width, Poster.Height )		  Pic.Graphics.DrawPicture( PosterOverlay, 0, 0, Pic.Width, Pic.Height )		  Pic.Mask = PosterMask		  		  Graphics.DrawPicture Pic, 19, 15		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub DrawRatingStars(Rating as Double, PosterExists as Boolean = False, OutlineExists as Boolean = False)		  Dim StarLeftStart as Integer = 20		  Dim StarTop       as Integer = 50		  		  If PosterExists  then StarLeftStart = 190		  If OutlineExists then StarTop = 80		  		  // Empty Stars		  For i as Integer = 1 to 10		    Graphics.DrawPicture starempty, StarLeftStart, StarTop		    StarLeftStart = StarLeftStart + 40		  Next		  		  // Text Rating		  Graphics.Bold     = True		  Graphics.Italic   = False		  Graphics.TextSize = 32		  		  Dim strRating as String = str( Rating )		  If str( Rating ).Len = 1 then strRating = str( Rating ) + ".0"		  		  Graphics.DrawString strRating, StarLeftStart + 10, StarTop + Graphics.TextSize - 3		  		  // Full Stars		  If PosterExists then StarLeftStart = 190 else StarLeftStart = 20		  Dim FullStars as Double = Rating		  		  For i as Integer = 1 to Rating + 1.0		    FullStars = FullStars - 1		    Graphics.DrawPicture starfull, StarLeftStart, StarTop, starfull.Width * FullStars + starfull.Width, starfull.Height		    StarLeftStart = StarLeftStart + 40		  Next		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub DrawStudioLogo(StudioLogo as Picture)		  Graphics.DrawPicture StudioLogo, Width - StudioLogo.Width - 10, 0		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub DrawThumb(Thumb as Picture, PosterAvailable as Boolean = True)		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub WriteGeneralInfo(Premiered as String, Runtime as String, Genres() as String, Status as String = "", PosterExists as Boolean = False, TagLineExists as Boolean = False, StarsExist as Boolean = False)		  Dim GeneralInfoTop  as Integer = 50		  Dim GeneralInfoLeft as Integer = 20		  		  If PosterExists  then GeneralInfoLeft = 190		  If TagLineExists then GeneralInfoTop = GeneralInfoTop + 30		  If StarsExist    then GeneralInfoTop = GeneralInfoTop + 40		  		  Graphics.TextSize = 12		  Graphics.Italic   = False		  GeneralInfoCount = 0		  		  // Runtime		  If Runtime <> "" then		    Graphics.Bold     = True		    Graphics.DrawString Localizable.kRuntime,  GeneralInfoLeft, GeneralInfoTop + Graphics.TextSize + ( 18 * GeneralInfoCount )		    		    Graphics.Bold     = False		    Graphics.DrawString Val( MovieAttr.InfoVideoRuntime ).Minutes2Hours, GeneralInfoLeft + 100, GeneralInfoTop + Graphics.TextSize + ( 18 * GeneralInfoCount )		  End If		  		  // Premiered		  If Premiered <> "" then		    Graphics.Bold     = True		    GeneralInfoCount  = GeneralInfoCount + 1		    Graphics.DrawString Localizable.kPremiered, GeneralInfoLeft, GeneralInfoTop + Graphics.TextSize + ( 18 * GeneralInfoCount )		    		    Graphics.Bold     = False		    Dim DateString as String		    Dim DDate() as String = split( Premiered, "-" )		    If DDate.Ubound = 2 then		      DateString = DDate(2) + " " + Int2Month( Val( DDate(1) ) ) + ", " + DDate(0)		    ElseIf DDate.Ubound = 1 then		      DateString = Int2Month( Val( DDate(1) ) ) + ", " + DDate(0)		    ElseIf DDate.Ubound = 0 then		      DateString = DDate(0)		    End If		    		    Graphics.DrawString DateString, GeneralInfoLeft + 100, GeneralInfoTop + Graphics.TextSize + ( 18 * GeneralInfoCount )		  End If		  		  // Genres		  If Genres.Ubound > -1 then		    Graphics.Bold     = True		    GeneralInfoCount = GeneralInfoCount + 1		    		    Dim strGenre as String = Localizable.kGenre		    If genres.Ubound > 0 then strGenre = Localizable.kGenres		    Graphics.DrawString strGenre,    GeneralInfoLeft, GeneralInfoTop + Graphics.TextSize + ( 18 * GeneralInfoCount )		    		    Graphics.Bold     = False		    Dim strGenres as String		    For i as Integer = 0 to MovieAttr.Genres.Ubound		      If i = MovieAttr.Genres.Ubound then		        strGenres = strGenres + MovieAttr.Genres(i)		      Else		        strGenres = strGenres + MovieAttr.Genres(i) + ", "		      End If		    Next		    		    Graphics.DrawString strGenres, GeneralInfoLeft + 100, GeneralInfoTop + Graphics.TextSize + ( 18 * GeneralInfoCount ), Width - ( GeneralInfoLeft + 100 ) - 20, True		  End If		  		  // Status		  If Status <> "" then		    Graphics.Bold = True		    GeneralInfoCount = GeneralInfoCount + 1		    Graphics.DrawString Localizable.kStatus, GeneralInfoLeft, GeneralInfoTop + Graphics.TextSize + ( 18 * GeneralInfoCount )		    Graphics.Bold = False		    Graphics.DrawString Status,    GeneralInfoLeft, GeneralInfoTop + Graphics.TextSize + ( 18 * GeneralInfoCount )		  End If		  		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub WriteSummary(Summary as String, PosterExists as Boolean = False, TagLineExists as Boolean = False, StarsExist as Boolean = False)		  Dim GeneralInfoTop  as Integer = 50		  Dim GeneralInfoLeft as Integer = 20		  		  If PosterExists  then GeneralInfoLeft = 190		  If TagLineExists then GeneralInfoTop = GeneralInfoTop + 30		  If StarsExist    then GeneralInfoTop = GeneralInfoTop + 40		  		  GeneralInfoCount = GeneralInfoCount + 2		  Graphics.Bold = True		  Graphics.DrawString Localizable.kPlot, GeneralInfoLeft, GeneralInfoTop + Graphics.TextSize + ( 18 * GeneralInfoCount )		  		  GeneralInfoCount = GeneralInfoCount + 1		  Graphics.Bold = False		  Graphics.DrawString Summary,    GeneralInfoLeft, GeneralInfoTop + Graphics.TextSize + ( 18 * GeneralInfoCount ), Width - GeneralInfoLeft - 20, False		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub WriteTagline(Tagline as String, PosterExists as Boolean = False)		  Dim TagLineLeft as Integer = 20		  If PosterExists then TagLineLeft = 190		  		  Graphics.Bold     = False		  Graphics.Italic   = True		  Graphics.TextSize = 12		  Graphics.DrawString Tagline, TagLineLeft, 45 + Graphics.TextSize, Width - TagLineLeft - 161 - 20, False		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub WriteTitle(Title as String, PosterExists as Boolean = False)		  Graphics.Bold = True		  		  If Title.Len >= 56 then		    Graphics.TextSize = 14		  Elseif Title.Len >= 36 then		    Graphics.TextSize = 18		  Else		    Graphics.TextSize = 28		  End If		  		  Dim TitleLeft     as Integer   =  20		  If PosterExists then TitleLeft = 190		  Graphics.DrawString Title, TitleLeft, 10 + Graphics.TextSize, Width - 300 - 84, True		  		End Sub	#tag EndMethod	#tag Property, Flags = &h0		GeneralInfoCount As Integer = 0	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="AcceptFocus"			Visible=true			Group="Behavior"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="AcceptTabs"			Visible=true			Group="Behavior"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="AutoDeactivate"			Visible=true			Group="Appearance"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Backdrop"			Visible=true			Group="Appearance"			Type="Picture"			EditorType="Picture"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="DoubleBuffer"			Visible=true			Group="Behavior"			InitialValue="False"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Enabled"			Visible=true			Group="Appearance"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="EraseBackground"			Visible=true			Group="Behavior"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="GeneralInfoCount"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="Height"			Visible=true			Group="Position"			InitialValue="100"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="HelpTag"			Visible=true			Group="Appearance"			Type="String"			EditorType="MultiLineEditor"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="InitialParent"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="LockBottom"			Visible=true			Group="Position"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="LockLeft"			Visible=true			Group="Position"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="LockRight"			Visible=true			Group="Position"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="LockTop"			Visible=true			Group="Position"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			Type="String"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="TabIndex"			Visible=true			Group="Position"			InitialValue="0"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="TabPanelIndex"			Group="Position"			InitialValue="0"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="TabStop"			Visible=true			Group="Position"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="UseFocusRing"			Visible=true			Group="Appearance"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Visible"			Visible=true			Group="Appearance"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Width"			Visible=true			Group="Position"			InitialValue="100"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass