#tag WindowBegin Window wndMain   BackColor       =   &hFFFFFF   Backdrop        =   ""   CloseButton     =   True   Composite       =   False   Frame           =   0   FullScreen      =   False   HasBackColor    =   False   Height          =   760   ImplicitInstance=   True   LiveResize      =   True   MacProcID       =   0   MaxHeight       =   32000   MaximizeButton  =   True   MaxWidth        =   32000   MenuBar         =   343001748   MenuBarVisible  =   True   MinHeight       =   500   MinimizeButton  =   True   MinWidth        =   700   Placement       =   2   Resizeable      =   True   Title           =   "#App.kAppName"   Visible         =   True   Width           =   1024   Begin PagePanel ppMain      AutoDeactivate  =   True      Enabled         =   True      Height          =   760      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      PanelCount      =   3      Panels          =   ""      Scope           =   0      TabIndex        =   0      TabPanelIndex   =   0      Top             =   0      Value           =   0      Visible         =   True      Width           =   1024      Begin ListMovies lstMovies         AutoDeactivate  =   True         AutoHideScrollbars=   True         Bold            =   ""         Border          =   True         ColumnCount     =   15         ColumnsResizable=   ""         ColumnWidths    =   "100%, 0"         DataField       =   ""         DataSource      =   ""         DefaultRowHeight=   42         Enabled         =   True         EnableDrag      =   False         EnableDragReorder=   ""         GridLinesHorizontal=   0         GridLinesVertical=   0         HasHeading      =   False         HeadingIndex    =   -1         Height          =   704         HelpTag         =   ""         Hierarchical    =   False         Index           =   -2147483648         InitialParent   =   "ppMain"         InitialValue    =   ""         Italic          =   ""         LastKeyPressedAt=   ""         Left            =   -1         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         RequiresSelection=   True         Scope           =   0         ScrollbarHorizontal=   ""         ScrollBarVertical=   True         SelectionType   =   0         TabIndex        =   0         TabPanelIndex   =   1         TabStop         =   True         TextFont        =   "System"         TextSize        =   11         TextUnit        =   0         Top             =   33         Underline       =   ""         UseFocusRing    =   False         Visible         =   True         Width           =   300         _ScrollWidth    =   -1      End      Begin MetaInfoCanvas cvsMovies         AcceptFocus     =   ""         AcceptTabs      =   ""         AutoDeactivate  =   True         Backdrop        =   ""         btnLeft         =   ""         btnRight        =   ""         btnTop          =   ""         DoubleBuffer    =   False         Enabled         =   True         EraseBackground =   False         Height          =   736         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "ppMain"         Left            =   299         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   True         LockTop         =   True         Scope           =   0         TabIndex        =   2         TabPanelIndex   =   1         TabStop         =   True         Top             =   0         UseFocusRing    =   True         Visible         =   True         Width           =   725         Begin PushButton btnTest            AutoDeactivate  =   True            Bold            =   ""            ButtonStyle     =   0            Cancel          =   ""            Caption         =   "Test This!"            Default         =   ""            Enabled         =   True            Height          =   20            HelpTag         =   ""            Index           =   -2147483648            InitialParent   =   "cvsMovies"            Italic          =   ""            Left            =   924            LockBottom      =   True            LockedInPosition=   False            LockLeft        =   False            LockRight       =   True            LockTop         =   False            Scope           =   0            TabIndex        =   0            TabPanelIndex   =   1            TabStop         =   True            TextFont        =   "System"            TextSize        =   0            TextUnit        =   0            Top             =   704            Underline       =   ""            Visible         =   True            Width           =   80         End      End      Begin ccSearch ccSearchBoxMovies         AcceptFocus     =   True         AcceptTabs      =   True         AutoDeactivate  =   True         BackColor       =   16777215         Backdrop        =   ""         Enabled         =   True         EraseBackground =   True         HasBackColor    =   False         Height          =   33         HelpTag         =   ""         InitialParent   =   "ppMain"         Left            =   0         LockBottom      =   ""         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         Scope           =   0         TabIndex        =   3         TabPanelIndex   =   1         TabStop         =   True         Top             =   0         UseFocusRing    =   False         Visible         =   True         Width           =   300      End      Begin ccSearch ccSearchBoxTVShows         AcceptFocus     =   ""         AcceptTabs      =   True         AutoDeactivate  =   True         BackColor       =   16777215         Backdrop        =   ""         Enabled         =   True         EraseBackground =   True         HasBackColor    =   False         Height          =   33         HelpTag         =   ""         InitialParent   =   "ppMain"         Left            =   0         LockBottom      =   ""         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         Scope           =   0         TabIndex        =   1         TabPanelIndex   =   2         TabStop         =   True         Top             =   0         UseFocusRing    =   False         Visible         =   True         Width           =   300      End      Begin MetaInfoCanvas cvsTVShows         AcceptFocus     =   ""         AcceptTabs      =   ""         AutoDeactivate  =   True         Backdrop        =   ""         btnLeft         =   ""         btnRight        =   ""         btnTop          =   ""         DoubleBuffer    =   False         Enabled         =   True         EraseBackground =   False         Height          =   736         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "ppMain"         Left            =   299         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   True         LockTop         =   True         Scope           =   0         TabIndex        =   3         TabPanelIndex   =   2         TabStop         =   True         Top             =   0         UseFocusRing    =   True         Visible         =   True         Width           =   725         Begin PushButton btnTest1            AutoDeactivate  =   True            Bold            =   ""            ButtonStyle     =   0            Cancel          =   ""            Caption         =   "Test This!"            Default         =   ""            Enabled         =   True            Height          =   20            HelpTag         =   ""            Index           =   -2147483648            InitialParent   =   "cvsTVShows"            Italic          =   ""            Left            =   924            LockBottom      =   True            LockedInPosition=   False            LockLeft        =   False            LockRight       =   True            LockTop         =   False            Scope           =   0            TabIndex        =   0            TabPanelIndex   =   2            TabStop         =   True            TextFont        =   "System"            TextSize        =   0            TextUnit        =   0            Top             =   704            Underline       =   ""            Visible         =   True            Width           =   80         End      End      Begin ActionBar ActBar         AcceptFocus     =   ""         AcceptTabs      =   ""         AutoDeactivate  =   True         Backdrop        =   ""         DoubleBuffer    =   False         Enabled         =   True         EraseBackground =   True         Height          =   25         HelpTag         =   ""         Index           =   0         InitialParent   =   "ppMain"         Left            =   -1         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   False         MinLeft         =   150         MinRight        =   50         Scope           =   0         TabIndex        =   1         TabPanelIndex   =   1         TabStop         =   True         Text            =   "## Items"         Top             =   736         UseFocusRing    =   True         Visible         =   True         Width           =   300      End      Begin ListboxPRO lstTVShows         AlternatingRows =   True         AutoDeactivate  =   True         AutoHideScrollbars=   True         Bold            =   ""         Border          =   True         ColumnCount     =   1         ColumnsResizable=   ""         ColumnWidths    =   ""         DataField       =   ""         DataSource      =   ""         DefaultRowHeight=   22         Enabled         =   True         EnableDrag      =   ""         EnableDragReorder=   ""         GridLinesHorizontal=   0         GridLinesVertical=   0         HasHeading      =   ""         HeadingIndex    =   -1         Height          =   704         HelpTag         =   ""         Hierarchical    =   ""         Index           =   -2147483648         InitialParent   =   "ppMain"         InitialValue    =   ""         Italic          =   ""         Left            =   -1         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         RequiresSelection=   ""         Scope           =   0         ScrollbarHorizontal=   ""         ScrollBarVertical=   True         SelectionGradient=   True         SelectionType   =   0         SourceList      =   False         TabIndex        =   0         TabPanelIndex   =   2         TabStop         =   True         TextFont        =   "System"         TextSize        =   0         TextUnit        =   0         Top             =   33         TypeToSearch    =   False         Underline       =   ""         UseFocusRing    =   True         Visible         =   True         Width           =   300         _ScrollWidth    =   -1      End      Begin ActionBar ActBar         AcceptFocus     =   ""         AcceptTabs      =   ""         AutoDeactivate  =   True         Backdrop        =   ""         DoubleBuffer    =   False         Enabled         =   True         EraseBackground =   True         Height          =   25         HelpTag         =   ""         Index           =   1         InitialParent   =   "ppMain"         Left            =   -1         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   False         MinLeft         =   150         MinRight        =   50         Scope           =   0         TabIndex        =   2         TabPanelIndex   =   2         TabStop         =   True         Text            =   "## Items"         Top             =   736         UseFocusRing    =   True         Visible         =   True         Width           =   300      End   End   Begin ToolMain MainTB      Enabled         =   True      Height          =   61      Index           =   -2147483648      InitialParent   =   ""      Left            =   -1      LockedInPosition=   False      Scope           =   0      TabPanelIndex   =   0      Top             =   773      Visible         =   True      Width           =   1103   End   Begin Listbox lstSearchMovies      AutoDeactivate  =   True      AutoHideScrollbars=   True      Bold            =   ""      Border          =   True      ColumnCount     =   15      ColumnsResizable=   ""      ColumnWidths    =   ""      DataField       =   ""      DataSource      =   ""      DefaultRowHeight=   -1      Enabled         =   True      EnableDrag      =   ""      EnableDragReorder=   ""      GridLinesHorizontal=   0      GridLinesVertical=   0      HasHeading      =   ""      HeadingIndex    =   -1      Height          =   100      HelpTag         =   ""      Hierarchical    =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   ""      Left            =   -80      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   True      LockRight       =   False      LockTop         =   True      RequiresSelection=   ""      Scope           =   0      ScrollbarHorizontal=   ""      ScrollBarVertical=   True      SelectionType   =   0      TabIndex        =   1      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   0      Underline       =   ""      UseFocusRing    =   True      Visible         =   True      Width           =   67      _ScrollWidth    =   -1   EndEnd#tag EndWindow#tag WindowCode	#tag Event		Sub Close()		  Preferences.SaveWindowPos( Self, "wndMain" )		  		  Quit		End Sub	#tag EndEvent	#tag Event		Sub Open()		  If Prefs.boolForKey("SplashShown") = False then		    MainTB.Visible = True		    wndSplash.Show		    prefs.boolForKey("SplashShown") = True		  End If		  		  Preferences.LoadWindowPos( Self, "wndMain" )		  MainTB.Resize 100, 50		End Sub	#tag EndEvent	#tag Event		Sub Resized()		  cvsMovies.Width  = Me.Width - ActBar(0).Width + 1		  cvsTVShows.Width = Me.Width - ActBar(0).Width + 1		End Sub	#tag EndEvent	#tag MenuHandler		Function FileCloseWindow() As Boolean Handles FileCloseWindow.Action			Self.Close			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileFetchMetadata() As Boolean Handles FileFetchMetadata.Action			CommonActions( "FetchMetadata" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileFetchMetadataforallMedia() As Boolean Handles FileFetchMetadataforallMedia.Action			CommonActions( "FetchMissingMetadata" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileManualSearch() As Boolean Handles FileManualSearch.Action			CommonActions( "ManualSearch" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileOpenInFinder() As Boolean Handles FileOpenInFinder.Action			CommonActions( "Reveal" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileReload() As Boolean Handles FileReload.Action			CommonActions "ReloadList"			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileUpdateMetadata() As Boolean Handles FileUpdateMetadata.Action			CommonActions( "UpdateMetadata" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function MenuViewHideToolbar() As Boolean Handles MenuViewHideToolbar.Action			MainTB.Visible = NOT MainTB.Visible			If MainTB.Visible then MenuViewHideToolbar.Text = Menu.ViewHideToolbar else MenuViewHideToolbar.Text = Menu.ViewShowToolbar						Prefs.boolForKey("MainToolbarVisible") = MainTB.Visible			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function MenuViewMovies() As Boolean Handles MenuViewMovies.Action			ppMain.Value = 0			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ShareFacebook() As Boolean Handles ShareFacebook.Action			CommonActions("ShareOnFaceBook")			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ShareTwitter() As Boolean Handles ShareTwitter.Action			CommonActions( "ShareOnTwitter" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsBatchRenaming() As Boolean Handles ToolsBatchRenaming.Action			Dim FoldersOrFiles as String = Loc.kFolders.Lowercase			If Prefs.integerForKey("BatchRename") = 1 Then FoldersOrFiles = Loc.kFoldersandFiles.Lowercase			// Check to see weather the user will go trough with this.			If MsgDlg( wndMain, 1, Loc.msgMassRename.ReplaceAll( "%F", FoldersOrFiles ), Loc.kCantBeUndone, Loc.dlgRename, Loc.dlgCancel ) = 2 Then Return True						'Select Case ppMain.Value			'			'Case 0			'// BatchRenamer( lstMovies )			'dlgProgress.Start( Menu.ToolsBatchRenaming + ":", "...", lstMovies.ListCount, "BatchRenameMovies" )			'			'End Select						CommonActions("BatchRename")			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsClean() As Boolean Handles ToolsClean.Action			CommonActions "Clean"			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtBanner(index as Integer) As Boolean Handles ToolsExtraArtBanner.Action			If GetActiveListbox = lstMovies Then CommonActions("GetMovieBanner")			If GetActiveListbox = lstTVShows Then CommonActions("GetTVBanner")			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtClearArt(index as Integer) As Boolean Handles ToolsExtraArtClearArt.Action			If GetActiveListbox = lstMovies Then			CommonActions("GetMovieArt")			Else			CommonActions("GetClearArt")			End If			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtDiscArt(index as Integer) As Boolean Handles ToolsExtraArtDiscArt.Action			CommonActions("GetMovieDisc")			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtExtraFanart(index as Integer) As Boolean Handles ToolsExtraArtExtraFanart.Action			CommonActions("GetExtraFanart")			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtFanart(index as Integer) As Boolean Handles ToolsExtraArtFanart.Action			CommonActions( "GetFanart" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtLogo(index as Integer) As Boolean Handles ToolsExtraArtLogo.Action			If GetActiveListbox = lstMovies Then			CommonActions("GetMovieLogo")			Else			CommonActions("GetLogo")			ENd If			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtPoster(index as Integer) As Boolean Handles ToolsExtraArtPoster.Action			CommonActions( "GetPoster" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtThumb(index as Integer) As Boolean Handles ToolsExtraArtThumb.Action			If GetActiveListbox = lstMovies Then CommonActions("GetMovieThumb")			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtThumbs(index as Integer) As Boolean Handles ToolsExtraArtThumbs.Action			CommonActions( "GetExtraThumbs" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraTrailer() As Boolean Handles ToolsExtraTrailer.Action			CommonActions( "GetTrailer" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsGetAllMissingArtwork(index as Integer) As Boolean Handles ToolsGetAllMissingArtwork.Action			CommonActions("UpdateAllImages")			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsGetMissingArtwork(index as Integer) As Boolean Handles ToolsGetMissingArtwork.Action			CommonActions("UpdateSingleImages")			Return True		End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsMovies2Folders() As Boolean Handles ToolsMovies2Folders.Action			If ppMain.Value = 0 then MassMovies2Folders( lstMovies )			Return True		End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsRenameSelection() As Boolean Handles ToolsRenameSelection.Action			CommonActions( "RenameSelection" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewEditMetadata() As Boolean Handles ViewEditMetadata.Action			CommonActions( "EditInfo" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByMovieSortTitle() As Boolean Handles ViewSortByMovieSortTitle.Action			CommonActions( "MovieSortTitle" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByMovieTitle() As Boolean Handles ViewSortByMovieTitle.Action			CommonActions( "MovieTitle" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByNextAired() As Boolean Handles ViewSortByNextAired.Action			CommonActions( "NextAired" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByPath(index as Integer) As Boolean Handles ViewSortByPath.Action			CommonActions( "Path" )			Return True		End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByPremiereDate() As Boolean Handles ViewSortByPremiereDate.Action			CommonActions( "PremiereDate" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByQuality() As Boolean Handles ViewSortByQuality.Action			CommonActions( "Quality" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByRating(index as Integer) As Boolean Handles ViewSortByRating.Action			CommonActions( "Rating" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByStudio() As Boolean Handles ViewSortByStudio.Action			CommonActions( "Studio" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByTVShowSortTitle() As Boolean Handles ViewSortByTVShowSortTitle.Action			CommonActions( "ShowSortTitle" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByTVShowTitle() As Boolean Handles ViewSortByTVShowTitle.Action			CommonActions( "ShowTitle" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByWatchedStatus() As Boolean Handles ViewSortByWatchedStatus.Action			CommonActions( "WatchedStatus" )			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function WindowMinimize() As Boolean Handles WindowMinimize.Action			Minimize			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function WindowSetsmanager() As Boolean Handles WindowSetsmanager.Action			If Trim( ccSearchBoxMovies.edtSearch.Text ) <> "" Then			ccSearchBoxMovies.Reset			wndMain.lstMovies.ListIndex = 0			End If			wndSetManager.Show			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function WindowZoom() As Boolean Handles WindowZoom.Action			Maximize			Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h0		Sub CommonActions(HitItem as String)		  Dim SectionName, Name as String		  Dim LstBox as Listbox = GetActiveListbox		  Dim ParentFolder as FolderItem		  Dim ID as String		  		  If LstBox.ListIndex > -1 Then		    ParentFolder = GetFolderItem( LstBox.Cell( LstBox.ListIndex, 1 ) )		    Name = LstBox.Cell( LstBox.ListIndex, 0 )		  End If		  		  Select Case ppMain.Value		  Case 0		    SectionName = Loc.Movies		    ID = MovieAttr.ID_TMDB		    If ID = "" Then ID = MovieAttr.ID_IMDB		    		  Case 1		    SectionName = Loc.TVShows		    'ID = TVAttr.ID_TVDB		    		  case 2		    SectionName = Loc.Anime		    'ID = AnimeAttr.ID_AniDB		    		  End Select		  		  		  Select Case HitItem		    		  case "ReloadList"		    If LstBox = lstMovies Then		      Dim Lindex as Integer = LstBox.ListIndex		      If ccSearchBoxMovies.edtSearch.text <> "" Then ccSearchBoxMovies.Reset		      		      dlgProgress.Start( Loc.Refresh, "", 0, "ReloadMovies" )		      		    ElseIf LstBox = lstTVShows Then		      'ElseIf LstBox = lstAnime Then		    End If		    		    		    ActBar( ppMain.Value ).TextValue( str( LstBox.ListCount ) + " " + SectionName )		    		  case "SortList"		    If LstBox = lstMovies Then lstMovies.SortList		    		  case "UpdateRating"		    If LstBox = lstMovies Then dlgProgress.Start( Loc.kSearching + ":", FindMovieName( MovieAttr.FolderParent, True, NOT Prefs.boolForKey("UseFolderNameForLookUp") ) + " " + Loc.mRating.ReplaceAll(":", "..."), 2, "UpdateMovieRating" )		    		  case "MarkAsWatched"		    If LstBox = lstMovies Then		      MovieAttr.StatusWatched = NOT MovieAttr.StatusWatched		      If ParentFolder <> Nil and ParentFolder.Exists then MovieAttr.NFOWrite( MovieAttr.DestinationNFO( ParentFolder ) )		      lstMovies.UpdateRow		    End If		    		  case "FetchMissingMetadata"		    // Count all the unscraped items.		    Dim UnScrapedItems as Integer = 0		    For i as Integer = 0 to LstBox.ListCount - 1		      If LstBox.Cell(i, 2) = "" Then UnScrapedItems = UnScrapedItems + 1		    Next		    		    If LstBox = lstMovies then dlgProgress.Start( Loc.kSearching + ":", Loc.Movies + "...", UnScrapedItems, "MissingMovies")		    		  Case "UpdateMetadata"		    If MsgDlg( Self, 1, Loc.msgUpdate.ReplaceAll( "%F", SectionName.Lowercase ), Loc.msgWhatWillBeUpdated.ReplaceAll( "%F", SectionName.Lowercase ), Loc.dlgOK, Loc.dlgCancel ) = 2 Then Return		    		    Dim ScrapedItems as Integer = 0		    For i as Integer = 0 to LstBox.ListCount - 1		      If LstBox.Cell(i, 2) <> "" Then ScrapedItems = ScrapedItems + 1		    Next		    		    If LstBox = lstMovies Then dlgProgress.Start( Loc.kDownloading + ":", "...", ScrapedItems, "UpdateMovies" )		    		  Case "UpdateAllImages"		    Dim ScrapedItems as Integer = 0		    For i as Integer = 0 to LstBox.ListCount - 1		      If LstBox.Cell(i, 2) <> "" Then ScrapedItems = ScrapedItems + 1		    Next		    		    If LstBox = lstMovies Then dlgProgress.Start( Loc.kDownloading + ":", "...", ScrapedItems, "UpdateMovieImages" )		    		  Case "UpdateSingleImages"		    If LstBox = lstMovies Then dlgProgress.Start( Loc.kDownloading + ":", "...", 11, "UpdateSingleMovieImages" )		    		  case "FetchMetadata"		    If LstBox = lstMovies Then		      // dlgProgress.Start( Loc.kSearching + ":", FindMovieName( MovieAttr.FolderParent, True, True ), 15, "SelectedMovie" )		      		      dlgProgress.Start( Loc.kSearching + ":", FindMovieName( MovieAttr.FolderParent, True, NOT Prefs.boolForKey("UseFolderNameForLookUp") ), 0, "SelectedMovie" )		    End If		    		  case "ManualSearch"		    If LstBox = lstMovies then		      Dim MovieName as String = FindMovieName( MovieAttr.FolderParent, True )		      wndSearchMovies.Show		      If MovieName <> "" Then wndSearchMovies.ccSearchMovies.edtSearch.Text = MovieName Else wndSearchMovies.ccSearchMovies.edtSearch.Text = lstMovies.Cell( lstMovies.ListIndex, 0 )		      wndSearchMovies.ccSearchMovies.edtSearch.SelectAll		    End If		    		  case "EditInfo"		    If LstBox = lstMovies then		      'wndMetadataMovie.Show		      wndMovieMetadata.Show		    ElseIf LstBox = lstTVShows Then		      // TODO		    End If		    		  case "Reveal"		    ShowInFinder( ParentFolder )		    		  case "RenameSelection"		    If LstBox = lstMovies Then SingleRenamer( ParentFolder )		    		  case "BatchRename"		    		    Dim ScrapedItems as Integer = 0		    For i as Integer = 0 to LstBox.ListCount - 1		      If LstBox.Cell(i, 2) <> "" Then ScrapedItems = ScrapedItems + 1		    Next		    		    If LstBox = lstMovies Then dlgProgress.Start( Menu.ToolsBatchRenaming + ":", SectionName, ScrapedItems, "BatchRenameMovies" )		    		  case "Clean"		    wndClean.Show		    		  case "DeleteItem"		    Dim Path as String = LstBox.Cell(LstBox.ListIndex,1)		    		    If LstBox = lstMovies And LstBox.ListIndex > -1 Then		      lstMovies.DeleteItem		      // Update the 'search listbox'		      For i as Integer = 0 to lstSearchMovies.ListCount - 1		        If lstSearchMovies.Cell( i, 1 ) = Path Then lstSearchMovies.RemoveRow(i)		      Next		      		    ElseIf LstBox = lstMovies And LstBox.ListIndex > -1 Then		      'lstTVShows.DeleteItem		      		    Else		      MsgBox Loc.kNothingToDelete		    End If		    		    ActBar( ppMain.Value ).TextValue( Str( LstBox.ListCount ) + " " + SectionName )		    		  case "Trailer"		    ParentFolder = Nil		    If LstBox = lstMovies then ParentFolder = FindTrailerItem( MovieAttr.FolderParent )		    If ParentFolder <> Nil and ParentFolder.Exists then ParentFolder.Launch		    		  case "GetMovieTrailer"		    If LstBox = lstMovies And ID <> "" Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kTrailer + "...", 0, "GetMovieTrailer" ) Else MsgBox Loc.msgNoTrailer		    		  case "GetTrailer"		    If LstBox = lstMovies And ID <> "" Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kTrailer + "...", 0, "GetTrailer" ) Else MsgBox Loc.msgNoTrailer		    		    // Extra Art		    // TODO		  case "GetPoster"		    If LstBox = lstMovies then		      dlgProgress.Start( Loc.kDownloading + ":", Loc.kPoster, 2, "GetMoviePoster" )		      		      // ElseIf LstBox = lstTVShows then		      'dlgProgress.Start( Loc.kDownloading + ":", Loc.kFanart, 2, "GetTVPoster" )		      // ElseIf LstBox = lstAnime then		      'dlgProgress.Start( Loc.kDownloading + ":", Loc.kFanart, 2, "GetAnimePoster" )		    End If		    		    		  case "GetFanart"		    If LstBox = lstMovies then		      dlgProgress.Start( Loc.kDownloading + ":", Loc.kFanart, 2, "GetMovieFanart" )		      		      // ElseIf LstBox = lstTVShows then		      'dlgProgress.Start( Loc.kDownloading + ":", Loc.kFanart, 2, "GetTVFanart" )		      // ElseIf LstBox = lstAnime then		      'dlgProgress.Start( Loc.kDownloading + ":", Loc.kFanart, 2, "GetAnimeFanart" )		    End If		    		    		  case "GetExtraThumbs"		    If LstBox = lstMovies then		      dlgProgress.Start( Loc.kDownloading + ":", "ExtraThumbs", 0, "GetMovieExtrathumbs")		      		      // ElseIf LstBox = lstTVShows then		      'dlgProgress.Start( Loc.kDownloading + ":", "ExtraThumbs", 0, "GetTVExtrathumbs")		      // ElseIf LstBox = lstAnime then		      'dlgProgress.Start( Loc.kDownloading + ":", "ExtraThumbs", 0, "GetAnimeExtrathumbs")		    End If		    		    		  case "GetExtraFanart"		    If LstBox = lstMovies then		      dlgProgress.Start( Loc.kDownloading + ":", "ExtraFanart", 0, "GetMovieExtraFanart")		      		    End If		    		    // ---- FanartTV Movie		  case "GetMovieLogo"		    dlgProgress.Start( Loc.kSearching + ":", Loc.kLogo     + "...", 0, "GetMovieLogo" )		  case "GetMovieArt"		    dlgProgress.Start( Loc.kSearching + ":", Loc.kClearArt + "...", 0, "GetMovieArt" )		  case "GetMovieDisc"		    dlgProgress.Start( Loc.kSearching + ":", Loc.kDiscArt  + "...", 0, "GetMovieDisc" )		  case "GetMovieBanner"		    dlgProgress.Start( Loc.kSearching + ":", Loc.kBanner   + "...", 0, "GetMovieBanner" )		  case "GetMovieThumb"		    dlgProgress.Start( Loc.kSearching + ":", Loc.kThumb    + "...", 0, "GetMovieThumb" )		    		    // ---- FanartTV Television		  case "GetTVBanner"		  case "GetTVClearArt"		  case "GetTVCharacterArt"		  case "GetTVLogo"		  case "GetTVThumb"		    		    		  case "ShowIMDBListing"		    If MovieAttr.ID_IMDB <> "" Then ShowURL( "http://www.imdb.com/title/" + MovieAttr.ID_IMDB )		    		  case "ShowTMDBListing"		    If ID <> "" Then ShowURL( "http://www.themoviedb.org/movie/" + ID )		    		  case "ShowWikiEntry"		    ShowURL( "http://" + Prefs.textStringForKey("DBLanguage") + ".wikipedia.org/wiki/" + MovieAttr.Title.ReplaceAll( " ", "_" ) + "_(film)" )		    		  case "SearchGoogle"		    If MovieAttr.Title <> "" and MovieAttr.DateYear > -1 Then ShowURL( "http://www.google.com/search?q=" + MovieAttr.Title + " (" + str(MovieAttr.DateYear) + ")" )		    		  End Select		  		  // ---- Social sharing		  Select Case HitItem		    		  case "ShareOnFaceBook"		    Dim URL as String		    If MovieAttr.ID_TMDB <> "" Then		      URL = "http://www.themoviedb.org/movie/" + MovieAttr.ID_TMDB		    ElseIf MovieAttr.ID_IMDB <> "" Then		      URL = "http://imdb.com/title/" + MovieAttr.ID_IMDB		    Else		      URL = "http://www.imdb.com/find?q=" + MovieAttr.Title + "&s=all"		    End If		    ShareFaceBookLink URL, MovieAttr.Title		    		  case "ShareOnTwitter"		    Dim URL as String		    If MovieAttr.ID_TMDB <> "" Then		      URL = "http://www.themoviedb.org/movie/" + MovieAttr.ID_TMDB		    ElseIf MovieAttr.ID_IMDB <> "" Then		      URL = "http://imdb.com/title/" + MovieAttr.ID_IMDB		    Else		      URL = "http://www.imdb.com/find?q=" + MovieAttr.Title + "&s=all"		    End If		    ShareTweet MovieAttr.Title + " (" + Str(MovieAttr.DateYear) + ") " + URL + " #ViMediaManager"		    		  End Select		  		  		  // Sort By		  Select Case HitItem		    		  case "MovieTitle"		    Prefs.integerForKey("SortByMovie") = 0		    If ppMain.Value = 0 Then lstMovies.SortList		    'mBarMain.Child( "ViewSortByMovieTitle" ).Checked = True		    		  case "MovieSortTitle"		    Prefs.integerForKey("SortByMovie") = 1		    If ppMain.Value = 0 Then lstMovies.SortList		    'mBarMain.Child( "ViewSortByMovieSortTitle" ).Checked = True		    		  case "Path"		    If ppMain.Value = 0 Then		      Prefs.integerForKey("SortByMovie") = 2		      lstMovies.SortList		    ElseIf ppMain.Value = 1 Then		      Prefs.integerForKey("SortByTV") = 2		      'lstTVShows.SortList		    End If		    		  case "WatchedStatus"		    Prefs.integerForKey("SortByMovie") = 3		    If ppMain.Value = 0 Then lstMovies.SortList		    		  case "PremiereDate"		    Prefs.integerForKey("SortByMovie") = 4		    If ppMain.Value = 0 Then lstMovies.SortList		    		  case "Quality"		    Prefs.integerForKey("SortByMovie") = 5		    If ppMain.Value = 0 Then lstMovies.SortList		    		  case "Rating"		    Prefs.integerForKey("SortByMovie") = 6		    If ppMain.Value = 0 Then lstMovies.SortList		    		  case "Studio"		    Prefs.integerForKey("SortByMovie") = 10		    If ppMain.Value = 0 Then lstMovies.SortList		    		    // TV Show		  case "ShowTitle"		    Prefs.integerForKey("SortByTV") = 0		    'lstTVShows.SortList		    		  case "ShowSortTitle"		    Prefs.integerForKey("SortByTV") = 1		    'lstTVShows.SortList		    		  case "NextAired"		    Prefs.integerForKey("SortByTV") = 3		    'lstTVShows.SortList		    		  End Select		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function GetActiveListbox() As Listbox		  Select Case ppMain.Value		    		  Case 0		    Return lstMovies		    		  Case 1		    Return lstTVShows		    		  Case 2		    #pragma Warning "Build the Anime section first"		    'Return lstAnime		    		  End Select		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub ListSearch(SearchText as String)		  Dim lstBox, lstSearch as Listbox		  Dim SectionName as String		  		  Select Case ppMain.Value		  Case 0		    lstBox = lstMovies		    lstSearch = lstSearchMovies		    lstMovies.SearchList( SearchText )		    SectionName = Loc.Movies		  Case 1		    lstBox = lstTVShows		    SectionName = Loc.TVShows		  Case 2		    'lstBox = lstAnime		    'SectionName = Loc.Anime		  End Select		  		  		  If SearchText <> "" Then		    ActBar( ppMain.Value ).TextValue( Str( LstBox.ListCount ) + Loc.k1of2 + Str( lstSearch.ListCount ) + " " + SectionName )		  Else		    ActBar( ppMain.Value ).TextValue( Str( LstBox.ListCount ) + " " + SectionName )		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub MenuConstructor(Base as MenuItem, LstBox as listbox)		  Dim miSeperator as new MenuItem ( "-" )		  		  Dim miReload         as new MenuItem ( Loc.Refresh )       // Reload List		  Dim miSort           as new MenuItem ( Menu.CMMSortList )          // Sort List		  Dim miMarkAsWatched  as new MenuItem ( Menu.CMMMarkAsWatched )     // Mark as Watched		  Dim miScrape         as new MenuItem ( Loc.FetchMetadata ) // Fetch Metadata		  Dim miManualSearch   as new MenuItem ( Menu.FileManualSearch )     // Manual Search...		  Dim miEditInfo       as new MenuItem ( Menu.ViewEditMetadata )     // Edit Metadata		  Dim miClean          as new MenuItem ( Loc.Clean + "..." ) // Clean...		  Dim miRename         as new MenuItem ( Menu.ToolsRenameSelection )     // Rename		  Dim miReveal         as new MenuItem ( Menu.FileShowInFinder )     // Show in Finder		  Dim miTrailer        as new MenuItem ( Menu.CMMWatchTrailer )      // Watch Trailer		  Dim miUpdateRating   as new MenuItem ( Loc.kUpdateRating ) // Update Rating		  		  miReload.Name        = "ReloadList"		  miSort.Name          = "SortList"		  miMarkAsWatched.Name = "MarkAsWatched"		  miScrape.Name        = "FetchMetadata"		  miManualSearch.Name  = "ManualSearch"		  miEditInfo.Name      = "EditInfo"		  miClean.Name         = "Clean"		  miRename.Name        = "RenameSelection"		  miReveal.Name        = "Reveal"		  miTrailer.Name       = "Trailer"		  miUpdateRating.Name  = "UpdateRating"		  If LstBox = lstMovies Then miUpdateRating.Enabled = ( MovieAttr.ID_IMDB <> "" )		  		  Dim miDeleteMovie    as new MenuItem ( Menu.CMMRemoveMovie )     // Remove Movie...		  Dim miDeleteTV       as new MenuItem ( Menu.CMMRemoveTVShow )    // Remove TV Show...		  Dim miDeleteAnime    as new MenuItem ( Menu.CMMRemoveAnime )     // Remove Anime...		  		  miDeleteMovie.Name = "DeleteItem"		  miDeleteTV.Name    = "DeleteItem"		  miDeleteAnime.Name = "DeleteItem"		  		  // ---- Search Web ---- //		  Dim miSearchWeb as new MenuItem( Menu.CMMSearchTheWeb )		  Dim miShowTMDB  as new MenuItem( Loc.urlTMDBListing )		  Dim miShowIMDB  as new MenuItem( Loc.urlIMDBListing )		  Dim miShowWiki  as new MenuItem( Loc.urlWIKIListing )		  Dim miSearchGoogle as new MenuItem( Loc.urlGoogleListing )		  		  miSearchWeb.Name = "SearchTheWeb"		  miShowTMDB.Name = "ShowTMDBListing"		  If LstBox = lstMovies Then miShowTMDB.Enabled = ( MovieAttr.ID_TMDB <> "" )		  miShowIMDB.Name = "ShowIMDBListing"		  If LstBox = lstMovies Then miShowIMDB.Enabled = ( MovieAttr.ID_IMDB <> "" )		  miShowWiki.Name = "ShowWikiEntry"		  miSearchGoogle.Name = "SearchGoogle"		  		  miSearchWeb.Append miShowIMDB		  miSearchWeb.Append miShowTMDB		  miSearchWeb.Append miSearchGoogle		  miSearchWeb.Append miShowWiki		  miSearchWeb.Append miSeperator		  // ---- @END Search Web ---- //		  		  // Mark as Watched		  'If LstBox = lstMovies and MovieAttr.StatusWatched = True then miMarkAsWatched.Text = Menu.CMMMarkAsUnwatched		  'If LstBox = lstMovies and LstBox.Cell( LstBox.ListIndex, 2 ) = "" then miMarkAsWatched.Enabled = False		  'If LstBox = lstMovies and FindTrailerItem( MovieAttr.FolderParent ) = Nil then miTrailer.Enabled = False		  		  If LstBox = lstMovies then		    If MovieAttr.StatusWatched = True then miMarkAsWatched.Text = Menu.CMMMarkAsUnwatched		    miMarkAsWatched.Enabled = ( LstBox.Cell( LstBox.ListIndex, 2 ) <> "" )		    miRename.Enabled = ( LstBox.Cell( LstBox.ListIndex, 2 ) <> "" )		    miTrailer.Enabled = ( FindTrailerItem( MovieAttr.FolderParent ) <> Nil )		  End If		  		  // Build Menu		  base.Append miReload                                       // | Reload List		  If LstBox.ListIndex <> -1 then		    base.Append MenuSortBy( LstBox )                         // | Sort By (>)		    // If LstBox = lstMovies And lstMovies.ConstructMountMenu <> Nil Then base.Append lstMovies.ConstructMountMenu		    base.Append miSeperator.Clone                            // | -------		    base.Append miScrape                                     // | Fetch Metadata		    base.Append miManualSearch                               // | Manual Search		    base.Append miEditInfo                                   // | Edit Metadata		    base.Append miSeperator.Clone                            // | -------		    base.Append miUpdateRating                               // | Update Rating		    If LstBox = lstMovies Then base.Append miMarkAsWatched   // | Mark as Watched		    base.Append miRename                                     // | Rename...		    base.Append miSeperator.Clone                            // | -------		    If MenuShare <> Nil Then base.Append MenuShare           // | Share (>)		    base.Append miSearchWeb                                  // | Search the Internet (>)		    If MenuExtraArt( LstBox ) <> Nil Then _		    base.Append MenuExtraArt( LstBox )                    // | Extra Art (>)		    'base.Append miClean                                      // | Clean...		    base.Append miSeperator.Clone                            // | -------		    base.Append miReveal                                     // | Reveal in Finder		    If LstBox = lstMovies Then base.Append miTrailer         // | Watch Trailer		    If LstBox = lstMovies Then base.Append miDeleteMovie     // | Delete Movie		    // If LstBox = lstTVShows then base.Append miDeleteTV      // | Delete TV Show		    // If LstBox = lstAnime then base.Append miDeleteAnime     // | Delete Anime		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function MenuExtraArt(LstBox as Listbox) As MenuItem		  If LstBox = lstMovies and MovieAttr.ID_IMDB = "" And MovieAttr.ID_TMDB = "" Then Return Nil		  		  Dim miExtraArt as New MenuItem ( Menu.ToolsExtras ) // Extra Arts		  Dim miSeperator as New MenuItem ( "-" )		  Dim miDownloadMissingArt as New MenuItem( Menu.ToolsExtraArtGetMissing )		  		  miDownloadMissingArt.Name = "UpdateSingleImages"		  		  Dim miDownloadPoster as New MenuItem ( Menu.ToolsExtraArtGetPoster ) // Download Poster...		  Dim miDownloadFanart as New MenuItem ( Menu.ToolsExtraArtGetFanart ) // Download Fanart...		  Dim miDownloadExtraThumbs as New MenuItem ( Menu.ToolsExtraArtGetExtraThumbs )  // Download ExtraThumbs		  Dim miDownloadExtraFanart as New MenuItem ( Menu.ToolsExtraArtGetExtraFanart )  // Download ExtraFanarts		  Dim miDownloadBanner as New MenuItem ( Menu.ToolsExtraArtGetBanner ) // Download Banner...		  Dim miDownloadTrailer as New MenuItem( Menu.ToolsExtraTrailer ) // Download Trailer...		  Dim miDownloadDiscArt as New MenuItem( Menu.ToolsExtraArtGetDisc ) // Download DiscArt...		  		  miDownloadPoster.Name      = "GetPoster"		  miDownloadFanart.Name      = "GetFanart"		  miDownloadExtraThumbs.Name = "GetExtraThumbs"		  miDownloadExtraFanart.Name = "GetExtraFanart"		  miDownloadBanner.Name      = "GetTVBanner"		  miDownloadTrailer.Name     = "GetTrailer"		  		  'miDownloadTrailer.Enabled = False		  		  Dim miDownloadClearArt     as New MenuItem ( Menu.ToolsExtraArtGetClearArt )     // Download ClearArt...		  Dim miDownloadCharacterArt as New MenuItem ( Menu.ToolsExtraArtGetCharacterArt ) // Download Character Art...		  Dim miDownloadLogo         as New MenuItem ( Menu.ToolsExtraArtGetLogo )         // Download Logo...		  Dim miDownloadThumb        as New MenuItem ( Menu.ToolsExtraArtGetThumb )      // Download TV Thumb...		  		  miDownloadClearArt.Name     = "GetTVClearArt"		  miDownloadCharacterArt.Name = "GetTVCharacterArt"		  miDownloadLogo.Name         = "GetTVLogo"		  miDownloadThumb.Name        = "GetTVThumb"		  		  // Build Menu		  miExtraArt.Append miDownloadMissingArt		  miExtraArt.Append miSeperator.Clone		  		  miExtraArt.Append miDownloadPoster		  miExtraArt.Append miDownloadFanart		  		  If LstBox = lstMovies Then		    		    miDownloadLogo.Name     = "GetMovieLogo"		    miDownloadThumb.Name    = "GetMovieThumb"		    miDownloadBanner.Name   = "GetMovieBanner"		    miDownloadDiscArt.Name  = "GetMovieDisc"		    miDownloadClearArt.Name = "GetMovieArt"		    		    // -----		    miExtraArt.Append miSeperator.Clone		    miExtraArt.Append miDownloadLogo		    miExtraArt.Append miDownloadBanner		    miExtraArt.Append miDownloadClearArt		    miExtraArt.Append miDownloadDiscArt		    miExtraArt.Append miDownloadThumb		    // -----		    miExtraArt.Append miSeperator.Clone		    miExtraArt.Append miDownloadExtraThumbs		    miExtraArt.Append miDownloadExtraFanart		    // -----		    miExtraArt.Append miSeperator.Clone		    miExtraArt.Append miDownloadTrailer		    		  Else		    miExtraArt.Append miDownloadBanner		    		    // -----		    miExtraArt.Append miSeperator.Clone		    miExtraArt.Append miDownloadClearArt		    miExtraArt.Append miDownloadCharacterArt		    miExtraArt.Append miDownloadLogo		    miExtraArt.Append miDownloadThumb		  End If		  		  Return miExtraArt		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function MenuShare() As MenuItem		  // Disable menu if no ID's are found.		  If GetActiveListbox = lstMovies And ( MovieAttr.ID_TMDB = "" And MovieAttr.ID_IMDB = "" ) Then Return Nil		  		  Dim miShare as new MenuItem( Loc.kShare )		  Dim miShareFaceBook as new MenuItem( "Facebook" )		  Dim miShareTwitter as new MenuItem( "Twitter" )		  		  miShareFaceBook.Name = "ShareOnFaceBook"		  miShareFaceBook.Icon = icofacebook		  		  miShareTwitter.Name = "ShareOnTwitter"		  miShareTwitter.Icon = icotweet		  		  miShare.Append miShareFaceBook		  miShare.Append miShareTwitter		  		  Return miShare		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function MenuSortBy(LstBox as Listbox) As MenuItem		  Dim miSortBy    as New MenuItem ( Menu.CMMSortList )		  Dim miSeperator as New MenuItem ( "-" )		  		  // Movie		  Dim miMovieTitle     as New MenuItem ( Menu.ViewSortByMovieTitle )		  Dim miMovieSortTitle as New MenuItem ( Menu.ViewSortByMovieSortTitel )		  		  miMovieTitle.Name     = "MovieTitle"		  miMovieSortTitle.Name = "MovieSortTitle"		  		  Dim miPath          as New MenuItem ( Menu.ViewSortByPath )		  Dim miWatchedStatus as New MenuItem ( Menu.ViewSortByWatchedStatus )		  Dim miPremiereDate  as New MenuItem ( Menu.ViewSortByPremiereDate )		  Dim miQuality       as New MenuItem ( Menu.ViewSortByQuality )		  		  miPath.Name          = "Path"		  miWatchedStatus.Name = "WatchedStatus"		  miPremiereDate.Name  = "PremiereDate"		  miQuality.Name       = "Quality"		  		  // TV		  Dim miShowTitle     as New MenuItem( Menu.ViewSortByTVShowTitle )		  Dim miShowSortTitle as New MenuItem( Menu.ViewSortByTVShowSortTitle )		  Dim miNextAired     as New MenuItem( Menu.ViewSortByNextAired )		  		  miShowTitle.Name     = "ShowTitle"		  miShowSortTitle.Name = "ShowSortTitle"		  miNextAired.Name     = "NextAired"		  		  // Global		  Dim miRating        as New MenuItem ( Menu.ViewSortByRating )		  Dim miStudio        as New MenuItem ( Menu.ViewSortByStudio )		  		  miRating.Name        = "Rating"		  miQuality.Name       = "Studio"		  		  		  If LstBox = lstMovies Then		    		    miSortBy.Append miMovieTitle		    miSortBy.Append miMovieSortTitle		    		    miSortBy.Append miSeperator		    		    miSortBy.Append miPath		    miSortBy.Append miWatchedStatus		    miSortBy.Append miPremiereDate		    miSortBy.Append miQuality		    miSortBy.Append miStudio		    		    // ElseIf LstBox = lstTVShows then		  End If		  		  Return miSortBy		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub SwitchPanels(Index as Integer)		  ToolButton( MainTB.Item( Index ) ).Pushed = True		  ppMain.Value = Index		  		  If Index = 0 then		    ToolsMovies2Folders.Enabled = True		    		  ElseIf Index = 1 then		    ToolsMovies2Folders.Enabled = False		    		  ElseIf Index = 2 then		    ToolsMovies2Folders.Enabled = False		    		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub UpdateRow()		  If ppMain.Value = 0 then		    lstMovies.UpdateRow		    		  ElseIf ppMain.Value = 1 then		    		  ElseIf ppMain.Value = 2 then		    		  End If		End Sub	#tag EndMethod#tag EndWindowCode#tag Events ppMain	#tag Event		Sub Change()		  WindowSetsmanager.Visible    = ( Me.Value = 0 ) // Sets Manager		  MenuSeparator(2).Visible     = ( Me.Value = 0 )		  		  MenuViewSortByMovie.Visible  = ( Me.Value = 0 ) // Sort by Movies		  MenuToolsExtraDownloadsMovies.Visible = ( Me.Value = 0 ) // Download Movie Extras		  		  MenuViewSortByTVShow.Visible = ( Me.Value = 1 ) // Sort by TV Shows		  MenuToolsExtraDownloadsShows.Visible = ( Me.Value = 1 ) // Download Show Extras		  		  For i as Integer = 0 to MainTB.Count - 1		    If MainTB.Item(i).Name = "MovieSets" Then MainTB.Item(i).Enabled = ( Me.Value = 0 )		  Next		  		  Prefs.setIntegerValue( "wndMainTab", Me.Value )		End Sub	#tag EndEvent	#tag Event		Sub Open()		  Me.Value = Prefs.integerForKey("wndMainTab")		  		  WindowSetsmanager.Visible    = ( Me.Value = 0 ) // Sets Manager		  MenuSeparator(2).Visible     = ( Me.Value = 0 )		  		  MenuViewSortByMovie.Visible  = ( Me.Value = 0 ) // Sort by Movies		  MenuToolsExtraDownloadsMovies.Visible = ( Me.Value = 0 ) // Download Movie Extras		  		  MenuViewSortByTVShow.Visible = ( Me.Value = 1 ) // Sort by TV Shows		  MenuToolsExtraDownloadsShows.Visible = ( Me.Value = 1 ) // Download Show Extras		  		  For i as Integer = 0 to MainTB.Count - 1		    If MainTB.Item(i).Name = "MovieSets" Then MainTB.Item(i).Enabled = ( Me.Value = 0 )		  Next		End Sub	#tag EndEvent#tag EndEvents#tag Events lstMovies	#tag Event		Function ConstructContextualMenu(base as MenuItem, x as Integer, y as Integer) As Boolean		  MenuConstructor base, Me		  Return True		End Function	#tag EndEvent	#tag Event		Function ContextualMenuAction(hitItem as MenuItem) As Boolean		  CommonActions( hitItem.Name )		End Function	#tag EndEvent	#tag Event		Sub DoubleClick()		  If Me.Cell( Me.ListIndex, 2 ) = "" then CommonActions( "FetchMetadata" ) Else CommonActions( "EditInfo" )		End Sub	#tag EndEvent#tag EndEvents#tag Events cvsMovies	#tag Event		Sub Open()		  Me.Height = Height		  cvsMovies.Width = Width - Prefs.integerForKey("NSMoviesSidebarWidth") + 1		End Sub	#tag EndEvent	#tag Event		Function ConstructContextualMenu(base as MenuItem, x as Integer, y as Integer) As Boolean		  MenuConstructor base, lstMovies		End Function	#tag EndEvent	#tag Event		Function ContextualMenuAction(hitItem as MenuItem) As Boolean		  CommonActions hitItem.Name		End Function	#tag EndEvent#tag EndEvents#tag Events btnTest	#tag Event		Sub Open()		  Me.Visible = DebugBuild		End Sub	#tag EndEvent	#tag Event		Sub Action()		  wndMovieMetadata.ShowModal		  'CommonActions("GetMovieTrailer")		  		  'CommonActions("UpdateImages")		End Sub	#tag EndEvent#tag EndEvents#tag Events ccSearchBoxMovies	#tag Event		Sub Open()		  'Me.LiveSearch = True		End Sub	#tag EndEvent	#tag Event		Sub DoSearch(SearchText as String)		  ListSearch( SearchText )		End Sub	#tag EndEvent	#tag Event		Sub ResetSearch()		  ListSearch( "" )		End Sub	#tag EndEvent#tag EndEvents#tag Events cvsTVShows	#tag Event		Sub Open()		  Me.Height = Height		  cvsMovies.Width = Width - Prefs.integerForKey("NSMoviesSidebarWidth") + 1		End Sub	#tag EndEvent	#tag Event		Function ConstructContextualMenu(base as MenuItem, x as Integer, y as Integer) As Boolean		  MenuConstructor base, lstMovies		End Function	#tag EndEvent	#tag Event		Function ContextualMenuAction(hitItem as MenuItem) As Boolean		  CommonActions hitItem.Name		End Function	#tag EndEvent#tag EndEvents#tag Events btnTest1	#tag Event		Sub Open()		  Me.Visible = DebugBuild		End Sub	#tag EndEvent	#tag Event		Sub Action()		  If NOT Growl.Notify( App.kAppName, "Testing, Testing, 1.. 2.. 3.." ) Then		    // MsgBox "Growling!"		  Else		    // MsgBox "Not Growling!"		  End If		End Sub	#tag EndEvent#tag EndEvents#tag Events ActBar	#tag Event		Sub Open(index as Integer)		  me.ClearAttachments		  		  Select case index		  case 0		    'me.AttachLeft ccSearchBox		    me.AttachLeft lstMovies		    me.AttachRight cvsMovies		    		  case 1		    Me.AttachLeft lstTVShows		    Me.AttachRight cvsTVShows		    		  case 2		    		  End Select		End Sub	#tag EndEvent	#tag Event		Sub Moved(index as Integer, Distance as Integer)		  Select case index		  case 0		    Prefs.integerForKey("NSMoviesSidebarWidth")  = me.Width		    ccSearchBoxMovies.Width = me.Width - 1		  case 1		    Prefs.integerForKey("NSTVShowsSidebarWidth") = me.Width		    ccSearchBoxTVShows.Width = me.Width - 1		  case 2		    Prefs.integerForKey("NSAnimeSidebarWidth")   = me.Width		  End Select		End Sub	#tag EndEvent	#tag Event		Sub ActionMenu(index as Integer)		  Dim base as New MenuItem		  		  Select Case Me.Index		    		  Case 0		    MenuConstructor base, lstMovies		    		  Case 1		    MenuConstructor base, lstTVShows		    		  Case 2		    'MenuConstructor base, lstAnime		    		  End Select		  		  Dim HitItem as MenuItem = base.PopUp		  If HitItem IsA object Then CommonActions( HitItem.Name )		End Sub	#tag EndEvent	#tag Event		Sub ActionMinus(index as Integer)		  CommonActions "DeleteItem"		End Sub	#tag EndEvent#tag EndEvents#tag Events MainTB	#tag Event		Sub Action(item As ToolItem)		  		  Select Case item.Name		    		  Case "Movies"		    SwitchPanels 0		    'ViewMenu.Append MenuSortBy( lstMovies )		    		  Case "TVShows"		    SwitchPanels 1		    		  Case "Anime"		    SwitchPanels 2		    		    ' ----------------		  Case "ScrapeInfoAll"		    CommonActions( "FetchMissingMetadata" )		    		  Case "ScrapeInfo"		    CommonActions( "FetchMetadata" )		    		  Case "ManualSearch"		    CommonActions( "ManualSearch" )		    		  Case "ExtraArt"		    Dim lstBox as Listbox = GetActiveListbox		    If MenuExtraArt( lstBox ) <> Nil Then		      Dim HitItem as MenuItem = MenuExtraArt( lstBox ).PopUp		      If HitItem <> Nil then CommonActions( HitItem.Name )		    End If		    		    ' ----------------		  Case "EditMetadata"		    CommonActions( "EditInfo" )		    		  Case "RefreshList"		    CommonActions( "ReloadList" )		    		  Case "Clean"		    CommonActions( "Clean" )		    		  Case "MovieSets"		    If Trim( ccSearchBoxMovies.edtSearch.Text ) <> "" Then		      ccSearchBoxMovies.Reset		      wndMain.lstMovies.ListIndex = 0		    End If		    wndSetManager.Show		    		    		    ' ----------------		  Case "Donate"		    ShowURL App.DonationURL		    		  End Select		End Sub	#tag EndEvent	#tag Event		Sub Open()		  MainTB.Visible = Prefs.boolForKey("MainToolbarVisible")		  If MainTB.Visible Then MenuViewHideToolbar.Text = Menu.ViewHideToolbar Else MenuViewHideToolbar.Text = Menu.ViewShowToolbar		  		  Me.Item(1).Enabled = DebugBuild		  ToolButton( MainTB.Item( Prefs.integerForKey("wndMainTab") ) ).Pushed = True		End Sub	#tag EndEvent#tag EndEvents