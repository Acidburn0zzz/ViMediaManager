#tag WindowBegin Window wndMain   BackColor       =   &hFFFFFF   Backdrop        =   ""   CloseButton     =   True   Composite       =   False   Frame           =   0   FullScreen      =   False   HasBackColor    =   False   Height          =   760   ImplicitInstance=   True   LiveResize      =   True   MacProcID       =   0   MaxHeight       =   32000   MaximizeButton  =   True   MaxWidth        =   32000   MenuBar         =   343001748   MenuBarVisible  =   True   MinHeight       =   500   MinimizeButton  =   True   MinWidth        =   700   Placement       =   2   Resizeable      =   True   Title           =   "#App.kAppName"   Visible         =   True   Width           =   1024   Begin PagePanel ppMain      AutoDeactivate  =   True      Enabled         =   True      Height          =   760      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      PanelCount      =   4      Panels          =   ""      Scope           =   0      TabIndex        =   0      TabPanelIndex   =   0      Top             =   0      Value           =   1      Visible         =   True      Width           =   1024      Begin ListMovies lstMovies         AutoDeactivate  =   True         AutoHideScrollbars=   True         Bold            =   ""         Border          =   True         ColumnCount     =   15         ColumnsResizable=   True         ColumnWidths    =   "100%, 0"         DataField       =   ""         DataSource      =   ""         DefaultRowHeight=   42         Enabled         =   True         EnableDrag      =   False         EnableDragReorder=   ""         GridLinesHorizontal=   0         GridLinesVertical=   0         HasHeading      =   False         HeadingIndex    =   -1         Height          =   704         HelpTag         =   ""         Hierarchical    =   False         Index           =   -2147483648         InitialParent   =   "ppMain"         InitialValue    =   ""         Italic          =   ""         LastKeyPressedAt=   ""         Left            =   -1         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         RequiresSelection=   True         Scope           =   0         ScrollbarHorizontal=   ""         ScrollBarVertical=   True         SelectionType   =   0         TabIndex        =   0         TabPanelIndex   =   1         TabStop         =   True         TextFont        =   "System"         TextSize        =   11         TextUnit        =   0         Top             =   33         Underline       =   ""         UseFocusRing    =   False         Visible         =   True         Width           =   300         _ScrollWidth    =   -1      End      Begin ccSearch ccSearchBoxMovies         AcceptFocus     =   True         AcceptTabs      =   True         AutoDeactivate  =   True         BackColor       =   16777215         Backdrop        =   ""         Enabled         =   True         EraseBackground =   True         HasBackColor    =   False         Height          =   33         HelpTag         =   ""         InitialParent   =   "ppMain"         Left            =   0         LockBottom      =   ""         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         Scope           =   0         TabIndex        =   3         TabPanelIndex   =   1         TabStop         =   True         Top             =   0         UseFocusRing    =   False         Visible         =   True         Width           =   300      End      Begin ccSearch ccSearchBoxTVShows         AcceptFocus     =   ""         AcceptTabs      =   True         AutoDeactivate  =   True         BackColor       =   16777215         Backdrop        =   ""         Enabled         =   True         EraseBackground =   True         HasBackColor    =   False         Height          =   33         HelpTag         =   ""         InitialParent   =   "ppMain"         Left            =   0         LockBottom      =   ""         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         Scope           =   0         TabIndex        =   1         TabPanelIndex   =   2         TabStop         =   True         Top             =   0         UseFocusRing    =   False         Visible         =   True         Width           =   300      End      Begin ActionBar ActBar         AcceptFocus     =   ""         AcceptTabs      =   ""         AutoDeactivate  =   True         Backdrop        =   ""         DoubleBuffer    =   False         Enabled         =   True         EraseBackground =   True         Height          =   25         HelpTag         =   ""         Index           =   0         InitialParent   =   "ppMain"         Left            =   -1         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   False         MinLeft         =   150         MinRight        =   50         Scope           =   0         TabIndex        =   1         TabPanelIndex   =   1         TabStop         =   True         Text            =   "## Items"         Top             =   736         UseFocusRing    =   True         Visible         =   True         Width           =   300      End      Begin ListboxPRO lstTVShows         AlternatingRows =   True         AutoDeactivate  =   True         AutoHideScrollbars=   True         Bold            =   ""         Border          =   True         ColumnCount     =   1         ColumnsResizable=   ""         ColumnWidths    =   ""         DataField       =   ""         DataSource      =   ""         DefaultRowHeight=   22         Enabled         =   True         EnableDrag      =   ""         EnableDragReorder=   ""         GridLinesHorizontal=   0         GridLinesVertical=   0         HasHeading      =   ""         HeadingIndex    =   -1         Height          =   704         HelpTag         =   ""         Hierarchical    =   ""         Index           =   -2147483648         InitialParent   =   "ppMain"         InitialValue    =   ""         Italic          =   ""         Left            =   -1         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         RequiresSelection=   ""         Scope           =   0         ScrollbarHorizontal=   ""         ScrollBarVertical=   True         SelectionGradient=   True         SelectionType   =   0         SourceList      =   False         TabIndex        =   0         TabPanelIndex   =   2         TabStop         =   True         TextFont        =   "System"         TextSize        =   0         TextUnit        =   0         Top             =   33         TypeToSearch    =   False         Underline       =   ""         UseFocusRing    =   True         Visible         =   True         Width           =   300         _ScrollWidth    =   -1      End      Begin ActionBar ActBar         AcceptFocus     =   ""         AcceptTabs      =   ""         AutoDeactivate  =   True         Backdrop        =   ""         DoubleBuffer    =   False         Enabled         =   True         EraseBackground =   True         Height          =   25         HelpTag         =   ""         Index           =   1         InitialParent   =   "ppMain"         Left            =   -1         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   False         MinLeft         =   150         MinRight        =   50         Scope           =   0         TabIndex        =   2         TabPanelIndex   =   2         TabStop         =   True         Text            =   "## Items"         Top             =   736         UseFocusRing    =   True         Visible         =   True         Width           =   300      End      Begin cvsMovieViewer cvsViewMovies         AcceptFocus     =   ""         AcceptTabs      =   ""         AutoDeactivate  =   True         Backdrop        =   ""         DoubleBuffer    =   False         Enabled         =   True         EraseBackground =   True         Height          =   300         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "ppMain"         Left            =   0         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   True         LockTop         =   True         Scope           =   0         TabIndex        =   0         TabPanelIndex   =   4         TabStop         =   True         Top             =   0         UseFocusRing    =   True         Visible         =   True         Width           =   1024      End      Begin Canvas cvsMovieDetails         AcceptFocus     =   ""         AcceptTabs      =   ""         AutoDeactivate  =   True         Backdrop        =   ""         DoubleBuffer    =   False         Enabled         =   True         EraseBackground =   False         Height          =   737         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "ppMain"         Left            =   299         LockBottom      =   True         LockedInPosition=   False         LockLeft        =   True         LockRight       =   True         LockTop         =   True         Scope           =   0         TabIndex        =   4         TabPanelIndex   =   1         TabStop         =   True         Top             =   0         UseFocusRing    =   False         Visible         =   True         Width           =   725         Begin PushButton btnTest            AutoDeactivate  =   True            Bold            =   ""            ButtonStyle     =   0            Cancel          =   ""            Caption         =   "Test This!"            Default         =   ""            Enabled         =   True            Height          =   20            HelpTag         =   ""            Index           =   -2147483648            InitialParent   =   "cvsMovieDetails"            Italic          =   ""            Left            =   311            LockBottom      =   True            LockedInPosition=   False            LockLeft        =   False            LockRight       =   True            LockTop         =   False            Scope           =   0            TabIndex        =   0            TabPanelIndex   =   1            TabStop         =   True            TextFont        =   "System"            TextSize        =   0            TextUnit        =   0            Top             =   704            Underline       =   ""            Visible         =   True            Width           =   80         End      End      Begin Canvas cvsTVShowDetails         AcceptFocus     =   ""         AcceptTabs      =   ""         AutoDeactivate  =   True         Backdrop        =   ""         DoubleBuffer    =   False         Enabled         =   True         EraseBackground =   True         Height          =   737         HelpTag         =   ""         Index           =   -2147483648         InitialParent   =   "ppMain"         Left            =   299         LockBottom      =   ""         LockedInPosition=   False         LockLeft        =   True         LockRight       =   ""         LockTop         =   True         Scope           =   0         TabIndex        =   3         TabPanelIndex   =   2         TabStop         =   True         Top             =   0         UseFocusRing    =   True         Visible         =   True         Width           =   725      End   End   Begin ToolMain MainTB      Enabled         =   True      Height          =   61      Index           =   -2147483648      InitialParent   =   ""      Left            =   -1      LockedInPosition=   False      Scope           =   0      TabPanelIndex   =   0      Top             =   773      Visible         =   True      Width           =   1103   End   Begin Listbox lstSearchMovies      AutoDeactivate  =   True      AutoHideScrollbars=   True      Bold            =   ""      Border          =   True      ColumnCount     =   15      ColumnsResizable=   ""      ColumnWidths    =   ""      DataField       =   ""      DataSource      =   ""      DefaultRowHeight=   -1      Enabled         =   True      EnableDrag      =   ""      EnableDragReorder=   ""      GridLinesHorizontal=   0      GridLinesVertical=   0      HasHeading      =   ""      HeadingIndex    =   -1      Height          =   100      HelpTag         =   ""      Hierarchical    =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   ""      Left            =   -80      LockBottom      =   False      LockedInPosition=   False      LockLeft        =   True      LockRight       =   False      LockTop         =   True      RequiresSelection=   ""      Scope           =   0      ScrollbarHorizontal=   ""      ScrollBarVertical=   True      SelectionType   =   0      TabIndex        =   1      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   0      Underline       =   ""      UseFocusRing    =   True      Visible         =   True      Width           =   67      _ScrollWidth    =   -1   EndEnd#tag EndWindow#tag WindowCode	#tag Event		Sub Close()		  Preferences.SaveWindowPos( Self, "wndMain" )		  		  Quit		End Sub	#tag EndEvent	#tag Event		Sub Open()		  If Prefs.boolForKey("SplashShown") = False then		    MainTB.Visible = True		    wndSplash.Show		    prefs.boolForKey("SplashShown") = True		  End If		  		  Preferences.LoadWindowPos( Self, "wndMain" )		  MainTB.Resize 100, 50		End Sub	#tag EndEvent	#tag Event		Sub Resized()		  cvsMovieDetails.Width  = Me.Width - ActBar(0).Width + 1		  cvsTVShowDetails.Width = Me.Width - ActBar(1).Width + 1		End Sub	#tag EndEvent	#tag MenuHandler		Function FileCloseWindow() As Boolean Handles FileCloseWindow.Action			Self.Close			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileFetchMetadata() As Boolean Handles FileFetchMetadata.Action			'CommonActions( "FetchMetadata" )			CommonCore.FetchMetadata			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileFetchMetadataforallMedia() As Boolean Handles FileFetchMetadataforallMedia.Action			'CommonActions( "FetchMissingMetadata" )			CommonCore.FetchMissingMetadata			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileManualSearch() As Boolean Handles FileManualSearch.Action			'CommonActions( "ManualSearch" )			CommonCore.ManualSearch			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileOpenInFinder() As Boolean Handles FileOpenInFinder.Action			'CommonActions( "Reveal" )			CommonCore.ShowInFinder			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileReload() As Boolean Handles FileReload.Action			'CommonActions "ReloadList"			CommonCore.ReloadList			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileUpdateMetadata() As Boolean Handles FileUpdateMetadata.Action			'CommonActions( "UpdateMetadata" )			CommonCore.UpdateMetadata			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function FileUpdateRatings() As Boolean Handles FileUpdateRatings.Action			'CommonActions( "UpdateAllMovieRatings" )			CommonCore.UpdateAllMovieRatings			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function MenuViewHideToolbar() As Boolean Handles MenuViewHideToolbar.Action			MainTB.Visible = NOT MainTB.Visible			If MainTB.Visible then MenuViewHideToolbar.Text = Menu.ViewHideToolbar else MenuViewHideToolbar.Text = Menu.ViewShowToolbar						Prefs.boolForKey("MainToolbarVisible") = MainTB.Visible			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function MenuViewMovies() As Boolean Handles MenuViewMovies.Action			ppMain.Value = 0			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ShareFacebook() As Boolean Handles ShareFacebook.Action			'CommonActions("ShareOnFaceBook")			CommonCore.ShareOn("Facebook")			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ShareTwitter() As Boolean Handles ShareTwitter.Action			'CommonActions( "ShareOnTwitter" )			CommonCore.ShareOn("Twitter")			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsBatchRenaming() As Boolean Handles ToolsBatchRenaming.Action			'Dim FoldersOrFiles as String = Loc.kFolders.Lowercase			'If Prefs.integerForKey("BatchRename") = 1 Then FoldersOrFiles = Loc.kFoldersandFiles.Lowercase			'// Check to see weather the user will go trough with this.			'If MsgDlg( wndMain, 1, Loc.msgMassRename.ReplaceAll( "%F", FoldersOrFiles ), Loc.kCantBeUndone, Loc.dlgRename, Loc.dlgCancel ) = 2 Then Return True						'Select Case ppMain.Value			'			'Case 0			'// BatchRenamer( lstMovies )			'dlgProgress.Start( Menu.ToolsBatchRenaming + ":", "...", lstMovies.ListCount, "BatchRenameMovies" )			'			'End Select						'CommonActions("BatchRename")			CommonCore.RenameAll			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsClean() As Boolean Handles ToolsClean.Action			'CommonActions "Clean"			CommonCore.Clean			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtBanner(index as Integer) As Boolean Handles ToolsExtraArtBanner.Action			CommonCore.GetImageBanner			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtClearArt(index as Integer) As Boolean Handles ToolsExtraArtClearArt.Action			'If GetActiveListbox = lstMovies Then			''CommonActions("GetMovieArt")			'Else			'CommonActions("GetClearArt")			'End If			CommonCore.GetImageClearArt			Return True		End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtDiscArt(index as Integer) As Boolean Handles ToolsExtraArtDiscArt.Action			'CommonActions("GetMovieDisc")			CommonCore.GetImageDiscArt			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtExtraFanart(index as Integer) As Boolean Handles ToolsExtraArtExtraFanart.Action			'CommonActions("GetExtraFanart")			CommonCore.GetImagesExtraBackdrops			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtFanart(index as Integer) As Boolean Handles ToolsExtraArtFanart.Action			'CommonActions( "GetFanart" )			CommonCore.GetImageBackdrop			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtLogo(index as Integer) As Boolean Handles ToolsExtraArtLogo.Action			'If GetActiveListbox = lstMovies Then			'CommonActions("GetMovieLogo")			'Else			'CommonActions("GetLogo")			'End If			CommonCore.GetImageLogo			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtPoster(index as Integer) As Boolean Handles ToolsExtraArtPoster.Action			'CommonActions( "GetPoster" )			CommonCore.GetImagePoster			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtThumb(index as Integer) As Boolean Handles ToolsExtraArtThumb.Action			'If GetActiveListbox = lstMovies Then CommonActions("GetMovieThumb")			CommonCore.GetImageThumb			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraArtThumbs(index as Integer) As Boolean Handles ToolsExtraArtThumbs.Action			'CommonActions( "GetExtraThumbs" )			CommonCore.GetImagesExtraThumbs			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsExtraTrailer() As Boolean Handles ToolsExtraTrailer.Action			'CommonActions( "GetTrailer" )			CommonCore.GetMovieTrailer			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsGetAllMissingArtwork(index as Integer) As Boolean Handles ToolsGetAllMissingArtwork.Action			'CommonActions("UpdateAllImages")			CommonCore.UpdateAllImages			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsGetMissingArtwork(index as Integer) As Boolean Handles ToolsGetMissingArtwork.Action			'CommonActions("UpdateSingleImages")			CommonCore.UpdateSingleImages			Return True		End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsMovies2Folders() As Boolean Handles ToolsMovies2Folders.Action			If ppMain.Value = 0 then MassMovies2Folders( lstMovies )			Return True		End Function	#tag EndMenuHandler	#tag MenuHandler		Function ToolsRenameSelection() As Boolean Handles ToolsRenameSelection.Action			'CommonActions( "RenameSelection" )			CommonCore.RenameSelection			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewEditMetadata() As Boolean Handles ViewEditMetadata.Action			'CommonActions( "EditInfo" )			CommonCore.EditInfo			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByMovieSortTitle() As Boolean Handles ViewSortByMovieSortTitle.Action			'CommonActions( "MovieSortTitle" )			CommonCore.SortByTitleSort			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByMovieTitle() As Boolean Handles ViewSortByMovieTitle.Action			'CommonActions( "MovieTitle" )			CommonCore.SortByTitle			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByNextAired() As Boolean Handles ViewSortByNextAired.Action			'CommonActions( "NextAired" )			CommonCore.SortByNextAired			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByPath(index as Integer) As Boolean Handles ViewSortByPath.Action			'CommonActions( "Path" )			CommonCore.SortByPath			Return True		End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByPremiereDate() As Boolean Handles ViewSortByPremiereDate.Action			'CommonActions( "PremiereDate" )			CommonCore.SortByPremiereDate			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByQuality() As Boolean Handles ViewSortByQuality.Action			'CommonActions( "Quality" )			CommonCore.SortByQuality			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByRating(index as Integer) As Boolean Handles ViewSortByRating.Action			'CommonActions( "Rating" )			CommonCore.SortByRating			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByStudio() As Boolean Handles ViewSortByStudio.Action			'CommonActions( "Studio" )			CommonCore.SortByStudio			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByTVShowSortTitle() As Boolean Handles ViewSortByTVShowSortTitle.Action			'CommonActions( "ShowSortTitle" )			CommonCore.SortByTitleSort			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByTVShowTitle() As Boolean Handles ViewSortByTVShowTitle.Action			'CommonActions( "ShowTitle" )			CommonCore.SortByTitle			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function ViewSortByWatchedStatus() As Boolean Handles ViewSortByWatchedStatus.Action			'CommonActions( "WatchedStatus" )			CommonCore.SortByWatchedStatus			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function WindowMinimize() As Boolean Handles WindowMinimize.Action			Self.Minimize			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function WindowSetsmanager() As Boolean Handles WindowSetsmanager.Action			If Trim( ccSearchBoxMovies.edtSearch.Text ) <> "" Then			ccSearchBoxMovies.Reset			wndMain.lstMovies.ListIndex = 0			End If			wndSetManager.Show			Return True					End Function	#tag EndMenuHandler	#tag MenuHandler		Function WindowZoom() As Boolean Handles WindowZoom.Action			Self.Maximize			Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h0		Sub CMActions(Action as String)		  		  // ----- Main Actions		  Select case Action		    		    // List Actions		  Case "ReloadList"		    CommonCore.ReloadList		    		  Case "SortList"		    CommonCore.SortList		    		    // Get Data		  Case "FetchMetadata"		    CommonCore.FetchMetadata		    		  Case "ManualSearch"		    CommonCore.ManualSearch		    		    // Modify data		  Case "EditInfo"		    CommonCore.EditInfo		    		  Case "UpdateRating"		    CommonCore.UpdateSingleMovieRating		    		  Case "WatchedStatus"		    CommonCore.MarkAsWatched		    		  Case "Rename"		    CommonCore.RenameSelection		    		    // Show Item		  Case "Reveal"		    CommonCore.ShowInFinder		    		    // Watch		  Case "WatchMovie"		    CommonCore.WatchMovie		    		  Case "WatchTrailer"		    CommonCore.WatchTrailer		    		    // Remove		  Case "RemoveItem"		    CommonCore.DeleteItem		    		  End Select		  		  // ----- Show on the web		  Select Case Action		    		  Case "ShowListingIMDb"		    CommonCore.ShowListingIMDb		  Case "ShowListingTMDB"		    CommonCore.ShowListingTMDB		  Case "SearchGoogle"		    CommonCore.ShowListingGoogle		  Case "ShowListingWiki"		    CommonCore.ShowListingWiki		    		  End Select		  		  // ------ Sort Actions		  Select Case Action		    		  Case "SortByTitle"		    CommonCore.SortByTitle		  Case "SortByTitleSort"		    CommonCore.SortByTitleSort		    		  Case "SortByPath"		    CommonCore.SortByPath		  Case "SortByWatched"		    CommonCore.SortByWatchedStatus		  Case "SortByPremiere"		    CommonCore.SortByPremiereDate		  Case "SortByQuality"		    CommonCore.SortByQuality		    		  Case "SortByStudio"		    CommonCore.SortByStudio		  Case "SortByRating"		    CommonCore.SortByRating		    		  Case "SortByNextAired"		    CommonCore.SortByNextAired		    		  End Select		  		  // ----- Share Actions		  Select Case Action		    		  Case "ShareOnFacebook"		    CommonCore.ShareOn("Facebook")		  Case "ShareOnTwitter"		    CommonCore.ShareOn("Twitter")		    		  End Select		  		  // ----- GetArt		  Select Case Action		    		  Case "GetMissingImages"		    CommonCore.UpdateSingleImages		    		  Case "GetPoster"		    CommonCore.GetImagePoster		  Case "GetBackdrop"		    CommonCore.GetImageBackdrop		    		  Case "GetLogo"		    CommonCore.GetImageLogo		  Case "GetBanner"		    CommonCore.GetImageBanner		  Case "GetClearArt"		    CommonCore.GetImageClearArt		  Case "GetThumb"		    CommonCore.GetImageThumb		  Case "GetCharacterArt"		    CommonCore.GetImageCharacterArt		  Case "GetDiscArt"		    CommonCore.GetImageDiscArt		    		  Case "GetExtraThumbs"		    CommonCore.GetImagesExtraThumbs		  Case "GetExtraBackdrops"		    CommonCore.GetImagesExtraBackdrops		    		  Case "GetTrailer"		    CommonCore.GetMovieTrailer		    		  End Select		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function GetActiveListbox() As Listbox		  Select Case ppMain.Value		    		  Case 0		    Return lstMovies		    		  Case 1		    Return lstTVShows		    		  Case 2		    #pragma Warning "Build the Anime section first"		    'Return lstAnime		    		  End Select		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub ListSearch(SearchText as String)		  Dim lstBox, lstSearch as Listbox		  Dim SectionName as String		  		  Select Case ppMain.Value		  Case 0		    lstBox = lstMovies		    lstSearch = lstSearchMovies		    lstMovies.SearchList( SearchText )		    SectionName = Loc.Movies		  Case 1		    lstBox = lstTVShows		    SectionName = Loc.TVShows		  Case 2		    'lstBox = lstAnime		    'SectionName = Loc.Anime		  End Select		  		  		  If SearchText <> "" Then		    ActBar( ppMain.Value ).TextValue( Str( LstBox.ListCount ) + Loc.k1of2 + Str( lstSearch.ListCount ) + " " + SectionName )		  Else		    If ActBar( ppMain.Value ) <> Nil Then ActBar( ppMain.Value ).TextValue( Str( LstBox.ListCount ) + " " + SectionName )		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub MenuConstructor(base as MenuItem, LstBox as listbox)		  Dim miSeperator as New MenuItem( "-", "-" )		  		  // ----- SearchWeb ----- //		  Dim miSearchWeb as New MenuItem( Menu.CMMSearchTheWeb, "SearchTheWeb" )		  		  miSearchWeb.Append New MenuItem( loc.urlIMDBListing, "ShowListingIMDb" )		  miSearchWeb.Append New MenuItem( loc.urlTMDBListing, "ShowListingTMDB" )		  miSearchWeb.Append New MenuItem( Loc.urlGoogleListing, "SearchGoogle"  )		  miSearchWeb.Append New MenuItem( Loc.urlWIKIListing, "ShowListingWiki" )		  		  miSearchWeb.Child( Loc.urlIMDBListing ).Enabled = ( LstBox = lstMovies And MovieAttr.ID_IMDB <> "" )		  miSearchWeb.Child( Loc.urlTMDBListing ).Enabled = ( LstBox = lstMovies And MovieAttr.ID_TMDB <> "" )		  // ----- @END Search Web ----- //		  		  // Watched Status		  Dim miWatchedStatus as New MenuItem( Menu.CMMMarkAsWatched, "WatchedStatus" )		  If LstBox = lstMovies and MovieAttr.StatusWatched Then miWatchedStatus.Text = Menu.CMMMarkAsUnwatched		  		  // Build menu		  base.Append New MenuItem( Loc.Refresh,           "ReloadList"    ) // Reload List		  If LstBox.ListIndex < 0 Then Return		  base.Append MenuSortBy( LstBox )                                   // Sort By (>)		  base.Append miSeperator.Clone                                      // ------		  base.Append New MenuItem( Loc.FetchMetadata,     "FetchMetadata" ) // Fetch Metadata		  base.Append New MenuItem( Menu.FileManualSearch, "ManualSearch"  ) // Manual Search...		  base.Append New MenuItem( Menu.ViewEditMetadata, "EditInfo"      ) // Edit Metadata		  base.Append miSeperator.Clone                                      // ------		  base.Append New MenuItem( Loc.kUpdateRating,     "UpdateRating"  ) // Update Rating		  If LstBox = lstMovies Then base.Append miWatchedStatus             // Mark as Watched/Unwatched		  base.Append New MenuItem( Menu.ToolsRenameSelection, "Rename"    ) // Rename Selection		  base.Append miSeperator.Clone                                      // ------		  If MenuShare <> Nil Then base.Append MenuShare                     // Share (>)		  base.Append miSearchWeb                                            // Search The Web (>)		  If MenuExtraArt(LstBox) <> Nil Then		    base.Append MenuExtraArt( LstBox )                               // Extra Art (>)		  End If		  base.Append miSeperator.Clone                                      // ------		  base.Append New MenuItem( Menu.FileShowInFinder,  "Reveal"       ) // Show in Finder		  If LstBox = lstMovies Then		    base.Append New MenuItem( Menu.CMMWatchMovie,   "WatchMovie"    ) // Watch Movie		    base.Append New MenuItem( Menu.CMMWatchTrailer, "WatchTrailer"  ) // Watch Trailer		  End If		  base.Append miSeperator.Clone                                      // ------		  base.Append New MenuItem( Menu.CMMRemove,         "RemoveItem" )   // Remove <item>...		  		  		  // Enable List		  base.Child( Menu.ToolsRenameSelection ).Enabled = ( LstBox.Cell( LstBox.ListIndex, 2 ) <> "" )		  If LstBox = lstMovies Then		    If base.Child( Menu.CMMMarkAsWatched )   <> Nil Then base.Child( Menu.CMMMarkAsWatched).Enabled   = ( LstBox.Cell( LstBox.ListIndex, 2 ) <> "" )		    If base.Child( Menu.CMMMarkAsUnwatched ) <> Nil Then base.Child( Menu.CMMMarkAsUnwatched).Enabled = ( LstBox.Cell( LstBox.ListIndex, 2 ) <> "" )		    base.Child( Loc.kUpdateRating ).Enabled = ( LstBox.Cell( LstBox.ListIndex, 2 ) <> "" )		    base.Child( Menu.CMMWatchTrailer ).Enabled = ( FindTrailerItem( MovieAttr.FolderParent ) <> Nil )		    base.Child( Menu.CMMWatchMovie   ).Enabled = ( FindMovieItem(   MovieAttr.FolderParent ) <> Nil )		    base.Child( Menu.CMMRemove ).Text = Menu.CMMRemove.ReplaceAll( "%S", Loc.Movie )		  ElseIf LstBox = lstTVShows Then		    base.Child( Menu.CMMRemove ).Text = Menu.CMMRemove.ReplaceAll( "%S", Loc.TVShow )		  End If		  		  		  // #-----		  #If TargetLinux Then		    Dim miSeperator as new MenuItem ( "-" )		    		    Dim miReload         as new MenuItem ( Loc.Refresh,               "ReloadList"    ) // Reload List		    Dim miSort           as new MenuItem ( Menu.CMMSortList,          "SortList"      ) // Sort List		    Dim miMarkAsWatched  as new MenuItem ( Menu.CMMMarkAsWatched,     "MarkAsWatched" ) // Mark as Watched		    Dim miScrape         as new MenuItem ( Loc.FetchMetadata,         "FetchMetadata" ) // Fetch Metadata		    Dim miManualSearch   as new MenuItem ( Menu.FileManualSearch,     "ManualSearch"  ) // Manual Search...		    Dim miEditInfo       as new MenuItem ( Menu.ViewEditMetadata,     "EditInfo"      ) // Edit Metadata		    Dim miClean          as new MenuItem ( Loc.Clean + "...",         "Clean"         ) // Clean...		    Dim miRename         as new MenuItem ( Menu.ToolsRenameSelection, "Rename"        ) // Rename		    Dim miReveal         as new MenuItem ( Menu.FileShowInFinder,     "Reveal"        ) // Show in Finder		    Dim miTrailer        as new MenuItem ( Menu.CMMWatchTrailer,      "WatchTrailer"  ) // Watch Trailer		    Dim miMovie          as new MenuItem ( Menu.CMMWatchMovie,        "WatchMovie"    ) // Watch Movie		    Dim miUpdateRating   as new MenuItem ( Loc.kUpdateRating,         "UpdateRating"  ) // Update Rating		    		    miUpdateRating.Enabled = ( LstBox = lstMovies And MovieAttr.ID_IMDB <> "" )		    		    Dim miDeleteItem as New MenuItem ( Loc.kDelete, "DeleteItem" )		    If LstBox = lstMovies Then miDeleteItem.Text  = miDeleteItem.Text.ReplaceAll( "%S", Loc.Movie )		    If LstBox = lstTVShows Then miDeleteItem.Text = miDeleteItem.Text.ReplaceAll( "%S", Loc.TVShow )		    		    // ---- Search Web ---- //		    Dim miSearchWeb as new MenuItem( Menu.CMMSearchTheWeb, "SearchTheWeb" )		    Dim miShowTMDB  as new MenuItem( Loc.urlTMDBListing,   "ShowListingTMDB" )		    Dim miShowIMDB  as new MenuItem( Loc.urlIMDBListing,   "ShowListingIMDB" )		    Dim miShowWiki  as new MenuItem( Loc.urlWIKIListing,   "ShowListingWiki" )		    Dim miSearchGoogle as new MenuItem( Loc.urlGoogleListing, "SearchGoogle" )		    		    If LstBox = lstMovies Then miShowTMDB.Enabled = ( MovieAttr.ID_TMDB <> "" )		    If LstBox = lstMovies Then miShowIMDB.Enabled = ( MovieAttr.ID_IMDB <> "" )		    		    miSearchWeb.Append miShowIMDB		    miSearchWeb.Append miShowTMDB		    miSearchWeb.Append miSearchGoogle		    miSearchWeb.Append miShowWiki		    miSearchWeb.Append miSeperator		    // ---- @END Search Web ---- //		    		    		    If LstBox = lstMovies then		      If MovieAttr.StatusWatched = True Then miMarkAsWatched.Text = Menu.CMMMarkAsUnwatched		      miMarkAsWatched.Enabled = ( LstBox.Cell( LstBox.ListIndex, 2 ) <> "" )		      miRename.Enabled  = ( LstBox.Cell( LstBox.ListIndex, 2 ) <> "" )		      miTrailer.Enabled = ( FindTrailerItem( MovieAttr.FolderParent ) <> Nil )		    End If		    		    		    // ----- Build Menu		    base.Append miReload                                       // | Reload List		    If LstBox.ListIndex <> -1 then		      base.Append MenuSortBy( LstBox )                         // | Sort By (>)		      // If LstBox = lstMovies And lstMovies.ConstructMountMenu <> Nil Then base.Append lstMovies.ConstructMountMenu		      base.Append miSeperator.Clone                            // | -------		      base.Append miScrape                                     // | Fetch Metadata		      base.Append miManualSearch                               // | Manual Search		      base.Append miEditInfo                                   // | Edit Metadata		      base.Append miSeperator.Clone                            // | -------		      base.Append miUpdateRating                               // | Update Rating		      If LstBox = lstMovies Then base.Append miMarkAsWatched   // | Mark as Watched		      base.Append miRename                                     // | Rename...		      base.Append miSeperator.Clone                            // | -------		      If MenuShare <> Nil Then base.Append MenuShare           // | Share (>)		      base.Append miSearchWeb                                  // | Search the Internet (>)		      If MenuExtraArt( LstBox ) <> Nil Then _		      base.Append MenuExtraArt( LstBox )                    // | Extra Art (>)		      base.Append miSeperator.Clone                            // | -------		      base.Append miReveal                                     // | Reveal in Finder		      If LstBox = lstMovies Then base.Append miTrailer         // | Watch Trailer		      If LstBox = lstMovies Then base.Append miMovie           // | Watch Movie		      base.Append miSeperator.Clone                            // | -------		      base.Append miDeleteItem                                 // | Delete Movie/TV/Anime		    End If		  #EndIf		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function MenuExtraArt(LstBox as Listbox) As MenuItem		  If LstBox = lstMovies and MovieAttr.ID_IMDB = "" And MovieAttr.ID_TMDB = "" Then Return Nil		  		  Dim miExtraArt  as New MenuItem( Menu.ToolsExtras, "GetExtras" )		  Dim miSeperator as New MenuItem( "-", "-" )		  		  		  miExtraArt.Append New MenuItem( Menu.ToolsExtraArtGetMissing, "GetMissingImages" ) // Get Missing Images		  miExtraArt.Append miSeperator.Clone                                                // ------		  miExtraArt.Append New MenuItem( Menu.ToolsExtraArtGetPoster, "GetPoster"   )       // Download Poster...		  miExtraArt.Append New MenuItem( Menu.ToolsExtraArtGetFanart, "GetBackdrop" )       // Download Backdrop...		  miExtraArt.Append miSeperator.Clone                                                // ------		  miExtraArt.Append New MenuItem( Menu.ToolsExtraArtGetLogo,     "GetLogo"     )     // Download Logo...		  miExtraArt.Append New MenuItem( Menu.ToolsExtraArtGetBanner,   "GetBanner"   )     // Download Banner...		  miExtraArt.Append New MenuItem( Menu.ToolsExtraArtGetClearArt, "GetClearArt" )     // Download ClearArt...		  miExtraArt.Append New MenuItem( Menu.ToolsExtraArtGetThumb,    "GetThumb"    )     // Download Thumb...		  If LstBox = lstMovies Then		    miExtraArt.Append New MenuItem( Menu.ToolsExtraArtGetDisc,     "GetDiscArt"    ) // Download Disc Art...		    miExtraArt.Append miSeperator.Clone                                              // ------		    miExtraArt.Append new MenuItem( Menu.ToolsExtraArtGetExtraThumbs, "GetExtraThumbs" ) // Download Extra Thumbs...		    miExtraArt.Append new MenuItem( Menu.ToolsExtraArtGetExtraFanart, "GetExtraBackdrops" ) // Download Extra Fanart...		    miExtraArt.Append miSeperator.Clone                                              // ------		    miExtraArt.Append New MenuItem( Menu.ToolsExtraTrailer,           "GetTrailer" )		  ElseIf LstBox = lstTVShows Then		    miExtraArt.Append New MenuItem( Menu.ToolsExtraArtGetCharacterArt, "GetCharacterArt" ) // Download CharacterArt...		  End If		  		  Return miExtraArt		  		  		  		  // #-----		  #if TargetLinux Then		    Dim miExtraArt as New MenuItem ( Menu.ToolsExtras ) // Extra Arts		    Dim miSeperator as New MenuItem ( "-" )		    Dim miDownloadMissingArt as New MenuItem( Menu.ToolsExtraArtGetMissing )		    		    miDownloadMissingArt.Name = "UpdateSingleImages"		    		    Dim miDownloadPoster as New MenuItem ( Menu.ToolsExtraArtGetPoster ) // Download Poster...		    Dim miDownloadFanart as New MenuItem ( Menu.ToolsExtraArtGetFanart ) // Download Fanart...		    Dim miDownloadExtraThumbs as New MenuItem ( Menu.ToolsExtraArtGetExtraThumbs )  // Download ExtraThumbs		    Dim miDownloadExtraFanart as New MenuItem ( Menu.ToolsExtraArtGetExtraFanart )  // Download ExtraFanarts		    Dim miDownloadBanner as New MenuItem ( Menu.ToolsExtraArtGetBanner ) // Download Banner...		    Dim miDownloadTrailer as New MenuItem( Menu.ToolsExtraTrailer ) // Download Trailer...		    Dim miDownloadDiscArt as New MenuItem( Menu.ToolsExtraArtGetDisc ) // Download DiscArt...		    		    miDownloadPoster.Name      = "GetPoster"		    miDownloadFanart.Name      = "GetFanart"		    miDownloadExtraThumbs.Name = "GetExtraThumbs"		    miDownloadExtraFanart.Name = "GetExtraFanart"		    miDownloadBanner.Name      = "GetTVBanner"		    miDownloadTrailer.Name     = "GetTrailer"		    		    'miDownloadTrailer.Enabled = False		    		    Dim miDownloadClearArt     as New MenuItem ( Menu.ToolsExtraArtGetClearArt )     // Download ClearArt...		    Dim miDownloadCharacterArt as New MenuItem ( Menu.ToolsExtraArtGetCharacterArt ) // Download Character Art...		    Dim miDownloadLogo         as New MenuItem ( Menu.ToolsExtraArtGetLogo )         // Download Logo...		    Dim miDownloadThumb        as New MenuItem ( Menu.ToolsExtraArtGetThumb )      // Download TV Thumb...		    		    miDownloadClearArt.Name     = "GetTVClearArt"		    miDownloadCharacterArt.Name = "GetTVCharacterArt"		    miDownloadLogo.Name         = "GetTVLogo"		    miDownloadThumb.Name        = "GetTVThumb"		    		    // Build Menu		    miExtraArt.Append miDownloadMissingArt		    miExtraArt.Append miSeperator.Clone		    		    miExtraArt.Append miDownloadPoster		    miExtraArt.Append miDownloadFanart		    		    If LstBox = lstMovies Then		      		      miDownloadLogo.Name     = "GetMovieLogo"		      miDownloadThumb.Name    = "GetMovieThumb"		      miDownloadBanner.Name   = "GetMovieBanner"		      miDownloadDiscArt.Name  = "GetMovieDisc"		      miDownloadClearArt.Name = "GetMovieArt"		      		      // -----		      miExtraArt.Append miSeperator.Clone		      miExtraArt.Append miDownloadLogo		      miExtraArt.Append miDownloadBanner		      miExtraArt.Append miDownloadClearArt		      miExtraArt.Append miDownloadDiscArt		      miExtraArt.Append miDownloadThumb		      // -----		      miExtraArt.Append miSeperator.Clone		      miExtraArt.Append miDownloadExtraThumbs		      miExtraArt.Append miDownloadExtraFanart		      // -----		      miExtraArt.Append miSeperator.Clone		      miExtraArt.Append miDownloadTrailer		      		    Else		      miExtraArt.Append miDownloadBanner		      		      // -----		      miExtraArt.Append miSeperator.Clone		      miExtraArt.Append miDownloadClearArt		      miExtraArt.Append miDownloadCharacterArt		      miExtraArt.Append miDownloadLogo		      miExtraArt.Append miDownloadThumb		    End If		    		    Return miExtraArt		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function MenuShare() As MenuItem		  // Disable menu if no ID's are found.		  If GetActiveListbox = lstMovies And ( MovieAttr.ID_TMDB = "" And MovieAttr.ID_IMDB = "" ) Then Return Nil		  		  Dim miShare as new MenuItem( Loc.kShare )		  		  miShare.Append New MenuItem( "Facebook", "ShareOnFacebook" )		  miShare.Child( "Facebook").Icon = icofacebook		  miShare.Append New MenuItem( "Twitter",  "ShareOnTwitter"  )		  miShare.Child( "Twitter" ).Icon = icotweet		  		  Return miShare		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function MenuSortBy(LstBox as Listbox) As MenuItem		  Dim miSortBy    as New MenuItem( Menu.CMMSortList, "SortList" )		  Dim miSeperator as New MenuItem( "-", "-" )		  		  If LstBox = lstMovies Then		    miSortBy.Append New MenuItem( Menu.ViewSortByMovieTitle,     "SortByTitle" )		    miSortBy.Append New MenuItem( Menu.ViewSortByMovieSortTitel, "SortByTitleSort" )		  ElseIf LstBox = lstTVShows Then		    miSortBy.Append New MenuItem( Menu.ViewSortByTVShowTitle,     "SortByTitle" )		    miSortBy.Append New MenuItem( Menu.ViewSortByTVShowSortTitle, "SortByTitleSort" )		  End If		  		  miSortBy.Append miSeperator.Clone // ----		  		  If LstBox = lstMovies Then		    miSortBy.Append New MenuItem( Menu.ViewSortByPath,          "SortByPath" )		    miSortBy.Append New MenuItem( Menu.ViewSortByWatchedStatus, "SortByWatched" )		    miSortBy.Append New MenuItem( Menu.ViewSortByPremiereDate,  "SortByPremiere" )		    miSortBy.Append New MenuItem( Menu.ViewSortByQuality,       "SortByQuality" )		  End If		  		  miSortBy.Append New MenuItem( Menu.ViewSortByStudio,    "SortByStudio" )		  miSortBy.Append New MenuItem( Menu.ViewSortByRating,    "SortByRating" )		  If LstBox = lstTVShows Then		    miSortBy.Append New MenuItem( Menu.ViewSortByNextAired, "SortByNextAired" )		  End If		  		  Return miSortBy		  		  		  // #------		  #if TargetLinux Then		    Dim miSortBy    as New MenuItem ( Menu.CMMSortList )		    Dim miSeperator as New MenuItem ( "-" )		    		    // Movie		    Dim miMovieTitle     as New MenuItem ( Menu.ViewSortByMovieTitle,     "SortByTitle" )		    Dim miMovieSortTitle as New MenuItem ( Menu.ViewSortByMovieSortTitel, "SortByTitleSort" )		    		    Dim miPath          as New MenuItem ( Menu.ViewSortByPath,          "SortByPath" )		    Dim miWatchedStatus as New MenuItem ( Menu.ViewSortByWatchedStatus, "SortByWatched" )		    Dim miPremiereDate  as New MenuItem ( Menu.ViewSortByPremiereDate,  "SortByPremiere" )		    Dim miQuality       as New MenuItem ( Menu.ViewSortByQuality,       "SortByQuality" )		    		    // TV		    Dim miShowTitle     as New MenuItem( Menu.ViewSortByTVShowTitle,     "SortByTitle" )		    Dim miShowSortTitle as New MenuItem( Menu.ViewSortByTVShowSortTitle, "SortBy" )		    Dim miNextAired     as New MenuItem( Menu.ViewSortByNextAired )		    		    miShowTitle.Name     = "ShowTitle"		    miShowSortTitle.Name = "ShowSortTitle"		    miNextAired.Name     = "NextAired"		    		    // Global		    Dim miRating        as New MenuItem ( Menu.ViewSortByRating )		    Dim miStudio        as New MenuItem ( Menu.ViewSortByStudio )		    		    miRating.Name        = "Rating"		    miQuality.Name       = "Studio"		    		    		    If LstBox = lstMovies Then		      		      miSortBy.Append miMovieTitle		      miSortBy.Append miMovieSortTitle		      		      miSortBy.Append miSeperator		      		      miSortBy.Append miPath		      miSortBy.Append miWatchedStatus		      miSortBy.Append miPremiereDate		      miSortBy.Append miQuality		      miSortBy.Append miStudio		      		      // ElseIf LstBox = lstTVShows then		    End If		    		    Return miSortBy		  #EndIf		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub SwitchPanels(Index as Integer)		  ToolButton( MainTB.Item( Index ) ).Pushed = True		  ppMain.Value = Index		  		  If Index = 0 then		    ToolsMovies2Folders.Enabled = True		    		  ElseIf Index = 1 then		    ToolsMovies2Folders.Enabled = False		    		  ElseIf Index = 2 then		    ToolsMovies2Folders.Enabled = False		    		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub zCommonActions(HitItem as String)		  Dim SectionName, Name as String		  Dim LstBox as Listbox = GetActiveListbox		  Dim ParentFolder as FolderItem		  Dim ID as String		  		  If LstBox.ListIndex > -1 Then		    ParentFolder = GetFolderItem( LstBox.Cell( LstBox.ListIndex, 1 ) )		    Name = LstBox.Cell( LstBox.ListIndex, 0 )		  End If		  		  Select Case ppMain.Value		  Case 0		    SectionName = Loc.Movies		    ID = MovieAttr.ID_TMDB		    If ID = "" Then ID = MovieAttr.ID_IMDB		    		  Case 1		    SectionName = Loc.TVShows		    'ID = TVAttr.ID_TVDB		    		  case 2		    SectionName = Loc.Anime		    'ID = AnimeAttr.ID_AniDB		    		  End Select		  		  		  Select Case HitItem		    		  case "ReloadList"		    If LstBox = lstMovies Then		      Dim Lindex as Integer = LstBox.ListIndex		      If ccSearchBoxMovies.edtSearch.text <> "" Then ccSearchBoxMovies.Reset		      		      dlgProgress.Start( Loc.Refresh, "", 0, "ReloadMovies" )		      		    ElseIf LstBox = lstTVShows Then		      'ElseIf LstBox = lstAnime Then		    End If		    		    		    ActBar( ppMain.Value ).TextValue( str( LstBox.ListCount ) + " " + SectionName )		    		  case "SortList"		    If LstBox = lstMovies Then lstMovies.SortList		    		  case "UpdateSingleMovieRating"		    If LstBox = lstMovies Then dlgProgress.Start( Loc.kSearching + ":", FindMovieName( MovieAttr.FolderParent, True, NOT Prefs.boolForKey("UseFolderNameForLookUp") ) + " " + Loc.mRating.ReplaceAll(":", "..."), 3, "UpdateMovieRating" )		    		  Case "UpdateAllMovieRatings"		    If LstBox = lstMovies Then dlgProgress.Start( Loc.kSearching + ":", "...", 0, "UpdateMovieRatings" )		    		  case "MarkAsWatched"		    If LstBox = lstMovies Then		      MovieAttr.StatusWatched = NOT MovieAttr.StatusWatched		      If ParentFolder <> Nil and ParentFolder.Exists then MovieAttr.NFOWrite( MovieAttr.DestinationNFO( ParentFolder ) )		      lstMovies.UpdateRow		    End If		    		  case "FetchMissingMetadata"		    // Count all the unscraped items.		    Dim UnScrapedItems as Integer = 0		    For i as Integer = 0 to LstBox.ListCount - 1		      If LstBox.Cell(i, 2) = "" Then UnScrapedItems = UnScrapedItems + 1		    Next		    		    If LstBox = lstMovies then dlgProgress.Start( Loc.kSearching + ":", Loc.Movies + "...", UnScrapedItems, "MissingMovies")		    		  Case "UpdateMetadata"		    If MsgDlg( Self, 1, Loc.msgUpdate.ReplaceAll( "%F", SectionName.Lowercase ), Loc.msgWhatWillBeUpdated.ReplaceAll( "%F", SectionName.Lowercase ), Loc.dlgOK, Loc.dlgCancel ) = 2 Then Return		    		    Dim ScrapedItems as Integer = 0		    For i as Integer = 0 to LstBox.ListCount - 1		      If LstBox.Cell(i, 2) <> "" Then ScrapedItems = ScrapedItems + 1		    Next		    		    If LstBox = lstMovies Then dlgProgress.Start( Loc.kDownloading + ":", "...", ScrapedItems, "UpdateMovies" )		    		  Case "UpdateAllImages"		    Dim ScrapedItems as Integer = 0		    For i as Integer = 0 to LstBox.ListCount - 1		      If LstBox.Cell(i, 2) <> "" Then ScrapedItems = ScrapedItems + 1		    Next		    		    If LstBox = lstMovies Then dlgProgress.Start( Loc.kDownloading + ":", "...", ScrapedItems, "UpdateMovieImages" )		    		  Case "UpdateSingleImages"		    If LstBox = lstMovies Then dlgProgress.Start( Loc.kDownloading + ":", "...", 11, "UpdateSingleMovieImages" )		    		  case "FetchMetadata"		    If LstBox = lstMovies Then		      // dlgProgress.Start( Loc.kSearching + ":", FindMovieName( MovieAttr.FolderParent, True, True ), 15, "SelectedMovie" )		      		      dlgProgress.Start( Loc.kSearching + ":", FindMovieName( MovieAttr.FolderParent, True, NOT Prefs.boolForKey("UseFolderNameForLookUp") ), 0, "SelectedMovie" )		    End If		    		  case "ManualSearch"		    If LstBox = lstMovies then		      Dim MovieName as String = FindMovieName( MovieAttr.FolderParent, True )		      wndSearchMovies.Show		      If MovieName <> "" Then wndSearchMovies.ccSearchMovies.edtSearch.Text = MovieName Else wndSearchMovies.ccSearchMovies.edtSearch.Text = lstMovies.Cell( lstMovies.ListIndex, 0 )		      wndSearchMovies.ccSearchMovies.edtSearch.SelectAll		    End If		    		  case "EditInfo"		    If LstBox = lstMovies then		      'wndMetadataMovie.Show		      wndMovieMetadata.Show		    ElseIf LstBox = lstTVShows Then		      // TODO		    End If		    		  case "Reveal"		    ShowInFinder( ParentFolder )		    		  case "RenameSelection"		    If LstBox = lstMovies Then SingleRenamer( ParentFolder )		    		  case "BatchRename"		    		    Dim ScrapedItems as Integer = 0		    For i as Integer = 0 to LstBox.ListCount - 1		      If LstBox.Cell(i, 2) <> "" Then ScrapedItems = ScrapedItems + 1		    Next		    		    If LstBox = lstMovies Then dlgProgress.Start( Menu.ToolsBatchRenaming + ":", SectionName, ScrapedItems, "BatchRenameMovies" )		    		  case "Clean"		    wndClean.Show		    		  case "DeleteItem"		    Dim Path as String = LstBox.Cell(LstBox.ListIndex,1)		    		    If LstBox = lstMovies And LstBox.ListIndex > -1 Then		      lstMovies.DeleteItem		      // Update the 'search listbox'		      For i as Integer = 0 to lstSearchMovies.ListCount - 1		        If lstSearchMovies.Cell( i, 1 ) = Path Then lstSearchMovies.RemoveRow(i)		      Next		      		    ElseIf LstBox = lstMovies And LstBox.ListIndex > -1 Then		      'lstTVShows.DeleteItem		      		    Else		      MsgBox Loc.kNothingToDelete		    End If		    		    ActBar( ppMain.Value ).TextValue( Str( LstBox.ListCount ) + " " + SectionName )		    		  case "Trailer"		    ParentFolder = Nil		    If LstBox = lstMovies then ParentFolder = FindTrailerItem( MovieAttr.FolderParent )		    If ParentFolder <> Nil and ParentFolder.Exists then ParentFolder.Launch		    		  case "GetMovieTrailer"		    If LstBox = lstMovies And ID <> "" Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kTrailer + "...", 0, "GetMovieTrailer" ) Else MsgBox Loc.msgNoTrailer		    		  case "GetTrailer"		    If LstBox = lstMovies And ID <> "" Then dlgProgress.Start( Loc.kDownloading + ":", Loc.kTrailer + "...", 0, "GetTrailer" ) Else MsgBox Loc.msgNoTrailer		    		    // Extra Art		    // TODO		  case "GetPoster"		    If LstBox = lstMovies then		      dlgProgress.Start( Loc.kDownloading + ":", Loc.kPoster, 2, "GetMoviePoster" )		      		      // ElseIf LstBox = lstTVShows then		      'dlgProgress.Start( Loc.kDownloading + ":", Loc.kFanart, 2, "GetTVPoster" )		      // ElseIf LstBox = lstAnime then		      'dlgProgress.Start( Loc.kDownloading + ":", Loc.kFanart, 2, "GetAnimePoster" )		    End If		    		    		  case "GetFanart"		    If LstBox = lstMovies then		      dlgProgress.Start( Loc.kDownloading + ":", Loc.kFanart, 2, "GetMovieFanart" )		      		      // ElseIf LstBox = lstTVShows then		      'dlgProgress.Start( Loc.kDownloading + ":", Loc.kFanart, 2, "GetTVFanart" )		      // ElseIf LstBox = lstAnime then		      'dlgProgress.Start( Loc.kDownloading + ":", Loc.kFanart, 2, "GetAnimeFanart" )		    End If		    		    		  case "GetExtraThumbs"		    If LstBox = lstMovies then		      dlgProgress.Start( Loc.kDownloading + ":", "ExtraThumbs", 0, "GetMovieExtrathumbs")		      		      // ElseIf LstBox = lstTVShows then		      'dlgProgress.Start( Loc.kDownloading + ":", "ExtraThumbs", 0, "GetTVExtrathumbs")		      // ElseIf LstBox = lstAnime then		      'dlgProgress.Start( Loc.kDownloading + ":", "ExtraThumbs", 0, "GetAnimeExtrathumbs")		    End If		    		    		  case "GetExtraFanart"		    If LstBox = lstMovies then		      dlgProgress.Start( Loc.kDownloading + ":", "ExtraFanart", 0, "GetMovieExtraFanart")		      		    End If		    		    // ---- FanartTV Movie		  case "GetMovieLogo"		    dlgProgress.Start( Loc.kSearching + ":", Loc.kLogo     + "...", 0, "GetMovieLogo" )		  case "GetMovieArt"		    dlgProgress.Start( Loc.kSearching + ":", Loc.kClearArt + "...", 0, "GetMovieArt" )		  case "GetMovieDisc"		    dlgProgress.Start( Loc.kSearching + ":", Loc.kDiscArt  + "...", 0, "GetMovieDisc" )		  case "GetMovieBanner"		    dlgProgress.Start( Loc.kSearching + ":", Loc.kBanner   + "...", 0, "GetMovieBanner" )		  case "GetMovieThumb"		    dlgProgress.Start( Loc.kSearching + ":", Loc.kThumb    + "...", 0, "GetMovieThumb" )		    		    // ---- FanartTV Television		  case "GetTVBanner"		  case "GetTVClearArt"		  case "GetTVCharacterArt"		  case "GetTVLogo"		  case "GetTVThumb"		    		    		  case "ShowIMDBListing"		    If MovieAttr.ID_IMDB <> "" Then ShowURL( "http://www.imdb.com/title/" + MovieAttr.ID_IMDB )		    		  case "ShowTMDBListing"		    If ID <> "" Then ShowURL( "http://www.themoviedb.org/movie/" + ID )		    		  case "ShowWikiEntry"		    ShowURL( "http://" + Prefs.textStringForKey("DBLanguage") + ".wikipedia.org/wiki/" + MovieAttr.Title.ReplaceAll( " ", "_" ) + "_(film)" )		    		  case "SearchGoogle"		    If MovieAttr.Title <> "" and MovieAttr.DateYear > -1 Then ShowURL( "http://www.google.com/search?q=" + MovieAttr.Title + " (" + str(MovieAttr.DateYear) + ")" )		    		  End Select		  		  // ---- Social sharing		  Select Case HitItem		    		  case "ShareOnFaceBook"		    Dim URL as String		    If MovieAttr.ID_TMDB <> "" Then		      URL = "http://www.themoviedb.org/movie/" + MovieAttr.ID_TMDB		    ElseIf MovieAttr.ID_IMDB <> "" Then		      URL = "http://imdb.com/title/" + MovieAttr.ID_IMDB		    Else		      URL = "http://www.imdb.com/find?q=" + MovieAttr.Title + "&s=all"		    End If		    ShareFaceBookLink URL, MovieAttr.Title		    		  case "ShareOnTwitter"		    Dim URL as String		    If MovieAttr.ID_TMDB <> "" Then		      URL = "http://www.themoviedb.org/movie/" + MovieAttr.ID_TMDB		    ElseIf MovieAttr.ID_IMDB <> "" Then		      URL = "http://imdb.com/title/" + MovieAttr.ID_IMDB		    Else		      URL = "http://www.imdb.com/find?q=" + MovieAttr.Title + "&s=all"		    End If		    ShareTweet MovieAttr.Title + " (" + Str(MovieAttr.DateYear) + ") " + URL + " #ViMediaManager"		    		  End Select		  		  		  // Sort By		  Select Case HitItem		    		  case "MovieTitle"		    Prefs.integerForKey("SortByMovie") = 0		    If ppMain.Value = 0 Then lstMovies.SortList		    'mBarMain.Child( "ViewSortByMovieTitle" ).Checked = True		    		  case "MovieSortTitle"		    Prefs.integerForKey("SortByMovie") = 1		    If ppMain.Value = 0 Then lstMovies.SortList		    'mBarMain.Child( "ViewSortByMovieSortTitle" ).Checked = True		    		  case "Path"		    If ppMain.Value = 0 Then		      Prefs.integerForKey("SortByMovie") = 2		      lstMovies.SortList		    ElseIf ppMain.Value = 1 Then		      Prefs.integerForKey("SortByTV") = 2		      'lstTVShows.SortList		    End If		    		  case "WatchedStatus"		    Prefs.integerForKey("SortByMovie") = 3		    If ppMain.Value = 0 Then lstMovies.SortList		    		  case "PremiereDate"		    Prefs.integerForKey("SortByMovie") = 4		    If ppMain.Value = 0 Then lstMovies.SortList		    		  case "Quality"		    Prefs.integerForKey("SortByMovie") = 5		    If ppMain.Value = 0 Then lstMovies.SortList		    		  case "Rating"		    Prefs.integerForKey("SortByMovie") = 6		    If ppMain.Value = 0 Then lstMovies.SortList		    		  case "Studio"		    Prefs.integerForKey("SortByMovie") = 10		    If ppMain.Value = 0 Then lstMovies.SortList		    		    // TV Show		  case "ShowTitle"		    Prefs.integerForKey("SortByTV") = 0		    'lstTVShows.SortList		    		  case "ShowSortTitle"		    Prefs.integerForKey("SortByTV") = 1		    'lstTVShows.SortList		    		  case "NextAired"		    Prefs.integerForKey("SortByTV") = 3		    'lstTVShows.SortList		    		  End Select		End Sub	#tag EndMethod#tag EndWindowCode#tag Events ppMain	#tag Event		Sub Change()		  WindowSetsmanager.Visible    = ( Me.Value = 0 ) // Sets Manager		  MenuSeparator(2).Visible     = ( Me.Value = 0 )		  		  MenuViewSortByMovie.Visible  = ( Me.Value = 0 ) // Sort by Movies		  MenuToolsExtraDownloadsMovies.Visible = ( Me.Value = 0 ) // Download Movie Extras		  		  MenuViewSortByTVShow.Visible = ( Me.Value = 1 ) // Sort by TV Shows		  MenuToolsExtraDownloadsShows.Visible = ( Me.Value = 1 ) // Download Show Extras		  		  For i as Integer = 0 to MainTB.Count - 1		    If MainTB.Item(i).Name = "MovieSets" Then MainTB.Item(i).Enabled = ( Me.Value = 0 )		  Next		  		  Prefs.setIntegerValue( "wndMainTab", Me.Value )		  		  Select Case me.Value		    		  Case 0		    CommonCore.SectionName = Loc.Movies		  Case 1		    CommonCore.SectionName = Loc.TVShows		  Case 2		    CommonCore.SectionName = Loc.Anime		    		  End Select		End Sub	#tag EndEvent	#tag Event		Sub Open()		  Me.Value = Prefs.integerForKey("wndMainTab")		  		  WindowSetsmanager.Visible    = ( Me.Value = 0 ) // Sets Manager		  MenuSeparator(2).Visible     = ( Me.Value = 0 )		  		  MenuViewSortByMovie.Visible  = ( Me.Value = 0 ) // Sort by Movies		  MenuToolsExtraDownloadsMovies.Visible = ( Me.Value = 0 ) // Download Movie Extras		  		  MenuViewSortByTVShow.Visible = ( Me.Value = 1 ) // Sort by TV Shows		  MenuToolsExtraDownloadsShows.Visible = ( Me.Value = 1 ) // Download Show Extras		  		  For i as Integer = 0 to MainTB.Count - 1		    If MainTB.Item(i).Name = "MovieSets" Then MainTB.Item(i).Enabled = ( Me.Value = 0 )		  Next		End Sub	#tag EndEvent#tag EndEvents#tag Events lstMovies	#tag Event		Function ConstructContextualMenu(base as MenuItem, x as Integer, y as Integer) As Boolean		  MenuConstructor base, Me		  Return True		End Function	#tag EndEvent	#tag Event		Function ContextualMenuAction(hitItem as MenuItem) As Boolean		  'CommonActions( hitItem.tag )		  CMActions hitItem.Tag		End Function	#tag EndEvent	#tag Event		Sub DoubleClick()		  If Me.Cell( Me.ListIndex, 2 ) = "" then CommonCore.FetchMetadata Else CommonCore.EditInfo		End Sub	#tag EndEvent#tag EndEvents#tag Events ccSearchBoxMovies	#tag Event		Sub Open()		  'Me.LiveSearch = True		End Sub	#tag EndEvent	#tag Event		Sub DoSearch(SearchText as String)		  ListSearch( SearchText )		End Sub	#tag EndEvent	#tag Event		Sub ResetSearch()		  Dim Lindex as Integer = lstMovies.ListIndex		  ListSearch( "" )		  lstMovies.ListIndex = Lindex		End Sub	#tag EndEvent#tag EndEvents#tag Events ActBar	#tag Event		Sub Open(index as Integer)		  me.ClearAttachments		  		  Select case index		  case 0		    'me.AttachLeft ccSearchBox		    me.AttachLeft lstMovies		    me.AttachRight cvsMovieDetails		    		  case 1		    Me.AttachLeft lstTVShows		    Me.AttachRight cvsTVShowDetails		    		  case 2		    		  End Select		End Sub	#tag EndEvent	#tag Event		Sub Moved(index as Integer, Distance as Integer)		  Select case index		  case 0		    Prefs.integerForKey("NSMoviesSidebarWidth")  = me.Width		    ccSearchBoxMovies.Width = me.Width - 1		    		  case 1		    Prefs.integerForKey("NSTVShowsSidebarWidth") = me.Width		    ccSearchBoxTVShows.Width = me.Width - 1		  case 2		    Prefs.integerForKey("NSAnimeSidebarWidth")   = me.Width		  End Select		End Sub	#tag EndEvent	#tag Event		Sub ActionMenu(index as Integer)		  Dim base as New MenuItem		  		  Select Case Me.Index		    		  Case 0		    MenuConstructor base, lstMovies		    		  Case 1		    MenuConstructor base, lstTVShows		    		  Case 2		    'MenuConstructor base, lstAnime		    		  End Select		  		  Dim HitItem as MenuItem = base.PopUp		  If HitItem IsA object Then 'CommonActions( HitItem.Name )		    CMActions hitItem.Tag		  End If		End Sub	#tag EndEvent	#tag Event		Sub ActionMinus(index as Integer)		  'CommonActions "DeleteItem"		  CommonCore.DeleteItem		End Sub	#tag EndEvent#tag EndEvents#tag Events cvsViewMovies	#tag Event		Sub Open()		  Me.Height = Self.Height		End Sub	#tag EndEvent#tag EndEvents#tag Events cvsMovieDetails	#tag Event		Function ConstructContextualMenu(base as MenuItem, x as Integer, y as Integer) As Boolean		  MenuConstructor base, lstMovies		End Function	#tag EndEvent	#tag Event		Function ContextualMenuAction(hitItem as MenuItem) As Boolean		  CMActions hitItem.Tag		End Function	#tag EndEvent	#tag Event		Sub Open()		  Me.Height = self.Height		  'Me.Width  = Self.Width - Prefs.integerForKey("NSMoviesSidebarWidth") + 1		  Me.Width  = Me.Width - ActBar(0).Width + 1		End Sub	#tag EndEvent	#tag Event		Sub Paint(g As Graphics)		  // White BG Filler		  g.ForeColor = &cFFFFFF		  g.FillRect 0, 0, me.Width, me.Height		  		  If lstMovies.ListIndex < 0 Then Return		  		  // Draw Backdrop		  Dim Backdrop as Picture		  If MovieAttr.ART_Fanart <> Nil Then		    Backdrop = MovieAttr.ART_Fanart		  Else		    Backdrop = IMGmovies		  End If		  		  If Backdrop <> Nil Then		    Dim Pic as New Picture( me.Width, me.Height, 32 )		    Pic = ScaleImage( Backdrop, Pic.Width, Pic.Height, True, True, False )		    Pic.Graphics.DrawPicture IMGFanartOverlay, 0, 0, Pic.Width, Pic.Height, 0, 0, IMGFanartOverlay.Width, IMGFanartOverlay.Height		    g.DrawPicture Pic, 0, 0		  End If		  		  		  // Draw Poster		  If MovieAttr.ART_Poster <> Nil Then		    Dim Pic as New Picture( 250, 250, 32 )		    Pic.Graphics.DrawPicture posterbg, 0, 0, 250, 250		    Pic.Graphics.DrawPicture MovieAttr.ART_Poster, 48, 16, 154, 219,   0, 0, MovieAttr.ART_Poster.Width, MovieAttr.ART_Poster.Height		    Pic.Mask = posterbg.Mask		    		    g.DrawPicture Pic, -30, 2		    		    		    // Movie Rating		    If MovieAttr.Rating > 0 Then		      		      g.TextSize = 10		      		      Dim Rating as Double = MovieAttr.Rating / 2		      Dim doub   as Integer = Val( Str( Rating ).NthField( ".", 2 ) )		      Rating = Floor( Rating )		      		      Dim RatingStr, BGStars as String		      		      For i as Integer = 1 to Rating		        RatingStr = RatingStr + "★ "		      Next		      		      If doub > 0 And doub <= 3 Then RatingStr = RatingStr + "¼ "		      If doub > 3 And doub <  7 Then RatingStr = RatingStr + "½ "		      If doub >= 7              Then RatingStr = RatingStr + "¾ "		      		      BGStars = RatingStr		      While BGStars.Len < 10		        BGStars = BGStars + "★ "		      Wend		      		      // Ribbon		      g.ForeColor = &c88A8BD		      g.FillRect 105 - 4, g.TextSize + 20 - 5, 75, 15		      		      // Ribbon wrap around		      g.ForeColor = &c98B8CD		      g.DrawLine 172, 25, 172, 25 + 14		      		      g.ForeColor = &c7898AD		      g.DrawLine 174, 25, 174, 25 + 14		      g.ForeColor = &c6D8D9F		      g.DrawLine 175, 25, 175, 25 + 14		      		      // Ribbon Shadow		      g.Transparency = 80		      g.ForeColor = &c000000		      g.DrawLine 100, 26, 100, 25 + 15		      g.DrawLine 101, 25 + 15, 175, 25 + 15		      		      g.Transparency = 90		      g.DrawLine 99, 27, 99, 25 + 15		      g.DrawLine 99, 25 + 16, 175, 25 + 16		      		      g.Transparency = 0		      		      // Background Stars		      g.ForeColor = &c62839A		      g.DrawString BGStars,   105, g.TextSize + 20 + 6		      		      // Foreground Stars		      g.ForeColor = &cFFFFFF		      g.DrawString RatingStr, 105, g.TextSize + 20 + 6		      		    End If		    		  End If		  		  		  // Draw Studio Logo		  If MovieAttr.ART_Studio <> Nil Then		    Graphics.DrawPicture ScaleImage( MovieAttr.ART_Studio, 161, 109 ), Width - MovieAttr.ART_Studio.Width - 10, 0		  End If		  		  		  // Draw ClearArt or Logo		  If MovieAttr.ART_ClearArt <> Nil Then		    Dim Pic as Picture		    Pic = ScaleImage( MovieAttr.ART_ClearArt, 500 * 0.80, 281 * 0.80 )		    Graphics.DrawPicture Pic, Width - Pic.Width, Height - Pic.Height		  ElseIf MovieAttr.ART_Logo <> Nil Then		    Dim Pic as Picture		    Pic = ScaleImage( MovieAttr.ART_Logo, 400, 155 )		    Graphics.DrawPicture Pic, Width - Pic.Width - 20, Height - Pic.Height - 20		  End If		  		  // Draw MPAA Rating		  If MovieAttr.ART_MPAARating <> Nil Then		    If MovieAttr.ART_Banner <> Nil Then		      Dim Pic as New Picture( 519, 101, 32 )		      		      Pic.Graphics.DrawPicture( MovieAttr.ART_Banner, 2, 1, 515, 95,   0, 0, MovieAttr.ART_Banner.Width, MovieAttr.ART_Banner.Height )		      Pic.Graphics.DrawPicture( BannerOverlay, 0, 0, Pic.Width + 1, Pic.Height + 1 )		      Pic.Mask = BannerMask		      		      If ( MovieAttr.ART_Logo <> Nil Or MovieAttr.ART_ClearArt <> Nil ) And _		        Me.Width > ( Pic.Width + 400 + 60 ) Then		        g.DrawPicture Pic, 19, Me.Height - Pic.Height - 10		        g.DrawPicture MovieAttr.ART_MPAARating, 20, Height - MovieAttr.ART_MPAARating.Height - 10 - Pic.Height - 10		      ElseIf MovieAttr.ART_Logo = Nil And MovieAttr.ART_ClearArt = Nil And _		        Me.Width > ( Pic.Width + 40 ) Then		        g.DrawPicture Pic, 19, Me.Height - Pic.Height - 10		        g.DrawPicture MovieAttr.ART_MPAARating, 20, Height - MovieAttr.ART_MPAARating.Height - 10 - Pic.Height - 10		      Else		        g.DrawPicture MovieAttr.ART_MPAARating, 20, Height - MovieAttr.ART_MPAARating.Height - 10		      End If		      		    Else		      g.DrawPicture MovieAttr.ART_MPAARating, 20, Height - MovieAttr.ART_MPAARating.Height - 10		    End If		    		  End If		  		  // -----		  Dim TextTop as Integer = 13		  Dim TextLeft as Integer = 20		  If MovieAttr.ART_Poster <> Nil Then TextLeft = 190		  		  Dim Title as String = MovieAttr.Title		  If MovieAttr.Title = "" Then		    Title = lstMovies.Cell( wndMain.lstMovies.ListIndex, 0 )		  ElseIf MovieAttr.DateYear > -1 Then		    Title = Title + " (" + Str(MovieAttr.DateYear) + ")"		  End If		  		  If Title.Len  >= 56 Then		    g.TextSize = 14		  ElseIf Title.Len >= 36 Then		    g.TextSize = 18		  Else		    g.TextSize = 28		  End If		  g.Bold = True		  TextTop = TextTop + g.TextSize		  		  // Write Title		  If MovieAttr.Title <> "" Then		    		    Dim YearLeft as Integer = TextLeft + g.StringWidth( MovieAttr.Title )		    If MovieAttr.DateYear > -1 Then		      g.ForeColor = &c000000		      g.Transparency = 40		      g.DrawString " (" + Str( MovieAttr.DateYear ) + ")", YearLeft, TextTop - 1 // Year - Shadow		      g.Transparency = 0		    End If		    		    g.ForeColor = &cFFFFFF		    g.DrawString MovieAttr.Title, TextLeft, TextTop + 1, Me.Width - 300 - 84, True // Title - HiLite		    If MovieAttr.DateYear > -1 Then g.DrawString " (" + Str( MovieAttr.DateYear ) + ")", YearLeft, TextTop + 1 // Year - HiLite		    		    g.ForeColor = &c333333		    g.DrawString MovieAttr.Title, TextLeft, TextTop, Me.Width - 300 - 84, True // Title		    		    g.ForeColor = &c999999		    If MovieAttr.DateYear > -1 Then g.DrawString " (" + Str( MovieAttr.DateYear ) + ")", YearLeft, TextTop // Year		  Else		    		    g.ForeColor  = &cFFFFFF		    g.DrawString Title, TextLeft, TextTop + 1, Me.Width - 300 - 84, True		    		    g.ForeColor  = &c333333		    g.DrawString Title, TextLeft, TextTop, Me.Width - 300 - 84, True		    		  End If		  		  g.Bold     = False		  g.Italic   = True		  g.TextSize = 12		  TextTop    = TextTop + 18		  		  // Write Tagline		  If MovieAttr.DescriptionTagline <> "" Then		    g.ForeColor = &cFFFFFF		    g.DrawString MovieAttr.DescriptionTagline, TextLeft, TextTop + 1, Me.Width - TextLeft - 161 - 20, False		    g.ForeColor = &c333333		    g.DrawString MovieAttr.DescriptionTagline, TextLeft, TextTop,     Me.Width - TextLeft - 161 - 20, False		    		    TextTop = TextTop + 4 + g.StringHeight( MovieAttr.DescriptionTagline, Me.Width - TextLeft - 161 )		  End If		  		  // Write Duration - Size - Genre(s) - Premiere		  Dim SubTagline as String		  g.Italic = False		  		  // Duration		  If Val( MovieAttr.InfoVideoRuntime ) > 0 Then		    Dim h as Integer = Floor( Val( MovieAttr.InfoVideoRuntime ) / 60 )		    Dim m as Integer = Val( MovieAttr.InfoVideoRuntime ) - ( h * 60 )		    		    Dim Hours, Minutes as String = ""		    If h > 0 Then Hours   = Str(h) + "h "		    If m > 0 Then Minutes = Str(m) + "m "		    		    SubTagline = Hours + Minutes		  End If		  		  Dim size as Double = Val( lstMovies.Cell( lstMovies.ListIndex, 11 ) )		  If size > 0 Then		    If SubTagline <> "" Then SubTagline = SubTagline + "- "		    		    If size > 1000 Then		      size = Round( size / 100 ) / 10		      SubTagline = SubTagline + Str( size ) + " GB "		    Else		      SubTagline = SubTagline + Str( Round( size * 10 ) / 10 ) + " MB "		    End If		  End If		  		  // Genre(s)		  If MovieAttr.Genres.Ubound > -1 Then		    If SubTagline <> "" Then SubTagline = SubTagline + "- "		    		    For i as Integer = 0 to 2		      If MovieAttr.Genres.Ubound < i Then Continue		      		      If MovieAttr.Genres.Ubound > i And i < 2 Then		        SubTagline = SubTagline + MovieAttr.Genres(i) + " | "		      Else		        SubTagline = SubTagline + MovieAttr.Genres(i) + " "		      End If		      		    Next		    		  End If		  		  // Premiere		  If MovieAttr.DatePremiered <> "" Then		    If SubTagline <> "" Then SubTagline = SubTagline + "- "		    		    SubTagline = SubTagline + PrettyDate( MovieAttr.DatePremiered, True )		  End If		  		  // Write		  If SubTagline <> "" Then		    g.Bold = True		    		    g.ForeColor = &cFFFFFF		    g.DrawString SubTagline, TextLeft, TextTop + 1, Me.Width - TextLeft - 161 - 20, True		    		    g.ForeColor = &c555555		    g.DrawString SubTagline, TextLeft, TextTop, Me.Width - TextLeft - 161 - 20, True		    		    g.Bold = False		    		    TextTop = TextTop + ( 18 * 2 )		  End If		  		  // Write Plot		  If MovieAttr.DescriptionPlot <> "" Then		    If MovieAttr.ART_Studio <> Nil Then TextTop = 120		    		    g.ForeColor = &cFFFFFF		    g.DrawString MovieAttr.DescriptionPlot, TextLeft, TextTop + 1, Me.Width - TextLeft - 20, False		    		    g.ForeColor = &c333333		    g.DrawString MovieAttr.DescriptionPlot, TextLeft, TextTop, Me.Width - TextLeft - 20, False		    		    TextTop = TextTop + g.StringHeight( MovieAttr.DescriptionPlot, Me.Width - TextLeft - 20 ) + 12		  End If		  		  		  If TextTop < 255 Then TextTop = 255		  TextLeft = 14		  		  // ----- High Ruler -----		  If MovieAttr.DescriptionPlot <> "" Then		    g.Transparency = 80		    g.ForeColor = &c000000		    g.DrawLine TextLeft, TextTop, Me.Width - 28, TextTop		    g.Transparency = 40		    g.ForeColor = &cFFFFFF		    g.DrawLine TextLeft, TextTop + 1, Me.Width - 28, TextTop + 1		  End If		  		  g.Transparency = 0		  		  // --- Credits		  TextTop = TextTop + 22		  		  // Director		  If MovieAttr.CreditDirector <> "" Then		    g.Bold = True		    		    g.ForeColor = &cFFFFFF		    g.DrawString Loc.mDirector, TextLeft, TextTop + 1		    		    g.ForeColor = &c333333		    g.DrawString Loc.mDirector, TextLeft, TextTop		    		    g.Bold = False		    		    g.ForeColor = &cFFFFFF		    g.DrawString MovieAttr.CreditDirector, TextLeft + 75, TextTop + 1		    		    g.ForeColor = &c333333		    g.DrawString MovieAttr.CreditDirector, TextLeft + 75, TextTop		    		    TextTop = TextTop + 18		  End If		  		  // Writer		  If MovieAttr.CreditWriter <> "" Then		    g.Bold = True		    		    g.ForeColor = &cFFFFFF		    g.DrawString Loc.mWriter, TextLeft, TextTop + 1		    		    g.ForeColor = &c333333		    g.DrawString Loc.mWriter, TextLeft, TextTop		    		    g.Bold = False		    		    g.ForeColor = &cFFFFFF		    g.DrawString MovieAttr.CreditWriter, TextLeft + 75, TextTop + 1		    		    g.ForeColor = &c333333		    g.DrawString MovieAttr.CreditWriter, TextLeft + 75, TextTop		    		    TextTop = TextTop + 18		  End If		  		  // Sound		  If MovieAttr.CreditSound <> "" Then		    g.Bold = True		    		    g.ForeColor = &cFFFFFF		    g.DrawString Loc.mSound, TextLeft, TextTop + 1		    		    g.ForeColor = &c333333		    g.DrawString Loc.mSound, TextLeft, TextTop		    		    g.Bold = False		    		    g.ForeColor = &cFFFFFF		    g.DrawString MovieAttr.CreditSound, TextLeft + 75, TextTop + 1		    		    g.ForeColor = &c333333		    g.DrawString MovieAttr.CreditSound, TextLeft + 75, TextTop		    		    TextTop = TextTop + 18		  End If		  		  // Top 5 Actors		  If MovieAttr.ActorName.Ubound > -1 Then		    g.Bold = True		    		    g.ForeColor = &cFFFFFF		    g.DrawString Loc.kActors, TextLeft, TextTop + 1		    		    g.ForeColor = &c333333		    g.DrawString Loc.kActors, TextLeft, TextTop		    		    g.Bold = False		    		    Dim txtleft as Integer = TextLeft + 75		    		    For i as Integer = 0 to 4		      If MovieAttr.ActorName.Ubound < i Then Continue		      		      g.ForeColor = &cFFFFFF		      If MovieAttr.ActorName.Ubound > i And i < 4 Then		        g.DrawString MovieAttr.ActorName(i) + ", ", txtleft, TextTop + 1		      Else		        g.DrawString MovieAttr.ActorName(i), txtleft, TextTop + 1		      End If		      		      g.ForeColor = &c333333		      If MovieAttr.ActorName.Ubound > i And i < 4 Then		        g.DrawString MovieAttr.ActorName(i) + ", ", txtleft, TextTop		      Else		        g.DrawString MovieAttr.ActorName(i), txtleft, TextTop		      End If		      		      txtleft = txtleft + g.StringWidth( MovieAttr.ActorName(i) + ", " )		    Next		    		    TextTop = TextTop + 18		  End If		  		  'If MovieAttr.InfoVideoAspect <> "" Then		  'TextTop = TextTop + 18		  '		  'g.ForeColor = &cFFFFFF		  'g.Bold = True		  'g.DrawString Loc.kAspectRatio, TextLeft, TextTop + 1		  'g.Bold = False		  'g.DrawString MovieAttr.InfoVideoAspect, TextLeft + 75, TextTop + 1		  '		  '		  'g.ForeColor = &c333333		  'g.Bold = True		  'g.DrawString Loc.kAspectRatio, TextLeft, TextTop		  'g.Bold = False		  'g.DrawString MovieAttr.InfoVideoAspect, TextLeft + 75, TextTop		  'End If		  		  #If DebugBuild Then		    g.ForeColor = &cFF0000		    'g.DrawRect 0, 0, me.Width, me.Height		  #EndIf		End Sub	#tag EndEvent#tag EndEvents#tag Events btnTest	#tag Event		Sub Open()		  Me.Visible = DebugBuild		End Sub	#tag EndEvent	#tag Event		Sub Action()		  ppMain.Value = 3		End Sub	#tag EndEvent#tag EndEvents#tag Events MainTB	#tag Event		Sub Action(item As ToolItem)		  		  Select Case item.Name		    		  Case "Movies"		    SwitchPanels 0		    'ViewMenu.Append MenuSortBy( lstMovies )		    		  Case "TVShows"		    SwitchPanels 1		    		  Case "Anime"		    SwitchPanels 2		    		    ' ----------------		  Case "ScrapeInfoAll"		    'CommonActions( "FetchMissingMetadata" )		    CommonCore.FetchMissingMetadata		    		  Case "ScrapeInfo"		    'CommonActions( "FetchMetadata" )		    CommonCore.FetchMetadata		    		  Case "ManualSearch"		    'CommonActions( "ManualSearch" )		    CommonCore.ManualSearch		    		  Case "ExtraArt"		    Dim lstBox as Listbox = GetActiveListbox		    If MenuExtraArt( lstBox ) <> Nil Then		      Dim HitItem as MenuItem = MenuExtraArt( lstBox ).PopUp		      If HitItem <> Nil Then CMActions hitItem.Tag'CommonActions( HitItem.Name )		    End If		    		    ' ----------------		  Case "EditMetadata"		    'CommonActions( "EditInfo" )		    CommonCore.EditInfo		    		  Case "RefreshList"		    'CommonActions( "ReloadList" )		    CommonCore.ReloadList		    		  Case "Clean"		    'CommonActions( "Clean" )		    CommonCore.Clean		    		  Case "MovieSets"		    If Trim( ccSearchBoxMovies.edtSearch.Text ) <> "" Then		      ccSearchBoxMovies.Reset		      wndMain.lstMovies.ListIndex = 0		    End If		    wndSetManager.Show		    		    		    ' ----------------		  Case "Donate"		    ShowURL App.DonationURL		    		  End Select		End Sub	#tag EndEvent	#tag Event		Sub Open()		  MainTB.Visible = Prefs.boolForKey("MainToolbarVisible")		  If MainTB.Visible Then MenuViewHideToolbar.Text = Menu.ViewHideToolbar Else MenuViewHideToolbar.Text = Menu.ViewShowToolbar		  		  Me.Item(1).Enabled = DebugBuild		  ToolButton( MainTB.Item( Prefs.integerForKey("wndMainTab") ) ).Pushed = True		End Sub	#tag EndEvent#tag EndEvents