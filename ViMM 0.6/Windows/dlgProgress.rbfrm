#tag WindowBegin Window dlgProgress   BackColor       =   &hFFFFFF   Backdrop        =   ""   CloseButton     =   False   Composite       =   False   Frame           =   1   FullScreen      =   False   HasBackColor    =   False   Height          =   130   ImplicitInstance=   True   LiveResize      =   False   MacProcID       =   0   MaxHeight       =   32000   MaximizeButton  =   False   MaxWidth        =   32000   MenuBar         =   ""   MenuBarVisible  =   True   MinHeight       =   64   MinimizeButton  =   False   MinWidth        =   64   Placement       =   3   Resizeable      =   False   Title           =   "#Loc.kProgress"   Visible         =   True   Width           =   486   Begin cvsLogo Logo      AcceptFocus     =   ""      AcceptTabs      =   ""      AutoDeactivate  =   True      Backdrop        =   ""      DoubleBuffer    =   False      Enabled         =   True      EraseBackground =   True      Height          =   64      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   20      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   True      Scope           =   0      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      Top             =   14      UseFocusRing    =   True      Visible         =   True      Width           =   64   End   Begin Label lblAction      AutoDeactivate  =   True      Bold            =   True      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   96      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      Multiline       =   ""      Scope           =   0      Selectable      =   False      TabIndex        =   1      TabPanelIndex   =   0      Text            =   "Action:"      TextAlign       =   0      TextColor       =   &h000000      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   14      Transparent     =   False      Underline       =   ""      Visible         =   True      Width           =   370   End   Begin Label lblDescription      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   96      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      Multiline       =   ""      Scope           =   0      Selectable      =   False      TabIndex        =   2      TabPanelIndex   =   0      Text            =   "Description"      TextAlign       =   0      TextColor       =   &h000000      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   34      Transparent     =   False      Underline       =   ""      Visible         =   True      Width           =   370   End   Begin ProgressBar pgBar      AutoDeactivate  =   True      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   96      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      Maximum         =   100      Scope           =   0      TabPanelIndex   =   0      Top             =   58      Value           =   0      Visible         =   True      Width           =   370   End   Begin PushButton btnCancel      AutoDeactivate  =   True      Bold            =   ""      ButtonStyle     =   0      Cancel          =   True      Caption         =   "#Loc.dlgcancel"      Default         =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   386      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   False      LockRight       =   True      LockTop         =   False      Scope           =   0      TabIndex        =   3      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   90      Underline       =   ""      Visible         =   True      Width           =   80   End   Begin Thread thrProgress      Height          =   32      Index           =   -2147483648      InitialParent   =   ""      Left            =   434      LockedInPosition=   False      Priority        =   10      Scope           =   0      StackSize       =   0      TabPanelIndex   =   0      Top             =   139      Width           =   32   End   Begin Label lblDebug      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   20      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   False      Multiline       =   ""      Scope           =   0      Selectable      =   False      TabIndex        =   4      TabPanelIndex   =   0      Text            =   ""      TextAlign       =   0      TextColor       =   &h000000      TextFont        =   "System"      TextSize        =   10      TextUnit        =   0      Top             =   90      Transparent     =   False      Underline       =   ""      Visible         =   False      Width           =   354   End   Begin HTTPSocket ScktTrailer      Address         =   ""      Height          =   32      Index           =   -2147483648      InitialParent   =   ""      Left            =   390      LockedInPosition=   False      Port            =   0      Scope           =   0      TabPanelIndex   =   0      Top             =   139      Width           =   32      yield           =   0   EndEnd#tag EndWindow#tag WindowCode	#tag Event		Sub Close()		  Stop		  		  ThreadMode = ""		  MovieID = ""		  MovieName = ""		End Sub	#tag EndEvent	#tag Event		Sub Open()		  Self.Title = ""		End Sub	#tag EndEvent	#tag MenuHandler		Function FileCloseWindow() As Boolean Handles FileCloseWindow.Action			Close			Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h0		Sub Add(Action as String = "", Description as String = "", addValue as Integer = 1, MaxValue as Integer = - 1)		  If Action <> "" Then lblAction.Text = Action		  If Description <> "" Then lblDescription.Text = Description		  If MaxValue > -1 Then pgBar.Maximum = MaxValue		  pgBar.Value = pgBar.Value + addValue		  If pgBar.Value >= pgBar.Maximum Then pgBar.Maximum = 0		  Self.Refresh		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Debug(debugtext as String)		  lblDebug.Text = debugtext		  Self.Refresh		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Sub GetYouTubeURL(XmlContent as String)		  Dim Xml as new XmlDocument		  Dim xroot, xnode as XmlNode		  Dim ID as String		  		  Dim YouTubePage as String		  		  Xml.PreserveWhitespace = False		  Xml.LoadXml( XmlContent )		  		  xroot = Xml.Child(0).Child(2).FirstChild		  		  If wndMain.ppMain.Value = 0 Then		    ID = MovieAttr.ID_TMDB		  ElseIf wndMain.ppMain.Value = 2 Then		    // ID = AnimeAttr.ID_TMDB		  End If		  		  For i as Integer = 0 to xroot.ChildCount - 1		    xnode = xroot.Child(i)		    		    If xnode.Name = "Trailer" And xnode.FirstChild = Nil Then		      MsgBox Loc.msgNoTrailer // For insurance		      Self.Close		      Return		      		    ElseIf xnode.Name = "Trailer" And xnode.FirstChild <> Nil Then		      		      If xnode.FirstChild.Value <> "" Then		        YouTubePage = ScktTrailer.Get( xnode.FirstChild.Value + "&hd=1", Prefs.integerForKey( "TimeOut" ) ) // add HD=1 for HD youtube video.		        Exit		      ElseIf xnode.FirstChild.Value = "" Then		        MsgBox Loc.msgNoTrailer // Just for extra insurance		        Return		      End If		      		    End If		    		  Next		  		  		  Dim idx1, idx2 As Integer		  idx1 = YouTubePage.InStr( "yt.preload.start(""" ) + 18		  idx2 = YouTubePage.InStr( idx1, ";" )		  Dim YouTubeVideoURL as String = YouTubePage.Mid( idx1, idx2 - idx1 - 2 )		  		  If YouTubeVideoURL.InStr("crossdomain") > 0 Then		    idx1 = YouTubePage.InStr( idx1, "yt.preload.start(""") + 18		    idx2 = YouTubePage.InStr( idx1, ";" )		    YouTubeVideoURL = YouTubePage.Mid( idx1, idx2 - idx1 - 2 )		  End If		  		  // UnEnconde these characters		  YouTubeVideoURL = YouTubeVideoURL.ReplaceAll( "\/", "/" )		  YouTubeVideoURL = YouTubeVideoURL.ReplaceAll( "\u0026", "&" )		  		  YouTubeVideoURL = YouTubeVideoURL.Replace("generate_204", "videoplayback") // Switch 'Generate' to 'Video'		  YouTubeVideoURL = YouTubeVideoURL.Replace("pmbypass&", "")                 // Remove these bypass things		  YouTubeVideoURL = YouTubeVideoURL.Replace("pmbypass=yes&", "")		  		  If YouTubeVideoURL <> "" Then		    ScktTrailer.Get YouTubeVideoURL, SpecialFolder.Temporary.Child( "trailer.downloading" )		  Else		    MsgBox Loc.msgNoTrailer		    Return		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Reset()		  pgBar.Value = 0		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub ScrapeMovie(tmpMovieID as String, tmpMovieName as String)		  MovieID = tmpMovieID		  MovieName = tmpMovieName		  		  Start( Loc.kProcessing + ":", "TMDB: " + tmpMovieName, 15, "ScrapeMovie" )		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Start(Action as String, Description as String, Max as Integer, RunThread as String)		  		  lblAction.Text = Action		  lblDescription.Text = Description		  pgBar.Maximum = Max		  pgBar.Value = 0		  self.Refresh		  		  ThreadMode = RunThread		  thrProgress.Run		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Stop(Kill as Boolean = True)		  If Kill then thrProgress.Kill		  pgBar.Value = pgBar.Maximum		  self.Refresh		  		  If Scrape.UnfoundTitles.Ubound > -1 Then Scrape.ShowUnfoundTitles()		  Close		  		  // Cleanup actions.		  Select Case ThreadMode		    		  Case "GetTrailer"		    scktTrailer.Close		    Dim f as FolderItem = SpecialFolder.Temporary.Child("trailer.downloading")		    If f <> Nil and f.Exists Then f.Delete		    wndMain.lstMovies.UpdateRow		    		  End Select		  Scrape.MassSearch = False		  		  ThreadMode = ""		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Update(Action as String = "", Description as String = "", Value as Integer, Max as Integer = - 1)		  If Action <> "" then lblAction.Text = Action		  If Description <> "" then lblDescription.Text = Description		  If Max > -1 Then pgBar.Maximum = Max		  If  Value >= pgBar.Maximum Then pgBar.Maximum = 0 Else pgBar.Value = Value		  Self.Refresh		End Sub	#tag EndMethod	#tag Property, Flags = &h1		Protected MovieID As String	#tag EndProperty	#tag Property, Flags = &h0		MovieName As String	#tag EndProperty	#tag Property, Flags = &h0		ThreadMode As String	#tag EndProperty	#tag Constant, Name = msgNoDestination, Type = String, Dynamic = True, Default = \"Destination not found.", Scope = Public		#Tag Instance, Platform = Any, Language = en, Definition  = \"Destination not found."		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Bestemming niet gevonden."	#tag EndConstant#tag EndWindowCode#tag Events btnCancel	#tag Event		Sub Action()		  Stop		End Sub	#tag EndEvent#tag EndEvents#tag Events thrProgress	#tag Event		Sub Run()		  Dim ID as String		  		  Select Case wndMain.ppMain.Value		    		  Case 0		    ID = MovieAttr.ID_TMDB		    If ID = "" Then ID = MovieAttr.ID_IMDB		    		  Case 1		    'ID = TVAttr.ID_TVDB		    		  Case 2		    'ID = TVAttr.ID_AniDB		    		  End Select		  		  If ThreadMode = "Test" Then MsgBox "Testing!"		  		  // Renaming Files/Folders		  Select Case ThreadMode		    		  Case "BatchRenameMovies"		    lblDescription.TextSize = 10		    Dim LstBox as Listbox = wndMain.lstMovies		    For i as Integer = 0 to LstBox.ListCount - 1		      If LstBox.Cell( i, 2 ) = "" Then Continue		      		      SingleRenamer( GetFolderItem( LstBox.Cell( i, 1 ) ), i, True )		    Next		    lblDescription.TextSize = 0		    		  End Select		  		  		  Select Case ThreadMode		    		  Case "ReloadMovies"		    Dim Lindex as Integer = wndMain.lstMovies.ListIndex		    wndMain.lstMovies.CreateList		    wndMain.lstMovies.ListIndex = Lindex		    // Movie scraping		    		  Case "MissingMovies"		    Scrape.MissingMovies		    		  Case "UpdateMovies"		    'Scrape.UpdateMovies		    Scrape.MovieUpdateAll		    		  Case "SelectedMovie"		    'Scrape.TMDBApiSearch( lblDescription.Text )		    Scrape.MovieSearch( lblDescription.Text )		    		  Case "ScrapeMovie"		    'Scrape.TMDBApi( MovieID )		    Scrape.MovieByID( MovieID )		    MovieID = ""		    		  Case "SearchMovie"		    'Scrape.TMDBApiSearch( MovieName )		    Scrape.MovieSearch( MovieName )		    MovieName = ""		    		  Case "UpdateMovieRating"		    'Scrape.UpdateMovie( MovieAttr.ID_IMDB, "IMDBRating" )		    Scrape.MovieUpdateRating		    		    // ---- TMDB Art		  Case "GetMoviePoster"		    Scrape.MovieArt( ID, "TMDB-Posters" )		  Case "GetMovieFanart"		    Scrape.MovieArt( ID, "TMDB-Backdrops" )		    		  Case "GetMovieExtrathumbs"		    Scrape.MovieExtraArts( ID, "Thumbs" )		  Case "GetMovieExtraFanart"		    Scrape.MovieExtraArts( ID, "Backdrops" )		    		    // ---- FanartTV Movie		  Case "GetMovieBanner"		    Scrape.MovieArt( ID, "FanartTV-moviebanner" )		  Case "GetMovieLogo"		    Scrape.MovieArt( ID, "FanartTV-movielogo" )		  Case "GetMovieArt"		    Scrape.MovieArt( ID, "FanartTV-movieart")		  Case "GetMovieDisc"		    Scrape.MovieArt( ID, "FanartTV-moviedisc" )		  Case "GetMovieThumb"		    Scrape.MovieArt( ID, "FanartTV-moviethumb" )		    		    // ---- Trailer		  Case "GetTrailer"		    If FindTrailerItem( MovieAttr.FolderParent ) <> Nil And _		      MsgDlg( Nil, 1, Loc.msgTrailerExists, Loc.kCantBeUndone, Loc.dlgCancel, Loc.dlgReplace ) = 1 Then Self.Close		      		      Dim URL as String		      ScktTrailer.Yield = True		      		      Dim DBLang as String = Prefs.textStringForKey("DBLanguage")		      If DBLang.InStr(0,"-") > 0 Then DBLang = "en"		      		      If ID <> "" Then URL = "http://api.themoviedb.org/2.1/Movie.getInfo/" + DBLang + "/xml/" + Scrape.ApiKey_TMDB + "/" + ID		      		      Dim XMLContent as String = ScktTrailer.Get( URL, Prefs.integerForKey( "TimeOut" ) )		      GetYouTubeURL( XmlContent )		      		  End Select		  		  If ThreadMode <> "GetTrailer" Then Close		End Sub	#tag EndEvent#tag EndEvents#tag Events lblDebug	#tag Event		Sub Open()		  If DebugBuild then me.Visible = True		End Sub	#tag EndEvent#tag EndEvents#tag Events ScktTrailer	#tag Event		Sub Error(code as integer)		  SocketError( code, Me )		  Me.Close		  		Exception err as NilObjectException		  Me.Close		End Sub	#tag EndEvent	#tag Event		Sub ReceiveProgress(bytesReceived as integer, totalBytes as integer, newData as string)		  Dim Max as Integer = totalBytes		  Dim Value as Integer = bytesReceived		  		  If Max = Value Then Max = 0		  Dim ValueMB, MaxMB as String		  ValueMB = Str( Floor( ( Value / 1024 / 1024 ) * 100 ) / 100 )		  MaxMB = Str( Floor( ( Max   / 1024 / 1024 ) * 100 ) / 100 )		  		  If ValueMB.Len = 3 Then ValueMB = ValueMB + "0"		  If Value = Max Then		    lblDescription.Text = Loc.kTrailer + "..."		  Else		    lblDescription.Text = Loc.kTrailer + "..." + " (" + ValueMB + " MB" + Loc.k1of2 + MaxMB + " MB" + ")"		  End If		  		  pgBar.Maximum = Max		  pgBar.Value = Value		End Sub	#tag EndEvent	#tag Event		Sub PageReceived(url as string, httpStatus as integer, headers as internetHeaders, content as string)		  Dim tmpContent as String = content		  		  If url.InStr( 0, "themoviedb" ) > 0 and tmpContent.Left(5) = "<?xml" and NOT tmpContent.InStr(0, "Nothing found") > 0 Then		    GetYoutubeURL( tmpContent )		  Else		    MsgBox Loc.msgNoTrailer		  End If		End Sub	#tag EndEvent	#tag Event		Sub DownloadComplete(url as string, httpStatus as integer, headers as internetHeaders, file as folderItem)		  Dim MovieFile, TrailerFile, Destination as FolderItem		  MovieFile = FindMovieItem( MovieAttr.FolderParent )		  TrailerFile = FindTrailerItem( MovieAttr.FolderParent )		  Me.Close		  		  If File <> Nil And File.Exists And File.Length > 1024 Then // File exists and is bigger then 1MB.		    		    // Set Trailer Destination.		    If MovieFile <> Nil And MovieFile.Exists And MovieFile.Name <> "VIDEO_TS" Then		      Destination = MovieAttr.FolderParent.Child( Prefs.textStringForKey("FileNameTrailer").ReplaceAll( "<movie>", MovieFile.NameWithoutExtension ) + File.VideoFileExtension )		    Else		      Destination = MovieAttr.FolderParent.Child( "trailer" + File.VideoFileExtension )		    End If		    		    // Move trailer to destination		    If Destination <> Nil Then		      If TrailerFile <> Nil Then TrailerFile.MoveFileToTrash		      File.MoveFileTo Destination		    Else		      MsgBox msgNoDestination		    End If		    		  Else		    SocketError( Me.LastErrorCode, Me )		  End If		  		  Close		End Sub	#tag EndEvent#tag EndEvents