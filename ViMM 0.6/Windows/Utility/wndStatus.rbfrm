#tag WindowBegin Window wndStatus   BackColor       =   &hFFFFFF   Backdrop        =   ""   CloseButton     =   True   Composite       =   False   Frame           =   0   FullScreen      =   False   HasBackColor    =   False   Height          =   400   ImplicitInstance=   True   LiveResize      =   True   MacProcID       =   0   MaxHeight       =   32000   MaximizeButton  =   False   MaxWidth        =   32000   MenuBar         =   ""   MenuBarVisible  =   True   MinHeight       =   64   MinimizeButton  =   True   MinWidth        =   64   Placement       =   3   Resizeable      =   True   Title           =   "Untitled"   Visible         =   True   Width           =   600   Begin Listbox lstResults      AutoDeactivate  =   True      AutoHideScrollbars=   True      Bold            =   ""      Border          =   True      ColumnCount     =   2      ColumnsResizable=   ""      ColumnWidths    =   "100%, 0"      DataField       =   ""      DataSource      =   ""      DefaultRowHeight=   64      Enabled         =   True      EnableDrag      =   ""      EnableDragReorder=   ""      GridLinesHorizontal=   0      GridLinesVertical=   0      HasHeading      =   False      HeadingIndex    =   -1      Height          =   380      HelpTag         =   ""      Hierarchical    =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   ""      Left            =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      RequiresSelection=   ""      Scope           =   0      ScrollbarHorizontal=   ""      ScrollBarVertical=   True      SelectionType   =   0      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   0      Underline       =   ""      UseFocusRing    =   False      Visible         =   True      Width           =   600      _ScrollWidth    =   -1   EndEnd#tag EndWindow#tag WindowCode	#tag Event		Sub Close()		  Preferences.SaveWindowPos( Self, "wndStatus" )		End Sub	#tag EndEvent	#tag Event		Sub Open()		  Preferences.LoadWindowPos( Self, "wndStatus" )		End Sub	#tag EndEvent	#tag MenuHandler		Function FileCloseWindow() As Boolean Handles FileCloseWindow.Action			Close			Return True		End Function	#tag EndMenuHandler	#tag Method, Flags = &h1		Protected Sub ShowInList(f as FolderItem)		  		  Dim Lindex as Integer = -1		  		  For i as Integer = 0 to ActiveListbox.ListCount -1		    If f.AbsolutePath = ActiveListbox.Cell( i, 1 ) Then		      Lindex = i		      Exit		    End If		  Next		  		  		  If Lindex = -1 Then		    If ActiveListbox = wndMain.lstTVShows Then wndMain.lstTVShows.AllExpanded( True )		    		    For i as Integer = 0 to ActiveListbox.ListCount -1		      If f.AbsolutePath = ActiveListbox.Cell( i, 1 ) Then		        Lindex = i		        Exit		      End If		    Next		  End If		  		  If Lindex > -1 Then		    ActiveListbox.ListIndex = Lindex		    'self.Close		  Else		    MsgBox "Couldn't find selection."		  End If		End Sub	#tag EndMethod	#tag Constant, Name = kShowInList, Type = String, Dynamic = True, Default = \"Show in List", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"Show in List"		#Tag Instance, Platform = Any, Language = Default, Definition  = \"Toon in lijst"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Afficher dans la liste"	#tag EndConstant#tag EndWindowCode#tag Events lstResults	#tag Event		Sub Open()		  'If NOT DebugBuild And NOT App.Experimental Then Me.HasHeading = False		  		  Me.Top = -1		  Me.Left = -1		  		  Me.Height = Self.Height + 1		  Me.Width = Self.Width + 2		  		  Self.Title = Str( Me.ListCount ) + " "		  If ActiveSection = 0 Then		    Self.Title = Self.Title + Loc.Movies		  ElseIf ActiveSection = 1 Then		    Self.Title = self.Title + Loc.TVShows		  End If		End Sub	#tag EndEvent	#tag Event		Function CellBackgroundPaint(g As Graphics, row As Integer, column As Integer) As Boolean		  // Background		  If Me.Active AND Me.Enabled Then		    g.ForeColor = RGB( 232, 232, 232 )		  Else		    g.ForeColor = RGB( 255, 255, 255 )		  End If		  g.FillRect 0, 0, g.Width, g.Height		  		  		  If row < Me.ListCount Then		    		    g.ForeColor = RGB( 214, 214, 214 )		    g.DrawLine 0, g.Height -1, g.Width, g.Height -1		    		    g.ForeColor = RGB( 255, 255, 255 )		    g.DrawLine 0, 0, g.Width, 0		  End If		  		  // Selection Gradient		  If Row > -1 And Me.Selected( row ) Then g.DrawGradient( RGB(115, 176, 227), RGB( 71, 131, 208), 0, 0, g.Width, g.Height )		  		  		  // Borders		  If row < Me.ListCount Then		    'g.ForeColor = RGB( 214, 214, 214, ( 80 / 100 ) * 255 )		    g.ForeColor = RGBa( 0, 0, 0, 10 )		    g.DrawLine 0, g.Height -1, g.Width, g.Height -1		    		    'g.ForeColor = RGB( 255, 255, 255, ( 80 / 100 ) * 255 )		    g.ForeColor = RGBa( 100, 100, 100, 40 )		    g.DrawLine 0, 1, g.Width, 1		  End If		  		  		  // Show/Hide Button		  Dim f as FolderItem		  If Row < Me.ListCount Then		    f = Me.RowTag( Row )		    		    If f <> Nil And f.Exists Then		      		      g.TextFont = "Arial Narrow Bold"		      g.TextSize = 13		      		      Dim btnText as String = "Show"		      'If Me.Expanded( row ) Then btnText = "Hide"		      btnText = btnText.Uppercase		      		      // Draw button bg		      'g.ForeColor = RGB( 255, 255, 255 )		      g.ForeColor = RGBa( 100, 100, 100, 60 )		      g.FillRoundRect g.Width - 10 - 50, ( g.Height / 2 ) - 7,   50, 18,   10, 10		      		      'g.ForeColor = RGBa( 65, 65, 65 )		      g.ForeColor = RGBa( 0, 0, 0, 20 )		      g.FillRoundRect g.Width - 10 - 50, ( g.Height / 2 ) - 9,   50, 18,   10, 10		      		      g.ForeColor = RGBa( 79, 79, 79, 80 )		      g.FillRoundRect g.Width - 10 - 50, ( g.Height / 2 ) - 8,   50, 18,   10, 10		      		      // Draw button text		      g.ForeColor = RGB( 255, 255, 255 )		      g.DrawString btnText, ( ( g.Width - 10 - 50 ) + 25 ) - ( g.StringWidth( btnText ) / 2 ), g.TextSize + 1 + ( g.Height / 2 ) - ( g.StringHeight( btnText, Me.Width ) / 2 )		      		      g.ForeColor = RGBa( 39, 39, 39 )		      g.DrawString btnText, ( ( g.Width - 10 - 50 ) + 25 ) - ( g.StringWidth( btnText ) / 2 ), g.TextSize + ( g.Height / 2 ) - ( g.StringHeight( btnText, Me.Width ) / 2 )		      		    End If		    		  End If		  		  Return True		End Function	#tag EndEvent	#tag Event		Function CellTextPaint(g As Graphics, row As Integer, column As Integer, x as Integer, y as Integer) As Boolean		  		  If column <> 0 Then Return False		  		  		  // ## Left Poster icon		  Dim posteritem as FolderItem = Me.RowTag( row )		  Dim PosterSize as Integer = 52		  		  If Prefs.boolForKey("ShowPostersInList") Then		    Dim i as Integer = 0		    If Me.DefaultRowHeight <= 22 Then i = 3		    		    posteritem = FindImagePoster( posteritem )		    If posteritem <> Nil And posteritem.Exists Then		      		      Dim PosterPic as Picture = Picture.Open( posteritem )		      If PosterPic <> Nil Then		        Dim Factor as Double = PosterSize / PosterPic.Height		        g.DrawPicture PosterPic, 5 - i, ( Me.DefaultRowHeight / 2 ) - ( PosterSize / 2 ),       PosterPic.Width * Factor,         PosterPic.Height * Factor,      0, 0, PosterPic.Width, PosterPic.Height		        g.DrawRect               4 - i, ( Me.DefaultRowHeight / 2 ) - ( PosterSize / 2 ) - 1, ( PosterPic.Width * Factor ) + 2, ( PosterPic.Height * Factor ) + 2		      End If		      		    End If		  End If		  		  		  // ## Left Status Icon		  If ( posteritem = Nil Or NOT posteritem.Exists ) OR NOT Prefs.boolForKey("ShowPostersInList") Then		    Dim i as Integer = 0		    If Me.DefaultRowHeight <= 22 Then i = 3		    		    Dim PosterInfo as Picture = videoclean		    		    If App.ScalingFactor = 2 Then // Retina		      If Me.DefaultRowHeight <= 22 Then PosterInfo = videounwatchedsmall Else PosterInfo = videounwatched2x		    Else // SD		      If Me.DefaultRowHeight >= 64 Then PosterInfo = videounwatched Else PosterInfo = videounwatchedsmall		    End If		    		    g.DrawPicture PosterInfo, 5 - i, ( Me.DefaultRowHeight / 2 ) - ( PosterSize / 2 ), PosterSize / 1.5, PosterSize,  0, 0, PosterInfo.Width, PosterInfo.Height		  End If		  		  		  // Text		  g.TextSize = 12		  If Me.Selected( row ) Then g.Bold = True		  g.DrawString( Me.Cell( row, column ), PosterSize + 4, g.TextSize + ( g.Height / 2 ) - ( ( g.StringHeight( Me.Cell( row, column ), g.Width - ( PosterSize + 4 ) - 50 ) / 2 ) ), g.Width - ( PosterSize + 4 ) - 50 )		  		  		  Dim MyObj as New PopupArrow		  MyObj.Left = 0		  MyObj.Top  = 0		  		  Return True		  		End Function	#tag EndEvent	#tag Event		Function ConstructContextualMenu(base as MenuItem, x as Integer, y as Integer) As Boolean		  If X > 0 And Y > 0 And _		    X < Me.Width And Y < Me.Width Then		    		    base.Append New MenuItem( Menu.FileShowInFinder, "ShowInFinder" )		    base.Append New MenuItem( kShowInList, "ShowInList" )		    		    Return True		  End If		End Function	#tag EndEvent	#tag Event		Function ContextualMenuAction(hitItem as MenuItem) As Boolean		  If hitItem = Nil Then Return False		  		  		  Dim f as FolderItem = Me.RowTag( Me.ListIndex )		  		  Select Case hitItem.Tag		    		  Case "ShowInFinder"		    If f <> Nil And f.Exists Then f.ShowInFinder()		    		  Case "ShowInList"		    ShowInList(f)		    		  End Select		  		  		End Function	#tag EndEvent	#tag Event		Function CellClick(row as Integer, column as Integer, x as Integer, y as Integer) As Boolean		  		  Dim iLeft as Integer = 0		  If ( Me.ListCount - 1 ) * Me.DefaultRowHeight > Me.Height Then iLeft = 16		  		  If Me.RowTag( row ) <> Nil And _ 'Me.RowTag( row ) = "Folder" And _		    y > ( Me.DefaultRowHeight / 2 ) - 8 And y < ( ( Me.DefaultRowHeight / 2 ) - 8 ) + 18 And _		    x > Me.Width - 10 - 50 - iLeft And x < Me.Width - 10 - iLeft Then		    		    Dim f as FolderItem = Me.RowTag( row )		    'If f <> Nil And f.Exists Then f.ShowInFinder		    ShowInList(f)		    		    'Me.Expanded( row ) = NOT Me.Expanded( row )		    Return True		  End If		  		  Return False		End Function	#tag EndEvent	#tag Event		Sub Change()		  'Self.Title = Str( Me.ListCount ) + " "		  'If ActiveSection = 0 Then		  'Self.Title = Self.Title + Loc.Movies		  'ElseIf ActiveSection = 1 Then		  'Self.Title = self.Title + Loc.TVShows		  'End If		End Sub	#tag EndEvent#tag EndEvents