#tag ClassProtected Class IMDBInherits HTTPSocket	#tag Event		Sub Error(code as integer)		  SocketError(code, self)		End Sub	#tag EndEvent	#tag Method, Flags = &h0		Sub IMDbFullInfo(XmlContent As String)		  Dim Xml as new XmlDocument		  Dim xroot as XmlNode		  Dim Plot as String		  		  Xml.PreserveWhitespace = False		  Xml.LoadXml( XmlContent )		  xroot = Xml.Child(0).FirstChild		  Plot = xroot.GetAttribute("plot")		  		  if Plot.Len > MovieAttr.Plot.Len and _		    Plot <> "" and _		    plot <> "N/A" and _		    Preferences.DBLanguage = "en" then		    MovieAttr.Plot = Plot		  end if		  		  if xroot.GetAttribute("rating")   <> "" then MovieAttr.Rating    = val( xroot.GetAttribute("rating") )		  if xroot.GetAttribute("votes")    <> "" then MovieAttr.Votes     = xroot.GetAttribute("votes")		  if xroot.GetAttribute("released") <> "" and  MovieAttr.Premiered = "" then MovieAttr.Premiered = xroot.GetAttribute("released")		  if xroot.GetAttribute("year")     <> "" then MovieAttr.Year      = xroot.GetAttribute("year")		  if xroot.GetAttribute("director") <> "" and  MovieAttr.Director  = "" then MovieAttr.Director  = xroot.GetAttribute("director")		  if xroot.GetAttribute("writer")   <> "" and  MovieAttr.Writer    = "" then MovieAttr.Writer    = xroot.GetAttribute("writer")		  		  return		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub IMDbShortInfo(XmlContent As String)		  Dim Xml as new XmlDocument		  Dim xroot as XmlNode		  Dim Outline As String		  		  Xml.PreserveWhitespace = False		  Xml.LoadXml( XmlContent )		  xroot = Xml.Child(0).FirstChild		  		  Outline = xroot.GetAttribute("plot")		  if Outline.Len > MovieAttr.Outline.Len and _		    Outline <> "" and _		    Outline <> "N/A" and _		    Preferences.DBLanguage = "en" then		    MovieAttr.Outline = Outline		  end if		  		  return		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub IMDbTV(XmlContent As String)		  Dim Xml as new XmlDocument		  Dim xroot as XmlNode		  Dim sGenre, aGenre() As String		  		  Xml.PreserveWhitespace = False		  Xml.LoadXml( XmlContent )		  xroot = Xml.Child(0).FirstChild		  		  if xroot.GetAttribute("rating")   <> "" and xroot.GetAttribute("ratign")   <> "N/A" then TVAttr.Rating    = val( xroot.GetAttribute("rating") )		  if xroot.GetAttribute("votes")    <> "" and xroot.GetAttribute("votes")    <> "N/A" then TVAttr.Votes     = val( xroot.GetAttribute("votes") )		  'if xroot.GetAttribute("released") <> "" and xroot.GetAttribute("released") <> "N/A" then TVAttr.Premiered = xroot.GetAttribute("released")		  if xroot.GetAttribute("genre")    <> "" and xroot.GetAttribute("genre")    <> "N/A" then sGenre = xroot.GetAttribute("genre").ReplaceAll("Sci-Fi", "Science-Fiction")		  		  aGenre = sGenre.Split(", ")		  if TVAttr.Genre.Ubound < aGenre.Ubound then TVAttr.Genre = aGenre		  		  'if xroot.GetAttribute("year")     <> "" then TVAttr.Year      = xroot.GetAttribute("year")		  'if xroot.GetAttribute("director") <> "" then TVAttr.Director  = xroot.GetAttribute("director")		  'if xroot.GetAttribute("writer")   <> "" then TVAttr.Writer    = xroot.GetAttribute("writer")		  		  return		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function URL_IMDBApi(IMDBID As String = "", Full As Boolean) As String		  If full then		    return "http://www.imdbapi.com/?i=" + IMDBID + "&r=xml&plot=full"		  else		    return "http://www.imdbapi.com/?i=" + IMDBID + "&r=xml&plot=short"		  end if		End Function	#tag EndMethod	#tag Note, Name = IMDB Api				3th Party Api:		http://www.imdbapi.com/	#tag EndNote	#tag ViewBehavior		#tag ViewProperty			Name="Address"			Visible=true			Group="Behavior"			Type="String"			InheritedFrom="TCPSocket"		#tag EndViewProperty		#tag ViewProperty			Name="defaultPort"			Group="Behavior"			InitialValue="0"			Type="integer"			InheritedFrom="HTTPSocket"		#tag EndViewProperty		#tag ViewProperty			Name="httpProxyAddress"			Group="Behavior"			Type="string"			EditorType="MultiLineEditor"			InheritedFrom="HTTPSocket"		#tag EndViewProperty		#tag ViewProperty			Name="httpProxyPort"			Group="Behavior"			InitialValue="0"			Type="integer"			InheritedFrom="HTTPSocket"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			Type="Integer"			InheritedFrom="TCPSocket"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InheritedFrom="TCPSocket"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="TCPSocket"		#tag EndViewProperty		#tag ViewProperty			Name="Port"			Visible=true			Group="Behavior"			InitialValue="0"			Type="Integer"			InheritedFrom="TCPSocket"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="TCPSocket"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InheritedFrom="TCPSocket"		#tag EndViewProperty		#tag ViewProperty			Name="yield"			Visible=true			Group="Behavior"			InitialValue="1"			Type="boolean"			InheritedFrom="HTTPSocket"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass