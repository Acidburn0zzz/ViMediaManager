#tag WindowBegin Window wndPilots   BackColor       =   &hFFFFFF   Backdrop        =   ""   CloseButton     =   True   Composite       =   True   Frame           =   0   FullScreen      =   False   HasBackColor    =   False   Height          =   654   ImplicitInstance=   True   LiveResize      =   True   MacProcID       =   0   MaxHeight       =   32000   MaximizeButton  =   False   MaxWidth        =   32000   MenuBar         =   ""   MenuBarVisible  =   True   MinHeight       =   600   MinimizeButton  =   True   MinWidth        =   600   Placement       =   3   Resizeable      =   True   Title           =   "#Loc.TVShows"   Visible         =   True   Width           =   1024   Begin ListboxPRO lstPilots      AlternatingRows =   True      AutoDeactivate  =   True      AutoHideScrollbars=   True      Bold            =   ""      Border          =   False      ColumnCount     =   6      ColumnsResizable=   True      ColumnWidths    =   "175, 100, 75, 100, 0, 0, 0"      DataField       =   ""      DataSource      =   ""      DefaultRowHeight=   44      Enabled         =   True      EnableDrag      =   ""      EnableDragReorder=   ""      GridLinesHorizontal=   0      GridLinesVertical=   0      HasHeading      =   1      HeadingIndex    =   -1      Height          =   606      HelpTag         =   ""      Hierarchical    =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   "#Loc.mTitle	#Loc.mNetwork	#Loc.kStatus	#Loc.kAiring	Link"      Italic          =   ""      Left            =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   True      RequiresSelection=   ""      Scope           =   0      ScrollbarHorizontal=   True      ScrollBarVertical=   True      SelectionGradient=   True      SelectionType   =   0      SourceList      =   False      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   0      TypeToSearch    =   False      Underline       =   ""      UseFocusRing    =   False      Visible         =   True      Width           =   466      _ScrollWidth    =   -1   End   Begin HTMLViewer HTMLShowInfo      AutoDeactivate  =   True      Enabled         =   True      Height          =   606      HelpTag         =   ""      Index           =   -2147483648      Left            =   467      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      Renderer        =   0      Scope           =   0      TabIndex        =   2      TabPanelIndex   =   0      Top             =   0      Visible         =   True      Width           =   558   End   Begin PopupMenu popDestination      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   ""      Left            =   20      ListIndex       =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   False      Scope           =   0      TabIndex        =   3      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   617      Underline       =   ""      Visible         =   True      Width           =   274   End   Begin PushButton btnAdd      AutoDeactivate  =   True      Bold            =   ""      ButtonStyle     =   0      Cancel          =   ""      Caption         =   "#Loc.MenuAddDir"      Default         =   ""      Enabled         =   False      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   306      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   False      Scope           =   0      TabIndex        =   4      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   617      Underline       =   ""      Visible         =   True      Width           =   130   End   Begin PopupMenu popCountries      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   ""      Left            =   712      ListIndex       =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   False      LockRight       =   True      LockTop         =   False      Scope           =   0      TabIndex        =   5      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   617      Underline       =   ""      Visible         =   True      Width           =   140   End   Begin PopupMenu popContext      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   "#Loc.kAll\r-\r#TVPilots\r#NewSeries\r#NewSeasons"      Italic          =   ""      Left            =   864      ListIndex       =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   False      LockRight       =   True      LockTop         =   False      Scope           =   0      TabIndex        =   6      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   617      Underline       =   ""      Visible         =   True      Width           =   140   End   Begin ProgressBar prgBar      AutoDeactivate  =   True      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   467      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   False      Maximum         =   100      Scope           =   0      TabPanelIndex   =   0      Top             =   617      Value           =   0      Visible         =   False      Width           =   233   EndEnd#tag EndWindow#tag WindowCode	#tag Event		Sub Close()		  Preferences.SaveWindowPos( self, "wndPilots" )		End Sub	#tag EndEvent	#tag Event		Sub Open()		  self.bottomBorderThickness = 48		  Preferences.LoadWindowPos( self, "wndPilots" )		  		  FetchPilots( popCountries.RowTag( popCountries.ListIndex ), popContext.Text )		End Sub	#tag EndEvent	#tag MenuHandler		Function FileCloseWindow() As Boolean Handles FileCloseWindow.Action			Close			Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h1		Protected Sub FetchPilots(CountryCode as String = "", Mode as String = "")		  'Preferences.LoadWindowPos( self, "wndPilots")		  		  If CountryCode = "" Then CountryCode = "US"		  If Mode = "" Then Mode = TVPilot		  		  Dim sckt as New HTTPSocket		  sckt.Yield = True		  		  wndPilots.Show		  		  		  Dim Pairs() as Pair		  		  		  prgBar.Visible = True		  prgBar.Maximum = 0		  prgBar.Value = 0		  		  Dim URL, Country as String		  URL = "http://services.tvrage.com/feeds/fullschedule.php?country=" + CountryCode + "&24_format=1"		  Country = FlagCountry( CountryCode )		  		  'Pairs.Append "America"        : "http://services.tvrage.com/feeds/fullschedule.php?country=US&24_format=1"		  'Pairs.Append "Japan"          : "http://services.tvrage.com/feeds/fullschedule.php?country=JP&24_format=1"		  'Pairs.Append "Netherland"     : "http://services.tvrage.com/feeds/fullschedule.php?country=NL&24_format=1"		  'Pairs.Append "Belgium"        : "http://services.tvrage.com/feeds/fullschedule.php?country=BE&24_format=1"		  'Pairs.Append "United Kingdom" : "http://services.tvrage.com/feeds/fullschedule.php?country=UK&24_format=1"		  'Pairs.Append "Germany"        : "http://services.tvrage.com/feeds/fullschedule.php?country=DE&24_format=1"		  'Pairs.Append "Canada"         : "http://services.tvrage.com/feeds/fullschedule.php?country=CA&24_format=1"		  'Pairs.Append "Russia"         : "http://services.tvrage.com/feeds/fullschedule.php?country=RU&24_format=1"		  'Pairs.Append "Australia"      : "http://services.tvrage.com/feeds/fullschedule.php?country=AU&24_format=1"		  'Pairs.Append "France"         : "http://services.tvrage.com/feeds/fullschedule.php?country=FR&24_format=1"		  'Pairs.Append "Italy"          : "http://services.tvrage.com/feeds/fullschedule.php?country=IT&24_format=1"		  		  		  		  Dim Dict as New Dictionary		  Dim s as String = DefineEncoding( sckt.Get( URL, 60 ), Encodings.UTF8 ).ReplaceAll("&amp;","&").ReplaceAll("&quot;","""")		  sckt.Close		  		  Dim Days() as String = match_all( "<DAY(.*?)<\/DAY", s, 0 )		  Dim i as Integer = 0		  		  prgBar.Maximum = Days.Ubound		  prgBar.Value = i		  		  For each day as String in Days		    Dim DayDate as String = day.MyMid( "attr=""", """" )		    Dim Shows() as String = match_all( "<show(.*?)<\/show", day, 0 )		    		    i = i + 1		    prgBar.Value = i		    		    For each Show as String in Shows		      		      'If Mode <> Loc.kAll Then		      'Dim Eppy as String = Show.MyMid("<ep>", "</ep>")		      'If Mode = TVPilots And NOT Eppy.Contains("01x01") Then Continue // Pilots only		      'If Mode = NewSeries Then // New Seasons (& Pilots)		      'If NOT Eppy.Contains("01x") Then Continue		      'If Val( Eppy.NthField("x", 2) ) > 12 Then Continue		      'End If		      'If Mode = NewSeasons And NOT Eppy.Contains("x01") Then Continue // New Seasons Starts (& Pilots)		      'End If		      		      'If Keyboard.AsyncControlKey Then		      'If NOT GuideMode And NOT show.MyMid("<ep>", "</ep>").Contains("x01") Then Continue // Pilots & New Seasons		      'Else		      'If NOT GuideMode And NOT Show.MyMid("<ep>", "</ep>").Contains("01x01") Then Continue // Pilots only		      'End If		      		      'If NOT GuideMode And CountryCode = "JP" And NOT show.MyMid("<ep>", "</ep>").Contains("x01") Then Continue		      'OR ( CountryCode = "JA" And NOT S.MyMid( "<ep>", "</ep>" ).contains("x01") ) ) ) Then Continue		      		      Dim Date as String = DayDate.NthField( "-", 1 ) + "-" + Format( Val( DayDate.NthField( "-", 2 ) ), "00" ) + "-" + Format( Val( DayDate.NthField( "-", 3 ) ), "00" )		      		      Dim NewShow as New Dictionary		      NewShow.Value( "id" ) = Trim( Show.MyMid( "<sid>", "</sid>" ) )		      NewShow.Value( "name" ) = Trim( Show.MyMid( "name=""", """>" ) )'.ReplaceAll( "&amp;", "&" )		      NewShow.Value( "network" ) = Trim( Show.MyMid( "<network>", "</network>" ) )'.ReplaceAll( "&amp;", "&" )		      NewShow.Value( "episodelink" ) = Trim( Show.MyMid( "<link>", "</link>" ) )'.ReplaceAll( "&amp;", "&" )		      'NewShow.Value( "link" ) = "http://services.tvrage.com/feeds/showinfo.php?sid=" + NewShow.Value("id")		      NewShow.Value( "link" ) = NewShow.Value( "episodelink" ).left( NewShow.Value("episodelink").InStr( "/episodes/" ) - 1 )		      NewShow.Value( "episode" ) = Trim( Show.MyMid( "<title>", "</title>" ) )'.ReplaceAll( "&amp;", "&" )		      NewShow.Value( "number") = Trim( Show.MyMid( "<ep>", "</ep>" ) )		      NewShow.Value( "date" ) = Date		      NewShow.Value( "country" ) = Country		      		      'Dim Content as String = sckt.Get( NewShow.Value("link"), 60 )		      'sckt.Close		      		      'Dim ShowInfo as String = sckt.Get( NewShow.Lookup("link",""), 60 )		      'NewShow.Value( "country" ) = match_all( "country=""(.*?)""", ShowInfo )		      		      'If Dict.Lookup( NewShow.Lookup("id", "" ) + NewShow.Lookup("episode",""), "" ) <> Nil Then Dict.Value( NewShow.Value("id") + NewShow.Lookup("episode","") ) = NewShow		      Dict.Value( Dict.Count + 1 ) = NewShow		    Next		    		    Dim t as String		  Next		  		  TVGuide = Dict		  Filter( popContext.Text )		  		  		  'wndPilots.Show		  'Dim LstBox as Listbox = lstSearch 'wndPilots.lstPilots		  'LstBox.DeleteAllRows		  '		  'For each Key as Variant in Dict.Keys		  '		  '// Pretty episode representation		  'Dim D as Dictionary = Dict.Value( Key )		  'Dim Ep as String		  'If d.Value("number") = "01x01" Then		  'Ep = TVPilot		  ''ElseIf d.Value("number").contains( "01x" ) And Val( Str( d.Value("number") ).NthField("x",2) ) < 6 Then		  ''Ep = NewSerie '"New Series"		  'ElseIf d.Value("number").contains( "x01" ) Then		  'Ep = NewSeason '"New Season"		  'Else		  'If d.Value("number").lowercase.contains("special") Then		  'Ep = d.Value("number")		  'Else		  'Ep = "S" + d.Value("number").ReplaceAll("x","E")		  'End If		  '		  'End If		  '		  '// Pretty Date representation		  'Dim PrettyDate as String		  'Dim ShowDate as New Date		  'ShowDate.Year  = Val( d.Value("date").NthField( "-", 1 ) )		  'ShowDate.Month = Val( d.Value("date").NthField( "-", 2 ) )		  'ShowDate.Day   = Val( d.Value("date").NthField( "-", 3 ) )		  '		  'Dim Today as New Date		  '		  'Dim ShowDays as Integer = ( ShowDate.TotalSeconds - Today.TotalSeconds ) / 60 / 60 / 24		  'Select Case ShowDays		  'Case -1		  'PrettyDate = Loc.t_Yesterday '"Yesterday"		  'case 0		  'PrettyDate = Loc.t_Today '"Today"		  'case 1		  'PrettyDate = Loc.t_Tomorrow '"Tomorrow"		  'Else		  'PrettyDate = InDays.ReplaceAll( "%S", Str( ShowDays ) )		  '		  'End Select		  '		  'LstBox.AddRow d.Value("name"), d.Value( "network" ), Ep, PrettyDate, d.Value( "link" )		  'LstBox.RowTag( LstBox.LastIndex ) = d		  'LstBox.CellTag( LstBox.LastIndex, 3 ) = d.Value("date")		  'Next		  		  'Filter( Mode )		  'wndPilots.Title = Str( lstPilots.ListCount ) + " " + Loc.TVShows '" Pilots"		  'If lstPilots.ListCount > 0 Then lstPilots.ListIndex = 0		  		  		  prgBar.Visible = False		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Filter(Mode as String = "")		  		  lstPilots.DeleteAllRows		  If TVGuide = Nil Or TVGuide.Count = 0 Then		    lstPilots.AddRow Loc.kPleaseTryAgainLater		    Return		  End If		  		  		  Dim LstBox as Listbox = lstPilots		  		  // Pretty episode		  For each key as Variant in TVGuide.Keys		    Dim Dict as Dictionary = TVGuide.Value( key )		    Dim Episode as String = Dict.Value("number")		    		    If Mode <> Loc.kAll Then		      If Mode = TVPilots And NOT Episode.Contains("01x01") Then Continue // Pilots only		      If Mode = NewSeries Then // New Seasons (& Pilots)		        If NOT Episode.Contains("01x") Then Continue		        If Val( Episode.NthField("x", 2) ) > 12 Then Continue		      End If		      If Mode = NewSeasons And NOT Episode.Contains("x01") Then Continue // New Seasons Starts (& Pilots)		    End If		    		    		    If Dict.Value("number") = "01x01" Then		      Episode = TVPilot		    ElseIf Dict.Value("number").Contains( "x01" ) Then		      Episode = NewSeason		    Else		      If Dict.Value("number").lowercase.Contains("special") Then		        Episode = Dict.Value("number")		      Else		        Episode = "S" + Dict.Value("number").ReplaceAll("x", "E")		      End If		    End If		    		    // Pretty Date		    Dim PrettyDate as String		    Dim ShowDate as New Date		    Dim Today as New Date		    ShowDate.Year  = Val( Dict.Value("date").NthField( "-", 1 ) )		    ShowDate.Month = Val( Dict.Value("date").NthField( "-", 2 ) )		    ShowDate.Day   = Val( Dict.Value("date").NthField( "-", 3 ) )		    		    Dim ShowDays as Integer = ( ShowDate.TotalSeconds - Today.TotalSeconds ) / 60 / 60 / 24		    Select Case ShowDays		    Case -2		      PrettyDate =  "2 " + Loc.time_DaysAgo		    Case -1		      PrettyDate = Loc.t_Yesterday '"Yesterday"		    case 0		      PrettyDate = Loc.t_Today '"Today"		    case 1		      PrettyDate = Loc.t_Tomorrow '"Tomorrow"		    Else		      PrettyDate = InDays.ReplaceAll( "%S", Str( ShowDays ) )		      		    End Select		    		    Dim PreFix as String		    #If DebugBuild Then		      PreFix = key + " "		    #endif		    		    LstBox.AddRow key + Dict.Value("name"), Dict.Value( "network" ), Episode, PrettyDate, Dict.Value( "link" )		    LstBox.RowTag( LstBox.LastIndex ) = Dict		    LstBox.CellTag( LstBox.LastIndex, 0 ) = Key		    LstBox.CellTag( LstBox.LastIndex, 3 ) = Dict.Value("date")		  Next		  		  If Mode = TVPilots Then		    self.Title = Str( LstBox.ListCount ) + " " + TVPilots		  Else		    self.Title = Str( LstBox.ListCount ) + " " + Loc.TVShows		  End If		End Sub	#tag EndMethod	#tag Property, Flags = &h1		Protected CountriesOpening As Boolean = True	#tag EndProperty	#tag Property, Flags = &h0		TVGuide As Dictionary	#tag EndProperty	#tag Constant, Name = HTML, Type = String, Dynamic = False, Default = \"<!doctype html>\r<html>\r  <head>\r    <meta charset\x3D\'utf-8\'>\r    <title>%name%</title>\r    <style>\r      * {\r        -webkit-box-sizing: border-box;\r        -moz-box-sizing: border-box;\r        box-sizing: border-box; }\r\r      html\x2C body {\r        border-right : 0;\r        color        : hsla( 0\x2C 0%\x2C 5%\x2C 1 );\r        font-family  : \'lucida grande\'\x2C sans-serif;\r        font-size    : 13px;\r        margin       : 0; padding: 0;\r        min-height   : 100%;\r        text-shadow  : 0 1px 0 white;\r      }\r      body {\r        /*background   : hsl( 0\x2C 0%\x2C 92.5% );*/\r      }\r      a { color: #369; text-decoration: none; }\r      a:hover { border-bottom: 1px solid; }\r\r      img.thumb   { max-width: 100%; min-width: 100%; }\r      img.network {\r        max-width: 150px;\r        float: right;\r\r        padding: 5px;\r        background-image : -webkit-linear-gradient( hsl( 0\x2C 0%\x2C 100% )\x2C hsl( 0\x2C 0%\x2C 93% ) );\r        background-image : linear-gradient( hsl( 0\x2C 0%\x2C 100% )\x2C hsl( 0\x2C 0%\x2C 93% ) );\r        border           : 1px solid hsl( 0\x2C 0%\x2C 80% );\r        border-radius    : 3px;\r        box-shadow       : 0 2px 3px hsla( 0\x2C 0%\x2C 0%\x2C .2 );\r        margin-bottom    : 1em;\r        margin-left      : 1em;\r      }\r      img[src\x3D\'\'] { display: none; }\r\r      h1\x2C h2\x2C h3 { margin: 0; padding: 0; }\r      h1 { font-size: 1.6em; }\r      h3 { font-size: 1.2em; }\r      p:last-child { margin-bottom: 0; }\r      .episodeinfo {\r        background-image : -webkit-linear-gradient( hsl( 0\x2C 0%\x2C 100% )\x2C hsl( 0\x2C 0%\x2C 93% ) );\r        background-image : linear-gradient( hsl( 0\x2C 0%\x2C 100% )\x2C hsl( 0\x2C 0%\x2C 93% ) );\r        border           : 1px solid hsl( 0\x2C 0%\x2C 80% );\r        border-radius    : 3px;\r        box-shadow       : 0 2px 3px hsla( 0\x2C 0%\x2C 0%\x2C .2 );\r        clear            : both;\r        padding          : 10px;\r        margin           : 1em 0;\r        overflow         : hidden;\r      }\r      .episodeinfo img { float: right; max-width: 200px; max-height: 120px; }\r      .info\x2C .premiere { color: hsl( 0\x2C 0%\x2C 50% ); margin: 0; font-weight: normal; }\r      .moreinfo { font-size: .85em; }\r      .staff b { min-width: 75px; display: inline-block; }\r      section { padding: 10px; }\r      footer {\r        text-align: right;\r        padding: 3px 8px 8px 3px;\r        font-size: .85em;\r      }\r    </style>\r  </head>\r  <body>\r\r    <img src\x3D\'%url%\' class\x3D\'thumb\'>\r\r    <section>\r      <img src\x3D\'%networklogo%\' class\x3D\'network\'>\r      <h1>%name%</h1>\r      <p class\x3D\'info\'>\r        <span class\x3D\'date\'>%date%</span> |\r        <span class\x3D\'country\'>%country%</span> |\r        <span class\x3D\'network\'>%network%</span> |\r        <span class\x3D\'classification\'>%classification%</span>\r      </p>\r      <span class\x3D\'genres\'>%genres%</span>\r\r      <p>%desciption%</p>\r      <p class\x3D\'moreinfo\'>TV Show information on <a href\x3D\'%link%\'>TVRage</a></p>\r\r      <div class\x3D\'episodeinfo\'>\r        <img src\x3D\'%episodethumb%\'>\r        <h3><span class\x3D\'number\'>%number%</span> %episodetitle%</h3>\r        <p class\x3D\'premiere\'>%premiere%</p>\r        <p>%episodesummary%</p>\r\r        <p class\x3D\'staff\'>\r          <b>Director:</b>%episodedirector%<br/>\r          <b>Writer:</b>%episodewriter%</p>\r\r        <p class\x3D\'moreinfo\'>Episode Information on <a href\x3D\'%episodelink%\'>TVRage</a></p>\r      </div>\r    </section>\r\r\r    <footer>\r      <p>Powered by <a href\x3D\'http://tvrage.com/\'>TVRage.com</a></p>\r    </footer>\r  </body>\r</html>", Scope = Public	#tag EndConstant	#tag Constant, Name = InDays, Type = String, Dynamic = True, Default = \"In %S Days", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"In %S Days"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"In %S Dagen"		#Tag Instance, Platform = Any, Language = de, Definition  = \"In %s Tage"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Dans %s jours"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"I %s dagar"	#tag EndConstant	#tag Constant, Name = NewSeason, Type = String, Dynamic = True, Default = \"New Season", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"New Season"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Nieuw seizoen"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Neue Saison"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Nouvelles saison"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Nya s\xC3\xA4song"	#tag EndConstant	#tag Constant, Name = NewSeasons, Type = String, Dynamic = True, Default = \"New Seasons", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"New Seasons"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Nieuwe seizoenen"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Neue Saison"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Nouvelles saisons"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Nya s\xC3\xA4songer"	#tag EndConstant	#tag Constant, Name = NewSerie, Type = String, Dynamic = True, Default = \"New Serie", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"New Serie"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Nieuwe Serie"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Neue Serie"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Nouvelle s\xC3\xA9rie"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Ny serie"	#tag EndConstant	#tag Constant, Name = NewSeries, Type = String, Dynamic = True, Default = \"New Series", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"New Series"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Nieuwe Series"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Neue Series"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Nouvelle s\xC3\xA9rien"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Ny serien"	#tag EndConstant	#tag Constant, Name = TVPilot, Type = String, Dynamic = True, Default = \"Pilot", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"Pilot"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Pilot"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Pilote"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Pilot"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Pilot"	#tag EndConstant	#tag Constant, Name = TVPilots, Type = String, Dynamic = True, Default = \"Pilots", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"Pilots"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Pilots"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Pilotes"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Pilots"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Pilots"	#tag EndConstant#tag EndWindowCode#tag Events lstPilots	#tag Event		Sub Open()		  Me.InitialValue = Me.InitialValue.ReplaceAll(":","")		End Sub	#tag EndEvent	#tag Event		Function CompareRows(row1 as Integer, row2 as Integer, column as Integer, ByRef result as Integer) As Boolean		  Select Case column		  case 3		    If Me.CellTag( row1, column ) = Me.CellTag( row2, column ) Then		      result = 0		      Return True		    Else		      Dim Date1 as New Date' = Me.CellTag( row1, column )		      Dim Date2 as New Date' = Me.CellTag( row1, column )		      		      Date1.Year  = Val( Me.CellTag( row1, column ).NthField( "-", 1 ) )		      Date1.Month = Val( Me.CellTag( row1, column ).NthField( "-", 2 ) )		      Date1.Day   = Val( Me.CellTag( row1, column ).NthField( "-", 3 ) )		      		      Date2.Year  = Val( Me.CellTag( row2, column ).NthField( "-", 1 ) )		      Date2.Month = Val( Me.CellTag( row2, column ).NthField( "-", 2 ) )		      Date2.Day   = Val( Me.CellTag( row2, column ).NthField( "-", 3 ) )		      		      result = Sign( Date1.TotalSeconds - Date2.TotalSeconds )		      		      Return True		    End If		    		  End Select		  		  Return False		End Function	#tag EndEvent	#tag Event		Sub Change()		  'If Me.ListIndex = -1 Then Return		  		  prgBar.Maximum = 11		  prgBar.Value = 0		  prgBar.Visible = True		  		  prgBar.Value = prgBar.Value + 1		  Dim f, NewF as FolderItem		  If popDestination.ListIndex > -1 And popDestination.RowTag( popDestination.ListIndex ) <> Nil Then f = popDestination.RowTag( popDestination.ListIndex )		  		  If lstPilots.ListIndex > -1 And f <> Nil And f.Exists Then		    NewF = f.Child( CleanName( lstPilots.Cell( lstPilots.ListIndex, 0 ) ) )		    btnAdd.Enabled = ( NewF <> Nil And NOT NewF.Exists )		  Else		    btnAdd.Enabled = False		  End If		  		  If lstPilots.ListIndex = -1 Then		    prgBar.Visible = False		    Return		  End If		  		  Dim Key as Variant = lstPilots.CellTag( lstPilots.ListIndex, 0 )		  Dim Dict as Dictionary = lstPilots.RowTag( lstPilots.ListIndex ) 'TVGuide.Lookup( Key, Nil )		  		  		  App.ErrorMessage = "Is Dictionary Nil?"		  If Dict = Nil Then		    prgBar.Visible = False		    Return		  End If		  		  		  prgBar.Value = prgBar.Value + 1		  		  Dim Premiere as String = Dict.Lookup( "date", "" )		  Dim d as New Date		  d.Year = Val( Premiere.NthField( "-", 1 ) )		  d.Month = Val( Premiere.NthField( "-", 2 ) )		  d.Day = Val( Premiere.NthField( "-", 3 ) )		  Dim t as New Date		  Dim DaysLeft as Integer = ( d.Year + d.Month + d.Day ) - ( t.Year + t.Month + t.Day )		  		  Select Case DaysLeft		    		  case Is < -1		    Premiere = "Aired " + Str( DaysLeft ).ReplaceAll("-","") + " " + Loc.DateDays + " ago"		  case -1		    Premiere = "Aired " + Loc.t_Yesterday		  case 0		    Premiere = "Airing " + Loc.t_Today		  Case 1		    Premiere = "Airing " + Loc.t_Tomorrow		  Case Is > 1		    Premiere = "Airing in " + Str( DaysLeft ) + " " + Loc.DateDays		    		  end select		  		  prgBar.Value = prgBar.Value + 1		  		  		  Dim HTMLString as String = HTML		  HTMLString = HTMLString.ReplaceAll("%name%", Dict.Lookup( "name", "" ) )		  HTMLString = HTMLString.ReplaceAll("%episodetitle%", Dict.Lookup( "episode", "" ) )		  HTMLString = HTMLString.ReplaceAll("%date%", Int2Month( d.Month, True ) + " " + Format( d.Day, "00" ) + ", " + Str( d.Year ) )		  HTMLString = HTMLString.ReplaceAll("%premiere%", Premiere )		  HTMLString = HTMLString.ReplaceAll("%number%", Dict.Lookup( "number", "" ) )		  'HTMLString = HTMLString.ReplaceAll("%link%", "http://www.tvrage.com/shows/id-" + Dict.Lookup( "id", "" ) )		  HTMLString = HTMLString.ReplaceAll("%link%", Dict.Lookup( "link", "" ) )		  		  prgBar.Value = prgBar.Value + 1		  Dim StudioLogo as FolderItem = Preferences.fAppSupport.Child("Studios").Child( Dict.Lookup("network","") + ".png" )		  If StudioLogo <> Nil And StudioLogo.Exists Then		    HTMLString = HTMLString.ReplaceAll("%networklogo%", StudioLogo.URLPath )		  Else		    HTMLString = HTMLString.ReplaceAll("%networklogo%", "" )		  End If		  		  prgBar.Value = prgBar.Value + 1		  HTMLShowInfo.LoadPage( RegExThis( RegExThis( HTMLString, ">\%(.*?)\%<" ), "\'\%(.*?)\%\'", "''" ), GetFolderItem("") )		  		  		  prgBar.Value = prgBar.Value + 1		  Dim sckt as New HTTPSocket		  sckt.Yield = True		  		  If Dict.Lookup("description", "") = "" OR Dict.Lookup("thumb","") = "" Then		    Dim Content as String		    		    If Dict.Lookup("id","") <> "" Then		      'Content = DefineEncoding( sckt.Get( "http://www.tvrage.com/shows/id-" + Dict.Lookup("id",""), 60 ), Encodings.UTF8 )		      Content = DefineEncoding( sckt.Get( Dict.Lookup( "link", "" ), 60 ), Encodings.UTF8 )		      sckt.Close		    End If		    		    'If Content = "" And Dict.Lookup("name","") <> "" Then		    'Dim Name as String = Dict.Lookup("name","")		    'Name = Name.ReplaceAll(" ", "_")		    'Name = Name.Replaceall("'","")		    'Name = Name.ReplaceAll("&","and")		    'Name = Name.ReplaceAll("(","")		    'Name = Name.ReplaceAll(")","")		    'Name = Name.ReplaceAll(":","")		    'Name = Name.ReplaceAll("-","")		    '		    'Content = DefineEncoding( sckt.Get( "http://www.tvrage.com/" + Name, 60 ), Encodings.UTF8 )		    'sckt.Close		    '		    '		    'If Content = "" OR Content.Contains("/_layout_v4/images/tvr_oops_alpha.png") Then		    'Name = RegExThis( Name, "[0-9][0-9][0-9][0-9]" )		    'If Name.Right(1) = "_" Then Name = Name.Left( Name.Len - 1 )		    'Content = DefineEncoding( sckt.Get( "http://www.tvrage.com/" + Name, 60 ), Encodings.UTF8 )		    'sckt.Close		    'End If		    '		    'End If		    		    		    Dict.Value("classification") = Trim( match( "<b>Classification<\/b>:(.*?)<br>", Content, 1 ) )		    Dict.Value("genres") = Trim( match( "<b>Genre<\/b>:(.*?)<br>", Content, 1 ) )		    		    Dict.Value("description") = Trim( RegExThis( match( "<div class=\""show_synopsis\"">(.*?)(</div|<div)", Content, 1 ), "<(.*?)>" ) )		    Dict.Value("thumb") = Trim( match( "alt='" + Dict.Lookup("name","") + "' src='(.*?)'", Content, 1 ) )		    If Dict.Value("thumb") = "" Then Dict.Value("thumb") = Trim( match( "<div class='padding_bottom_10'><img.*?src='(.*?)'><\/div>", Content, 1 ) )		    		    Dict.Value("status") = Trim( match( "<b>Status</b>:(.*?)<br>", Content, 1 ) )		    		    Dim Network as String = Trim( match( "<b>Network</b>:(.*?)<br>", Content, 1 ) )		    Dict.Value("network") = Trim( match( "<a.*>(.*?)</a", Network, 1 ) )		    Dict.Value("country") = Trim( RegExThis( match( "\((.*?)\)", Network, 1 ), "<(.*?)>" ) )		    		    		    If lstPilots.Cell( lstPilots.ListIndex, 0 ) = Dict.Lookup( "name", "" ) Then lstPilots.RowTag( lstPilots.ListIndex ) = Dict		    TVGuide.Value( Key ) = Dict		    		  End If		  		  prgBar.Value = prgBar.Value + 1		  HTMLString = HTMLString.ReplaceAll("%classification%", Dict.Lookup( "classification", "" ) )		  HTMLString = HTMLString.ReplaceAll("%genres%", Dict.Lookup( "genres", "" ) )		  		  prgBar.Value = prgBar.Value + 1		  HTMLString = HTMLString.ReplaceAll("%desciption%", Dict.Lookup( "description", "" ) )		  HTMLString = HTMLString.ReplaceAll("%url%", Dict.Lookup("thumb", "") )		  HTMLString = HTMLString.ReplaceAll("%status%", Dict.Lookup("status", "") )		  HTMLString = HTMLString.ReplaceAll("%network%", Dict.Lookup( "network", "" ) )		  HTMLString = HTMLString.ReplaceAll("%country%", Dict.Lookup( "country", "" ) )		  		  prgBar.Value = prgBar.Value + 1		  HTMLShowInfo.LoadPage( RegExThis( RegExThis( HTMLString, ">\%(.*?)\%<" ), "\'\%(.*?)\%\'", "''" ), GetFolderItem( "" ) )		  		  		  prgBar.Value = prgBar.Value + 1		  If Dict.Lookup("episodelink", "") <> "" And Dict.Lookup("episodesummary","") = "" Then		    Dim Content as String = sckt.Get( Dict.Lookup("episodelink", ""), 60 )		    		    Dict.Value("episodethumb") = Trim( match( "http://images.tvrage.com/screencaps/(.*?)'",  Content, 0 ).ReplaceAll("""", "") )		    		    Dim s as String = Trim( RegExThis( match( "Begin Logged out episode info-->(.*?)<br>", Content, 1 ), "<(.*?)>" ) )		    If NOT s.Contains("Click here to add a summary") Then Dict.Value( "episodesummary") = s Else Dict.Value("episodesummary") = ""		    		    Dict.Value("episodedirector") = Trim( RegExThis( match( "<b>Director: <\/b>(.*?)<br>", Content, 1 ), "<(.*?)>" ) )		    Dict.Value("episodewriter") = Trim( RegExThis( match( "<b>Writer: <\/b>(.*?)<br>", Content, 1 ), "<(.*?)>" ) )		    		    If lstPilots.Cell( lstPilots.ListIndex, 0 ) = Dict.Lookup( "name", "" ) Then lstPilots.RowTag( lstPilots.ListIndex ) = Dict		    TVGuide.Value( Key ) = Dict		    		  End If		  		  HTMLString = HTMLString.ReplaceAll( "%episodethumb%", Dict.Lookup("episodethumb", "") )		  HTMLString = HTMLString.ReplaceAll( "%episodesummary%", Dict.Lookup("episodesummary","") )		  HTMLString = HTMLString.ReplaceAll( "%episodelink%", Dict.Lookup("episodelink", "") )		  		  HTMLString = HTMLString.ReplaceAll( "%episodedirector%", Dict.Lookup("episodedirector", "") )		  HTMLString = HTMLString.ReplaceAll( "%episodewriter%", Dict.Lookup("episodewriter", "") )		  		  		  prgBar.Value = prgBar.Value + 1		  HTMLShowInfo.LoadPage( RegExThis( RegExThis( HTMLString, ">\%(.*?)\%<" ), "\'\%(.*?)\%\'", "''" ), GetFolderItem( "" ) )		  		  prgBar.Visible = False		End Sub	#tag EndEvent#tag EndEvents#tag Events HTMLShowInfo	#tag Event		Function CancelLoad(URL as String) As Boolean		  If URL.Left(5) <> "file:" Then		    ShowURL URL		    Return True		  End If		End Function	#tag EndEvent#tag EndEvents#tag Events popDestination	#tag Event		Sub Open()		  Me.BezelStyle = PopupMenuExtension.NSBezelStyle.NSTexturedRoundedBezelStyle		  		  'If ActiveSection = 1 Then		  Me.DeleteAllRows		  		  // TV Show Paths		  Dim Dict as Dictionary = Prefs.dictionaryForKey("TVShowPaths")		  Dim Paths() as FolderItem		  		  		  If Dict <> Nil Then		    For Each Key as Variant in Dict.Keys		      If Key.InStr( 0, ":" ) > 0 Then		        Paths.Append GetFolderItem( Key )		      Else		        Paths.Append GetFolderItem( Key, FolderItem.PathTypeShell )		      End If		    Next		  End If		  		  // Anime Paths		  Dict = prefs.dictionaryForKey("AnimePaths")		  		  If Dict <> Nil Then		    		    For Each Key as Variant in Dict.Keys		      If Key.InStr( 0, ":" ) > 0 Then		        Paths.Append GetFolderItem( Key )		      Else		        Paths.Append GetFolderItem( Key, FolderItem.PathTypeShell )		      End If		    Next		    		  End If		  		  // Add All Paths		  For each Folder as FolderItem in Paths		    If Folder = Nil OR NOT Folder.Exists Then Continue		    #If TargetCocoa Then		      Me.AddNewRow( Folder.Name, Folder, Folder.Icon( 16 ) )		    #Else		      Me.AddNewRow( Folder.Name, Folder )		    #endif		  Next		  		  // Select first path		  If Me.ListCount > 0 Then Me.ListIndex = 0		End Sub	#tag EndEvent#tag EndEvents#tag Events btnAdd	#tag Event		Sub Action()		  Dim f, NewF as FolderItem		  If popDestination.ListIndex > -1 And popDestination.RowTag( popDestination.ListIndex ) <> Nil Then f = popDestination.RowTag( popDestination.ListIndex )		  		  If f <> Nil And f.Exists Then		    NewF = f.Child( CleanName( lstPilots.Cell( lstPilots.ListIndex, 0 ) ) )		    If NewF <> Nil And NOT NewF.Exists And f.IsWriteable Then NewF.CreateAsFolder		    Me.Enabled = ( NewF <> Nil And NOT NewF.Exists )		  End If		End Sub	#tag EndEvent	#tag Event		Sub Open()		  Me.BezelStyle = PushButtonExtension.NSBezelStyle.NSTexturedRoundedBezelStyle		End Sub	#tag EndEvent#tag EndEvents#tag Events popCountries	#tag Event		Sub Change()		  If CountriesOpening Then		    CountriesOpening = False		  Else		    lstPilots.SortedColumn = -1		    FetchPilots( popCountries.RowTag( popCountries.ListIndex ), popContext.Text )		  End If		End Sub	#tag EndEvent	#tag Event		Sub Open()		  Me.BezelStyle = PopupMenuExtension.NSBezelStyle.NSTexturedRoundedBezelStyle		  		  Me.AddNewRow "America", "US", us		  Me.AddNewRow "Australia", "AU", au		  Me.AddNewRow "België", "BE", be		  Me.AddNewRow "Canada", "CA", ca		  Me.AddNewRow "Deutschland", "DE", de		  Me.AddNewRow "España", "ES", es		  Me.AddNewRow "France", "FR", fr		  Me.AddNewRow "Ireland", "IE", ie		  Me.AddNewRow "Italia", "IT", it		  Me.AddNewRow "Nederland", "NL", nl		  Me.AddNewRow "Suomi", "FI", fi		  Me.AddNewRow "Sverige", "SE", se		  Me.AddNewRow "Türkiye", "TR", tr		  Me.AddNewRow "United Kingdom", "UK", gb		  Me.AddNewRow "Россия", "RU", ru		  Me.AddNewRow "中国", "CN", cn		  Me.AddNewRow "日本", "JP", ja		  		  Me.ListIndex = 0		End Sub	#tag EndEvent#tag EndEvents#tag Events popContext	#tag Event		Sub Change()		  lstPilots.SortedColumn = -1		  'FetchPilots( popCountries.RowTag( popCountries.ListIndex ), popContext.Text )		  Filter( Me.Text )		End Sub	#tag EndEvent	#tag Event		Sub Open()		  Me.BezelStyle = PopupMenuExtension.NSBezelStyle.NSTexturedRoundedBezelStyle		End Sub	#tag EndEvent#tag EndEvents