#tag WindowBegin Window wndTVGuide   BackColor       =   &hFFFFFF   Backdrop        =   ""   CloseButton     =   True   Composite       =   True   Frame           =   0   FullScreen      =   False   HasBackColor    =   False   Height          =   654   ImplicitInstance=   True   LiveResize      =   True   MacProcID       =   0   MaxHeight       =   32000   MaximizeButton  =   False   MaxWidth        =   32000   MenuBar         =   ""   MenuBarVisible  =   True   MinHeight       =   600   MinimizeButton  =   True   MinWidth        =   940   Placement       =   3   Resizeable      =   True   Title           =   "#Loc.TVShows"   Visible         =   True   Width           =   1024   Begin HTMLViewer HTMLShowInfo      AutoDeactivate  =   True      Enabled         =   True      Height          =   606      HelpTag         =   ""      Index           =   -2147483648      Left            =   467      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      Renderer        =   0      Scope           =   0      TabIndex        =   2      TabPanelIndex   =   0      Top             =   0      Visible         =   True      Width           =   557   End   Begin PopupMenu popDestination      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   ""      Left            =   20      ListIndex       =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   False      Scope           =   0      TabIndex        =   3      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   617      Underline       =   ""      Visible         =   True      Width           =   274   End   Begin PushButton btnAdd      AutoDeactivate  =   True      Bold            =   ""      ButtonStyle     =   0      Cancel          =   ""      Caption         =   "#Loc.MenuAddDir"      Default         =   ""      Enabled         =   False      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   306      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   False      Scope           =   0      TabIndex        =   4      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   617      Underline       =   ""      Visible         =   True      Width           =   130   End   Begin PopupMenu popCountries      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   ""      Italic          =   ""      Left            =   712      ListIndex       =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   False      LockRight       =   True      LockTop         =   False      Scope           =   0      TabIndex        =   5      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   617      Underline       =   ""      Visible         =   True      Width           =   140   End   Begin PopupMenu popContext      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   "#Loc.kAll\r#MyShows\r-\r#TVPilots\r#NewSeries\r#NewSeasons\r-\r#Loc.t_Yesterday\r#Loc.t_Today\r#Loc.t_Tomorrow\r#Loc.t_Week\r#Loc.t_Month"      Italic          =   ""      Left            =   864      ListIndex       =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   False      LockRight       =   True      LockTop         =   False      Scope           =   0      TabIndex        =   6      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   617      Underline       =   ""      Visible         =   True      Width           =   140   End   Begin ProgressBar prgBar      AutoDeactivate  =   True      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   467      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   False      Maximum         =   100      Scope           =   0      TabPanelIndex   =   0      Top             =   617      Value           =   0      Visible         =   False      Width           =   233   End   Begin ListboxPRO lstTVGuide      AlternatingRows =   True      AutoDeactivate  =   True      AutoHideScrollbars=   True      Bold            =   ""      Border          =   False      ColumnCount     =   7      ColumnsResizable=   True      ColumnWidths    =   "175, 100, 75, 100, 0, 0, 0"      DataField       =   ""      DataSource      =   ""      DefaultRowHeight=   44      Enabled         =   True      EnableDrag      =   ""      EnableDragReorder=   True      GridLinesHorizontal=   0      GridLinesVertical=   0      HasHeading      =   1      HeadingIndex    =   -1      Height          =   574      HelpTag         =   ""      Hierarchical    =   ""      Index           =   -2147483648      InitialParent   =   ""      InitialValue    =   "#Loc.mTitle	#Loc.mNetwork	#Loc.kStatus	#Loc.kAiring	Episode"      Italic          =   ""      Left            =   0      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   True      RequiresSelection=   False      Scope           =   0      ScrollbarHorizontal=   True      ScrollBarVertical=   True      SelectionGradient=   True      SelectionType   =   0      SourceList      =   False      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   13      TextUnit        =   0      Top             =   32      TypeToSearch    =   True      Underline       =   ""      UseFocusRing    =   False      Visible         =   True      Width           =   466      _ScrollWidth    =   -1   End   Begin ccSearch SearchField      AcceptFocus     =   ""      AcceptTabs      =   True      AutoDeactivate  =   True      BackColor       =   16777215      Backdrop        =   ""      Enabled         =   True      EraseBackground =   True      HasBackColor    =   False      Height          =   33      HelpTag         =   ""      InitialParent   =   ""      Left            =   0      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   True      Scope           =   0      TabIndex        =   7      TabPanelIndex   =   0      TabStop         =   True      Top             =   0      UseFocusRing    =   False      Visible         =   True      Width           =   467   EndEnd#tag EndWindow#tag WindowCode	#tag Event		Sub Close()		  Preferences.SaveWindowPos( self, "wndPilots" )		End Sub	#tag EndEvent	#tag Event		Sub Open()		  self.bottomBorderThickness = 48		  Preferences.LoadWindowPos( self, "wndPilots" )		  		  'LocalTitles = FetchTitles		  FetchPilots( popCountries.RowTag( popCountries.ListIndex ), popContext.Text )		  		End Sub	#tag EndEvent	#tag MenuHandler		Function FileCloseWindow() As Boolean Handles FileCloseWindow.Action			Self.Close			Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h0		Sub AddButtonStatus()		  		  // Enable/Disable 'Add' button		  Dim f, NewF as FolderItem		  If popDestination.ListIndex > -1 And popDestination.RowTag( popDestination.ListIndex ) <> Nil Then f = popDestination.RowTag( popDestination.ListIndex )		  		  If lstTVGuide.ListIndex > -1 And f <> Nil And f.Exists Then		    Dim Name as String = lstTVGuide.Cell( lstTVGuide.ListIndex, 0 )		    NewF = f.Child( CleanName( Name ) )		    If NewF = Nil OR NOT NewF.Exists Then NewF = f.Child( Articulator( CleanName( Name ) ) )		    btnAdd.Enabled = ( NewF <> Nil And NOT NewF.Exists )		  Else		    btnAdd.Enabled = False		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub FetchPilots(CountryCode as String = "", Mode as String = "")		  		  If CountryCode = "" Then CountryCode = "US"		  If Mode = "" Then Mode = TVPilot		  		  Dim sckt as New HTTPSocket		  sckt.Yield = True		  		  		  prgBar.Visible = True		  prgBar.Maximum = 0		  prgBar.Value = 0		  		  Dim URL, Country as String		  URL = "http://services.tvrage.com/feeds/fullschedule.php?country=" + CountryCode + "&24_format=1"		  Country = FlagCountry( CountryCode )		  		  dim foreignGMT as Integer = -999		  Select case CountryCode		  case "US", "CA"		    foreignGMT = -4		  case "TR"		    foreignGMT = 0		  case "UK", "IE"		    foreignGMT = 1		  case "BE", "DE", "NL", "SE"		    foreignGMT = 2		  case "RU"		    foreignGMT = 3		  case "CN"		    foreignGMT = 8		  case "JP"		    foreignGMT = 9		  case "AU"		    foreignGMT = 10		  End Select		  		  		  Dim Dict as New Dictionary		  Dim s as String = DefineEncoding( sckt.Get( URL, 60 ), Encodings.UTF8 ).ReplaceAll("&amp;","&").ReplaceAll("&quot;","""")		  sckt.Close		  		  Dim Days() as String = match_all( "<DAY(.*?)<\/DAY", s, 0 )		  Dim i as Integer = 0		  		  If Days = Nil OR days.Ubound = -1 Then		    if lstTVGuide <> Nil then		      lstTVGuide.DeleteAllRows		      lstTVGuide.AddRow Loc.kCouldNotBeFound.ReplaceAll( "%S", Loc.kTVGuide )		      prgBar.Visible = False		    end if		    Return		  End If		  		  		  if prgBar <> Nil then		    prgBar.Maximum = Days.Ubound		    prgBar.Value = i		  else		    Return		  end if		  		  		  if Days <> nil then		    For each day as String in Days		      if day = "" then Continue		      Dim DayDate as String = day.MyMid( "attr=""", """" )		      'Dim Date as String = DayDate.NthField( "-", 1 ) + "-" + Format( Val( DayDate.NthField( "-", 2 ) ), "00" ) + "-" + Format( Val( DayDate.NthField( "-", 3 ) ), "00" )		      		      Dim Times() as String = match_all( "<time(.*?)<\/time>", day, 0 )		      'Dim Shows() as String = match_all( "<show(.*?)<\/show", day, 0 )		      		      i = i + 1		      if prgBar <> Nil then		        prgBar.Value = i		      else		        Return		      end if		      		      		      For each time as String in Times		        Dim Shows() as String = match_all( "<show(.*?)<\/show", time, 0 )		        Dim DayTime as String = time.MyMid( "attr=""", """" )		        		        For each Show as String in Shows		          		          Dim NewShow as New Dictionary		          NewShow.Value( "id" ) = Trim( Show.MyMid( "<sid>", "</sid>" ) )		          NewShow.Value( "name" ) = Trim( Show.MyMid( "name=""", """>" ) )'.ReplaceAll( "&amp;", "&" )		          NewShow.Value( "network" ) = Trim( Show.MyMid( "<network>", "</network>" ) )'.ReplaceAll( "&amp;", "&" )		          NewShow.Value( "episodelink" ) = Trim( Show.MyMid( "<link>", "</link>" ) )'.ReplaceAll( "&amp;", "&" )		          NewShow.Value( "link" ) = NewShow.Value( "episodelink" ).left( NewShow.Value("episodelink").InStr( "/episodes/" ) - 1 )		          NewShow.Value( "episode" ) = Trim( Show.MyMid( "<title>", "</title>" ) )'.ReplaceAll( "&amp;", "&" )		          NewShow.Value( "number") = Trim( Show.MyMid( "<ep>", "</ep>" ) )		          NewShow.Value( "date" ) = DayDate		          NewShow.Value( "time" ) = DayTime		          NewShow.Value( "gmt" ) = foreignGMT		          NewShow.Value( "country" ) = Country		          		          Dict.Value( Dict.Count + 1 ) = NewShow		        Next // @END Shows		        		        		      Next // @END Times		      		      Dim t as String		    Next // @END Days		  Else		    if lstTVGuide <> Nil then		      lstTVGuide.AddRow "There were no days"		    end if		    Return		  end if // @END Days <> Nil		  		  TVGuide = Dict		  Filter( popContext.Text )		  		  prgBar.Visible = False		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function FetchTitles() As String		  Dim Paths() as FolderItem		  For i as Integer = 0 to popDestination.ListCount -1		    If popDestination.RowTag( i ) IsA FolderItem Then Paths.Append popDestination.RowTag( i )		  Next		  		  		  Dim Titles as String		  For each Path as FolderItem in Paths		    If Path = Nil OR NOT Path.Exists Then Continue		    		    For i as Integer = 1 to Path.Count		      Dim NFOFile as FolderItem = FindNFOFile( Path.Item(i) )		      If NFOFile = Nil OR NOT NFOFile.Exists Then Continue		      		      Dim s as String = ReadTextFile( NFOFile )		      Titles = Titles + "|" + s.MyMid("<title>", "</title>") + "|"		      Titles = Titles + "|" + s.MyMid("<originaltitle>", "</original>") + "|"		      'Titles = Titles + Path.Item(i).Name + "|"		    Next		    		  Next		  		  Return Titles		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Filter(Mode as String = "")		  		  if lstTVGuide <> Nil then		    lstTVGuide.DeleteAllRows		    If TVGuide = Nil Or TVGuide.Count = 0 Then		      lstTVGuide.AddRow Loc.kPleaseTryAgainLater		      Return		    End If		    		    		    Dim LstBox as Listbox = lstTVGuide		    Dim MyShowTitles as String = FetchTitles()		    		    Dim Today as New Date		    Today.Hour = 0		    Today.Minute = 0		    Today.Second = 0		    		    // Pretty episode		    dim i as Integer = 0		    For each key as Variant in TVGuide.Keys		      prgBar.Value = i		      prgBar.Maximum = TVGuide.Count -1		      		      Dim Dict as Dictionary = TVGuide.Value( key )		      Dim Episode as String = Dict.Value("number")		      		      // Pretty Date		      Dim PrettyDate as String		      Dim ShowDate as New Date' = Dict.Value("datetime")		      		      'ShowDate.Hour = 0		      'ShowDate.Minute = 0		      'ShowDate.Second = 0		      		      ShowDate.GMTOffset = Dict.Value("gmt")		      		      ShowDate.Hour    = val( Dict.Value("time").NthField( ":", 1 ) )		      ShowDate.Minute  = val( Dict.Value("time").NthField( ":", 2 ) )		      ShowDate.Second = 0		      		      ShowDate.Year    = Val( Dict.Value("date").NthField( "-", 1 ) )		      ShowDate.Month   = Val( Dict.Value("date").NthField( "-", 2 ) )		      ShowDate.Day     = Val( Dict.Value("date").NthField( "-", 3 ) )		      		      if ShowDate.Hour < 6 then' and Dict.Value("gmt") < 0 then		        ShowDate.Day = ShowDate.Day + 1		      end if		      		      ShowDate.GMTOffset = Today.GMTOffset		      		      Dim ShowDays as Integer = Floor( ( ShowDate.TotalSeconds - Today.TotalSeconds ) / 60 / 60 / 24 )		      Select Case ShowDays		      Case Is <= -2		        PrettyDate = Str( Abs(ShowDays) ) + " " + Loc.time_DaysAgo		      Case -1		        PrettyDate = Loc.t_Yesterday		      case 0		        PrettyDate = Loc.t_Today		      case 1		        PrettyDate = Loc.t_Tomorrow		      Else		        PrettyDate = InDays.ReplaceAll( "%S", Str( ShowDays ) )		      End Select		      PrettyDate = PrettyDate + chr(10) + ShowDate.ShortTime		      		      // Filter Mode		      if Mode <> Loc.kAll then		        Select case Mode		          		        case MyShows // Local TV Shows		          If LocalTitles = "" Then LocalTitles = FetchTitles()		          If NOT LocalTitles.Contains( "|" + Dict.Lookup("name", "√√") + "|" ) Then Continue		          		        case TVPilot // Pilots only		          If NOT Episode.Contains("01x01") Then Continue		        case NewSeries // New Seasons (& Pilots)		          If NOT Episode.Contains("01x") Then Continue		          If Val( Episode.NthField("x", 2) ) > 12 Then Continue		        case NewSeason // New Seasons Starts (& Pilots)		          If NOT Episode.Contains("x01") Then Continue		          		          // Days		        case Loc.t_Yesterday		          If ShowDays > -1 Then Continue		        case Loc.t_Today		          If ShowDays <> 0 Then Continue		        case Loc.t_Tomorrow		          If ShowDays <> 1 Then Continue		        case Loc.t_Week		          If ShowDays < 0 OR ShowDays > 7 Then Continue		        case Loc.t_Month		          If ShowDays < 0 OR ShowDays > 30 Then Continue		          		        Else		          // Just continue		        End Select		      end if		      		      if SearchField.edtSearch.Text <> "" then		        if NOT Dict.Value("name").StringValue.Contains( SearchField.edtSearch.Text ) And _		          NOT Dict.Value("network").StringValue.Contains( SearchField.edtSearch.Text ) then		          Continue		        end if		      end if		      		      		      If Mode <> Loc.kAll Then		        If Mode = MyShows And NOT MyShowTitles.Contains( "|" + Dict.Lookup("name", "√√") + "|" ) Then Continue		        		        If Mode = TVPilots And NOT Episode.Contains("01x01") Then Continue // Pilots only		        If Mode = NewSeries Then // New Seasons (& Pilots)		          If NOT Episode.Contains("01x") Then Continue		          If Val( Episode.NthField("x", 2) ) > 12 Then Continue		        End If		        If Mode = NewSeasons And NOT Episode.Contains("x01") Then Continue // New Seasons Starts (& Pilots)		      End If		      		      		      If Dict.Value("number") = "01x01" Then		        Episode = TVPilot		      ElseIf Dict.Value("number").Contains( "x01" ) Then		        Episode = NewSeason + " " + Str( Val( Dict.Value("number").nthfield("x",1) ) )		      Else		        If Dict.Value("number").lowercase.Contains("special") Then		          Episode = Dict.Value("number")		        Else		          Episode = "S" + Dict.Value("number").ReplaceAll("x", "E")		        End If		      End If		      		      		      		      		      LstBox.AddRow Dict.Value("name"), Dict.Value( "network" ), Episode, PrettyDate, Dict.Value("number") + " " + Dict.Value("episode"), Str( LocalTitles.Contains( Dict.Value("name") ) )		      LstBox.RowTag( LstBox.LastIndex ) = Dict		      LstBox.CellTag( LstBox.LastIndex, 0 ) = Key		      LstBox.CellTag( LstBox.LastIndex, 3 ) = ShowDate.SQLDate + "T" + ShowDate.ShortTime 'Dict.Value("date") + "T" + Dict.Value("time")		    Next		    		    		    If Mode = TVPilots Then		      self.Title = Str( LstBox.ListCount ) + " " + TVPilots		    Else		      self.Title = Str( LstBox.ListCount ) + " " + Loc.TVShows		    End If		    		    LstBox.ListIndex = 0		  end if		End Sub	#tag EndMethod	#tag Property, Flags = &h1		Protected CountriesOpening As Boolean = True	#tag EndProperty	#tag Property, Flags = &h21		Private HTMLString As String	#tag EndProperty	#tag Property, Flags = &h0		LocalTitles As String	#tag EndProperty	#tag Property, Flags = &h21		Private Progress As Integer	#tag EndProperty	#tag Property, Flags = &h0		TVGuide As Dictionary	#tag EndProperty	#tag Constant, Name = HTML, Type = String, Dynamic = False, Default = \"<!doctype html>\r<html>\r  <head>\r    <meta charset\x3D\'utf-8\'>\r    <title>%name%</title>\r    <style>\r      * {\r        -webkit-box-sizing: border-box;\r        -moz-box-sizing: border-box;\r        box-sizing: border-box; }\r\r      html\x2C body {\r        border-right : 0;\r        color        : hsla( 0\x2C 0%\x2C 5%\x2C 1 );\r        font-family  : \'lucida grande\'\x2C sans-serif;\r        font-size    : 13px;\r        margin       : 0; padding: 0;\r        min-height   : 100%;\r        text-shadow  : 0 1px 0 white;\r      }\r      body {\r        /*background   : hsl( 0\x2C 0%\x2C 92.5% );*/\r      }\r      a { color: #369; text-decoration: none; }\r      a:hover { border-bottom: 1px solid; }\r\r      img.thumb   { max-width: 100%; min-width: 100%; }\r      /*img.thumb {\r        max-width: 300px;\r        float: right;\r        margin-left: 10px;\r        margin-bottom: 10px;\r        margin-top: 7px;\r      }*/\r      img.network {\r        max-width: 150px;\r        float: right;\r\r        padding: 5px;\r        background-image : -webkit-linear-gradient( hsl( 0\x2C 0%\x2C 100% )\x2C hsl( 0\x2C 0%\x2C 93% ) );\r        background-image : linear-gradient( hsl( 0\x2C 0%\x2C 100% )\x2C hsl( 0\x2C 0%\x2C 93% ) );\r        border           : 1px solid hsl( 0\x2C 0%\x2C 80% );\r        border-radius    : 3px;\r        box-shadow       : 0 2px 3px hsla( 0\x2C 0%\x2C 0%\x2C .2 );\r        margin-bottom    : 1em;\r        margin-left      : 1em;\r      }\r      img[src\x3D\'\'] { display: none; }\r\r      h1\x2C h2\x2C h3 { margin: 0; padding: 0; }\r      h1 { font-size: 1.6em; }\r      h3 { font-size: 1.2em; }\r      p:last-child { margin-bottom: 0; }\r      .episodeinfo {\r        background-image : -webkit-linear-gradient( hsl( 0\x2C 0%\x2C 100% )\x2C hsl( 0\x2C 0%\x2C 93% ) );\r        background-image : linear-gradient( hsl( 0\x2C 0%\x2C 100% )\x2C hsl( 0\x2C 0%\x2C 93% ) );\r        border           : 1px solid hsl( 0\x2C 0%\x2C 80% );\r        border-radius    : 3px;\r        box-shadow       : 0 2px 3px hsla( 0\x2C 0%\x2C 0%\x2C .2 );\r        clear            : both;\r        padding          : 10px;\r        margin           : 1em 0;\r        overflow         : hidden;\r      }\r      .episodeinfo img { float: right; max-width: 200px; max-height: 120px; margin-left: 10px; margin-bottom: 10px; }\r      .info { color: hsl( 0\x2C 0%\x2C 50% ); margin: 0; font-weight: normal; }\r      .moreinfo { font-size: .85em; }\r      .staff b { min-width: 75px; display: inline-block; }\r      section { padding: 10px; }\r      footer {\r        text-align: right;\r        padding: 3px 8px 8px 3px;\r        font-size: .85em;\r      }\r    </style>\r  </head>\r  <body>\r\r    <img src\x3D\'%url%\' class\x3D\'thumb\'>\r\r    <section>\r      <img src\x3D\'%networklogo%\' class\x3D\'network\'>\r      <h1>%name%</h1>\r      <p class\x3D\'info\'>\r        <!-- <span class\x3D\'date\'>%date%</span> | -->\r        <span class\x3D\'country\'>%country%</span> |\r        <span class\x3D\'network\'>%network%</span> |\r        <span class\x3D\'status\'>%status%</span> |\r        <span class\x3D\'classification\'>%classification%</span>\r      </p>\r      <span class\x3D\'genres\'>%genres%</span>\r\r      <p>%desciption%</p>\r      <p class\x3D\'moreinfo\'>TV Show information on <a href\x3D\'%link%\'>TVRage</a></p>\r\r      <script>\r        if ( !(\'\' \x3D\x3D\x3D \'%trailerurl%\') ) {\r          document.write(\"<video width\x3D\'100%\'\' height\x3D\'auto\' controls poster\x3D\'%trailerposter%\'><source src\x3D\'%trailerurl%\' type\x3D\'video/avi\'></video>\")\r        };\r      </script>\r\r      <div class\x3D\'episodeinfo\'>\r        <img src\x3D\'%episodethumb%\'>\r        <h3><span class\x3D\'number\'>%number%</span> %episodetitle%</h3>\r\r        <p class\x3D\"info\">\r          <span class\x3D\'premiere\'>%premiere%</span> |\r          <span class\x3D\"airdate\">%date%</span> |\r          <span class\x3D\"airtime\">%time%</span>\r        </p>\r        <p>%episodesummary%</p>\r\r        <p class\x3D\'staff\'>\r          <b>Director:</b>%episodedirector%<br/>\r          <b>Writer:</b>%episodewriter%</p>\r\r        <p class\x3D\'moreinfo\'>Episode Information on <a href\x3D\'%episodelink%\'>TVRage</a></p>\r      </div>\r    </section>\r\r\r    <footer>\r      <p>Powered by <a href\x3D\'http://tvrage.com/\'>TVRage.com</a></p>\r    </footer>\r  </body>\r</html>", Scope = Public	#tag EndConstant	#tag Constant, Name = InDays, Type = String, Dynamic = True, Default = \"In %S Days", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"In %S Days"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"In %S Dagen"		#Tag Instance, Platform = Any, Language = de, Definition  = \"In %s Tage"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Dans %s jours"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"I %s dagar"	#tag EndConstant	#tag Constant, Name = MyShows, Type = String, Dynamic = True, Default = \"My Shows", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"My Shows"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Mijn TV Series"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Meine TV-Shows"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Mes \xC3\xA9missions de TV"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Mina TV-program"	#tag EndConstant	#tag Constant, Name = NewSeason, Type = String, Dynamic = True, Default = \"New Season", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"New Season"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Nieuw seizoen"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Neue Saison"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Nouvelles saison"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Nya s\xC3\xA4song"	#tag EndConstant	#tag Constant, Name = NewSeasons, Type = String, Dynamic = True, Default = \"New Seasons", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"New Seasons"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Nieuwe seizoenen"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Neue Saison"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Nouvelles saisons"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Nya s\xC3\xA4songer"	#tag EndConstant	#tag Constant, Name = NewSerie, Type = String, Dynamic = True, Default = \"New Serie", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"New Serie"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Nieuwe Serie"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Neue Serie"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Nouvelle s\xC3\xA9rie"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Ny serie"	#tag EndConstant	#tag Constant, Name = NewSeries, Type = String, Dynamic = True, Default = \"New Series", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"New Series"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Nieuwe Series"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Neue Series"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Nouvelle s\xC3\xA9rien"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Ny serien"	#tag EndConstant	#tag Constant, Name = TVPilot, Type = String, Dynamic = True, Default = \"Pilot", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"Pilot"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Pilot"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Pilote"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Pilot"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Pilot"	#tag EndConstant	#tag Constant, Name = TVPilots, Type = String, Dynamic = True, Default = \"Pilots", Scope = Protected		#Tag Instance, Platform = Any, Language = en, Definition  = \"Pilots"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Pilots"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Pilotes"		#Tag Instance, Platform = Any, Language = de, Definition  = \"Pilots"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Pilots"	#tag EndConstant#tag EndWindowCode#tag Events HTMLShowInfo	#tag Event		Function CancelLoad(URL as String) As Boolean		  If URL.Left(5) <> "file:" Then		    ShowURL URL		    Return True		  End If		End Function	#tag EndEvent#tag EndEvents#tag Events popDestination	#tag Event		Sub Open()		  Me.BezelStyle = PopupMenuExtension.NSBezelStyle.NSTexturedRoundedBezelStyle		  		  'If ActiveSection = 1 Then		  Me.DeleteAllRows		  		  // TV Show Paths		  Dim Dict as Dictionary = Prefs.dictionaryForKey("TVShowPaths")		  Dim Paths() as FolderItem		  		  		  If Dict <> Nil Then		    For Each Key as Variant in Dict.Keys		      If Key.InStr( 0, ":" ) > 0 Then		        Paths.Append GetFolderItem( Key )		      Else		        Paths.Append GetFolderItem( Key, FolderItem.PathTypeShell )		      End If		    Next		  End If		  		  // Anime Paths		  Dict = prefs.dictionaryForKey("AnimePaths")		  		  If Dict <> Nil Then		    		    For Each Key as Variant in Dict.Keys		      If Key.InStr( 0, ":" ) > 0 Then		        Paths.Append GetFolderItem( Key )		      Else		        Paths.Append GetFolderItem( Key, FolderItem.PathTypeShell )		      End If		    Next		    		  End If		  		  // Add All Paths		  For each Folder as FolderItem in Paths		    If Folder = Nil OR NOT Folder.Exists Then Continue		    #If TargetCocoa Then		      Me.AddNewRow( Folder.Name, Folder, Folder.Icon( 16 ) )		    #Else		      Me.AddNewRow( Folder.Name, Folder )		    #endif		  Next		  		  // Select first path		  If Me.ListCount > 0 Then		    Me.ListIndex = 0		  End If		  		End Sub	#tag EndEvent	#tag Event		Sub Change()		  AddButtonStatus		End Sub	#tag EndEvent#tag EndEvents#tag Events btnAdd	#tag Event		Sub Action()		  Dim f, NewF as FolderItem		  If popDestination.ListIndex > -1 And popDestination.RowTag( popDestination.ListIndex ) <> Nil Then f = popDestination.RowTag( popDestination.ListIndex )		  		  If f <> Nil And f.Exists Then		    NewF = f.Child( CleanName( lstTVGuide.Cell( lstTVGuide.ListIndex, 0 ) ) )		    If NewF <> Nil And NOT NewF.Exists And f.IsWriteable Then NewF.CreateAsFolder		    Me.Enabled = ( NewF <> Nil And NOT NewF.Exists )		  End If		End Sub	#tag EndEvent	#tag Event		Sub Open()		  #if TargetCocoa then		    Me.BezelStyle = PushButtonExtension.NSBezelStyle.NSTexturedRoundedBezelStyle		    me.Top = me.Top - 1		  #endif		End Sub	#tag EndEvent#tag EndEvents#tag Events popCountries	#tag Event		Sub Change()		  If CountriesOpening Then		    CountriesOpening = False		  Else		    lstTVGuide.SortedColumn = -1		    FetchPilots( popCountries.RowTag( popCountries.ListIndex ), popContext.Text )		  End If		End Sub	#tag EndEvent	#tag Event		Sub Open()		  Me.BezelStyle = PopupMenuExtension.NSBezelStyle.NSTexturedRoundedBezelStyle		  		  Me.AddNewRow "USA", "US", us		  Me.AddNewRow "Australia", "AU", au		  Me.AddNewRow "België", "BE", be		  Me.AddNewRow "Brasil", "BR", br		  Me.AddNewRow "Canada", "CA", ca		  Me.AddNewRow "Deutschland", "DE", de		  Me.AddNewRow "España", "ES", es		  Me.AddNewRow "France", "FR", fr		  Me.AddNewRow "Ireland", "IE", ie		  Me.AddNewRow "Italia", "IT", it		  Me.AddNewRow "México", "MX", mx		  Me.AddNewRow "Nederland", "NL", nl		  Me.AddNewRow "Suomi", "FI", fi		  Me.AddNewRow "Sverige", "SE", se		  Me.AddNewRow "Türkiye", "TR", tr		  Me.AddNewRow "United Kingdom", "UK", gb		  Me.AddNewRow "Россия", "RU", ru		  Me.AddNewRow "中国", "CN", cn		  Me.AddNewRow "日本", "JP", ja		  		  Me.ListIndex = 0		End Sub	#tag EndEvent#tag EndEvents#tag Events popContext	#tag Event		Sub Change()		  lstTVGuide.SortedColumn = -1		  'FetchPilots( popCountries.RowTag( popCountries.ListIndex ), popContext.Text )		  Filter( Me.Text )		End Sub	#tag EndEvent	#tag Event		Sub Open()		  Me.BezelStyle = PopupMenuExtension.NSBezelStyle.NSTexturedRoundedBezelStyle		End Sub	#tag EndEvent#tag EndEvents#tag Events lstTVGuide	#tag Event		Sub Open()		  Me.InitialValue = Me.InitialValue.ReplaceAll(":","")		End Sub	#tag EndEvent	#tag Event		Function CompareRows(row1 as Integer, row2 as Integer, column as Integer, ByRef result as Integer) As Boolean		  		  Dim s1, s2 as String		  Dim dic1, dic2 as Dictionary		  dic1 = Me.RowTag( row1 )		  dic2 = Me.RowTag( row2 )		  		  Select Case column		    		    // Showname		  case 0		    s1 = Me.Cell( row1, column ) + dic1.Value("date") + dic1.Value("time")		    s2 = Me.Cell( row2, column ) + dic2.Value("date") + dic2.Value("time")		    		    If s1 = s2 Then		      result = 0		    ElseIf s1 > s2 Then		      result = 1		    Else		      result = -1		    End If		    Return True		    		    // Network		  Case 1		    s1 = Me.Cell( row1, column ) + dic1.Value("date") + dic1.Value("time")		    s2 = Me.Cell( row2, column ) + dic2.Value("date") + dic2.Value("time")		    		    If s1 = s2 Then		      result = 0		    ElseIf s1 > s2 Then		      result = 1		    Else		      result = -1		    End If		    Return True		    		    // Date/Time		  case 3		    s1 = dic1.Value("date") + dic1.Value("time")		    s2 = dic2.Value("date") + dic2.Value("time")		    		    If s1 = s2 Then		      result = 0		    ElseIf s1 > s2 Then		      result = 1		    Else		      result = -1		    End If		    Return True		    		  End Select		  		  Return False		End Function	#tag EndEvent	#tag Event		Sub Change()		  		  Dim g as FolderItem = SpecialFolder.Temporary.Child( App.Identifier ).Child( "tvguide.html" )		  If g <> Nil And NOT g.Exists Then WriteTextFile( HTMLString, g )		  		  'HTMLShowInfo.Cancel		  'If lstTVGuide.ListIndex = -1 Then		  HTMLShowInfo.LoadPage("", g )		  'Return		  'End If		  		  prgBar.Maximum = 11		  prgBar.Value = 0		  prgBar.Visible = True		  		  Dim HTMLString as String = HTML		  		  'HTMLShowInfo.LoadPage( RegExThis( RegExThis( HTMLString, ">\%(.*?)\%<" ), "\'\%(.*?)\%\'", "''" ), g ) 'GetFolderItem( "" ) )		  		  prgBar.Value = prgBar.Value + 1		  // return if nothing's there		  If lstTVGuide.ListIndex = -1 Then		    prgBar.Visible = False		    Return		  End If		  		  // Enable/Disable 'Add' button		  Dim f, NewF as FolderItem		  If popDestination.ListIndex > -1 And popDestination.RowTag( popDestination.ListIndex ) <> Nil Then f = popDestination.RowTag( popDestination.ListIndex )		  		  If lstTVGuide.ListIndex > -1 And f <> Nil And f.Exists Then		    Dim Name as String = lstTVGuide.Cell( lstTVGuide.ListIndex, 0 )		    NewF = f.Child( CleanName( Name ) )		    If NewF = Nil OR NOT NewF.Exists Then NewF = f.Child( Articulator( CleanName( Name ) ) )		    btnAdd.Enabled = ( NewF <> Nil And NOT NewF.Exists )		  Else		    btnAdd.Enabled = False		  End If		  		  		  Dim Key as Variant = lstTVGuide.CellTag( lstTVGuide.ListIndex, 0 )		  Dim Dict as Dictionary = lstTVGuide.RowTag( lstTVGuide.ListIndex ) 'TVGuide.Lookup( Key, Nil )		  		  		  App.ErrorMessage = "Is Dictionary Nil?"		  If Dict = Nil Then		    prgBar.Visible = False		    Return		  End If		  		  		  prgBar.Value = prgBar.Value + 1		  		  Dim Premiere as String = Dict.Lookup( "date", "" )		  Dim d as New Date		  Dim t as New Date		  d.Year  = Val( Premiere.NthField( "-", 1 ) )		  d.Month = Val( Premiere.NthField( "-", 2 ) )		  d.Day   = Val( Premiere.NthField( "-", 3 ) )		  		  Dim DaysLeft as Integer =  ( d.TotalSeconds - t.TotalSeconds ) / 60 / 60 / 24 ' ( d.Year + d.Month + d.Day ) - ( t.Year + t.Month + t.Day )		  		  Select Case DaysLeft		    		  case Is < -1		    Premiere = "Aired " + Str( DaysLeft ).ReplaceAll("-","") + " " + Loc.DateDays + " ago"		  case -1		    Premiere = "Aired " + Loc.t_Yesterday		  case 0		    Premiere = "Airing " + Loc.t_Today		  Case 1		    Premiere = "Airing " + Loc.t_Tomorrow		  Case Is > 1		    Premiere = "Airing in " + Str( DaysLeft ) + " " + Loc.DateDays		    		  end select		  		  prgBar.Value = prgBar.Value + 1		  		  HTMLString = HTMLString.ReplaceAll("%name%", Dict.Lookup( "name", "" ) )		  HTMLString = HTMLString.ReplaceAll("%episodetitle%", Dict.Lookup( "episode", "" ) )		  HTMLString = HTMLString.ReplaceAll("%date%", Int2Month( d.Month, True ) + " " + Format( d.Day, "00" ) + ", " + Str( d.Year ) )		  HTMLString = HTMLString.ReplaceAll("%time%", Dict.Lookup( "time", "" ) )		  HTMLString = HTMLString.ReplaceAll("%premiere%", Premiere )		  HTMLString = HTMLString.ReplaceAll("%number%", Dict.Lookup( "number", "" ) )		  HTMLString = HTMLString.ReplaceAll("%link%", Dict.Lookup( "link", "" ) )		  		  prgBar.Value = prgBar.Value + 1		  Dim StudioLogo as FolderItem = Preferences.fAppSupport.Child("Studios").Child( Dict.Lookup("network","").ReplaceAll(":", "-") + ".png" )		  If StudioLogo <> Nil And StudioLogo.Exists Then		    HTMLString = HTMLString.ReplaceAll("%networklogo%", StudioLogo.URLPath )		  Else		    HTMLString = HTMLString.ReplaceAll("%networklogo%", "" )		  End If		  		  prgBar.Value = prgBar.Value + 1		  'HTMLShowInfo.LoadPage( RegExThis( RegExThis( HTMLString, ">\%(.*?)\%<" ), "\'\%(.*?)\%\'", "''" ), g ) 'GetFolderItem("") )		  		  		  prgBar.Value = prgBar.Value + 1		  Dim sckt as New HTTPSocket		  sckt.Yield = True		  		  If Dict.Lookup("description", "") = "" OR Dict.Lookup("thumb","") = "" Then		    Dim Content as String		    		    If Dict.Lookup("id","") <> "" Then		      Content = DefineEncoding( sckt.Get( Dict.Lookup( "link", "" ), 60 ), Encodings.UTF8 )		      sckt.Close		    End If		    		    Dict.Value("classification") = Trim( match( "<b>Classification<\/b>:(.*?)<br>", Content, 1 ) )		    Dict.Value("genres") = Trim( match( "<b>Genre<\/b>:(.*?)<br>", Content, 1 ) )		    Dict.Value("status") = Trim( match( "<b>Status</b>:(.*?)<br>", Content, 1 ) )		    		    Dict.Value("description") = Trim( match( "<div class=\""show_synopsis\"">(.*?)(</div|<div|<hr)", Content, 1 ) ) '.ReplaceAll( "<br>", Chr(10) ), "<(.*?)>" ) ).ReplaceAll( chr(10), "<br/>" )		    Dict.Value("description") = RegExThis( Dict.Value("description"), "(<a(.*?)>|<\/a>)" )		    		    Dict.Value("thumb") = Trim( match( "alt='" + Dict.Lookup("name","") + "' src='(.*?)'", Content, 1 ) )		    If Dict.Value("thumb") = "" Then Dict.Value("thumb") = Trim( match( "<div class='padding_bottom_10'><img.*?src=\'(.*?)\'>(<br>|<\/div>)", Content, 1 ) )		    		    Dict.Value("status") = Trim( match( "<b>Status</b>:(.*?)<br>", Content, 1 ) )		    		    Dim Network as String = Trim( match( "<b>Network</b>:(.*?)<br>", Content, 1 ) )		    Dim NetworkValue as String = Trim( match( "<a.*>(.*?)</a", Network, 1 ) )		    if NetworkValue <> "" then		      Dict.Value("network") = NetworkValue		    else		      NetworkValue = Trim( Network.Left( Network.InStr("(") - 1 ) )		      if NetworkValue <> "" then		        Dict.Value("network") = NetworkValue		      end if		    end if		    Dict.Value("country") = Trim( RegExThis( match( "\((.*?)\)", Network, 1 ), "<(.*?)>" ) )		    		    Dict.Value("trailerposter") = match( "url: '(.*?)'", Content, 1 )		    Dict.Value("trailer") = match( "},{ url: '(.*?)'}", Content, 1 )		    		    If lstTVGuide.Cell( lstTVGuide.ListIndex, 0 ) = Dict.Lookup( "name", "" ) Then lstTVGuide.RowTag( lstTVGuide.ListIndex ) = Dict		    TVGuide.Value( Key ) = Dict		    		  End If		  		  prgBar.Value = prgBar.Value + 1		  HTMLString = HTMLString.ReplaceAll("%classification%", Dict.Lookup( "classification", "" ) )		  HTMLString = HTMLString.ReplaceAll("%genres%", Dict.Lookup( "genres", "" ) )		  HTMLString = HTMLString.ReplaceAll("%status%", Dict.Lookup( "status", "" ) )		  		  prgBar.Value = prgBar.Value + 1		  HTMLString = HTMLString.ReplaceAll("%desciption%", Dict.Lookup( "description", "" ) )		  HTMLString = HTMLString.ReplaceAll("%url%", Dict.Lookup("thumb", "") )		  HTMLString = HTMLString.ReplaceAll("%status%", Dict.Lookup("status", "") )		  HTMLString = HTMLString.ReplaceAll("%network%", Dict.Lookup( "network", "" ) )		  HTMLString = HTMLString.ReplaceAll("%country%", Dict.Lookup( "country", "" ) )		  		  HTMLString = HTMLString.ReplaceAll("%trailerurl%", Dict.Lookup( "trailer", "" ) )		  HTMLString = HTMLString.ReplaceAll("%trailerposter%", Dict.Lookup( "trailerposter", "" ) )		  		  prgBar.Value = prgBar.Value + 1		  'HTMLShowInfo.LoadPage( RegExThis( RegExThis( HTMLString, ">\%(.*?)\%<" ), "\'\%(.*?)\%\'", "''" ), g )' GetFolderItem( "" ) )		  		  		  // Episode Data		  prgBar.Value = prgBar.Value + 1		  If Dict.Lookup("episodelink", "") <> "" And Dict.Lookup("episodesummary","") = "" Then		    Dim Content as String = sckt.Get( Dict.Lookup("episodelink", ""), 60 )		    		    Dict.Value("episodethumb") = Trim( match( "http://images.tvrage.com/screencaps/(.*?)'",  Content, 0 ).ReplaceAll("""", "") )		    		    Dim s as String = Trim( RegExThis( match( "Begin Logged out episode info-->(.*?)<br>", Content, 1 ), "<(.*?)>" ) )		    If NOT s.Contains("Click here to add a summary") Then Dict.Value( "episodesummary") = s Else Dict.Value("episodesummary") = ""		    		    Dict.Value("episodedirector") = Trim( RegExThis( match( "<b>Director: <\/b>(.*?)<br>", Content, 1 ), "<(.*?)>" ) )		    Dict.Value("episodewriter") = Trim( RegExThis( match( "<b>Writer: <\/b>(.*?)<br>", Content, 1 ), "<(.*?)>" ) )		    		    Dict.Value("episodeairdate") = Trim( match( "<b>Airdate: <\/b>(.*?)<br", Content, 1 ) )		    		    If lstTVGuide.Cell( lstTVGuide.ListIndex, 0 ) = Dict.Lookup( "name", "" ) Then lstTVGuide.RowTag( lstTVGuide.ListIndex ) = Dict		    TVGuide.Value( Key ) = Dict		  End If		  		  HTMLString = HTMLString.ReplaceAll( "%episodethumb%", Dict.Lookup("episodethumb", "") )		  HTMLString = HTMLString.ReplaceAll( "%episodesummary%", Dict.Lookup("episodesummary","") )		  HTMLString = HTMLString.ReplaceAll( "%episodelink%", Dict.Lookup("episodelink", "") )		  		  HTMLString = HTMLString.ReplaceAll( "%episodedirector%", Dict.Lookup("episodedirector", "") )		  HTMLString = HTMLString.ReplaceAll( "%episodewriter%", Dict.Lookup("episodewriter", "") )		  		  HTMLString = HTMLString.ReplaceAll( "%episodeairdate%", Dict.Lookup("episodeairdate", "") )		  		  		  prgBar.Value = prgBar.Value + 1		  HTMLShowInfo.LoadPage( RegExThis( RegExThis( HTMLString, ">\%(.*?)\%<" ), "\'\%(.*?)\%\'", "''" ), g ) 'GetFolderItem( "" ) )		  		  prgBar.Visible = False		End Sub	#tag EndEvent	#tag Event		Function CellBackgroundPaint(g As Graphics, row As Integer, column As Integer) As Boolean		  'If row < Me.ListCount And Me.Cell( row, 5 ) = "True" Then		  		  'g.DrawPicture( starring, g.Width - 16 - 4, ( g.Height / 2 ) - ( 16 / 2 ), 16, 16,   0, 0, starring.Width, starring.Height )		  'g.ForeColor = HSL(60, 43, 96)		  'g.FillRect 0, 0, g.Width, g.Height		  'g.DrawGradient( HSL(60, 43, 96), hsl(60, 81, 96), 0, 0, g.Width, g.Height )		  'Return True		  		End Function	#tag EndEvent#tag EndEvents#tag Events SearchField	#tag Event		Sub Open()		  'me.LiveSearch = true		End Sub	#tag EndEvent	#tag Event		Sub DoSearch(SearchText as String)		  lstTVGuide.SortedColumn = -1		  Filter(popContext.Text)		End Sub	#tag EndEvent	#tag Event		Sub ResetSearch()		  Filter(popContext.Text)		End Sub	#tag EndEvent#tag EndEvents