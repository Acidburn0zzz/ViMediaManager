#tag WindowBegin Window dlgProgress   BackColor       =   &hFFFFFF   Backdrop        =   ""   CloseButton     =   False   Composite       =   False   Frame           =   0   FullScreen      =   False   HasBackColor    =   False   Height          =   130   ImplicitInstance=   True   LiveResize      =   False   MacProcID       =   0   MaxHeight       =   32000   MaximizeButton  =   False   MaxWidth        =   32000   MenuBar         =   ""   MenuBarVisible  =   True   MinHeight       =   64   MinimizeButton  =   False   MinWidth        =   64   Placement       =   3   Resizeable      =   False   Title           =   "#Loc.kProgress"   Visible         =   True   Width           =   486   Begin cvsLogo Logo      AcceptFocus     =   ""      AcceptTabs      =   ""      AutoDeactivate  =   True      Backdrop        =   ""      DoubleBuffer    =   False      Enabled         =   True      EraseBackground =   True      Height          =   64      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   20      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   ""      LockTop         =   True      Scope           =   0      TabIndex        =   0      TabPanelIndex   =   0      TabStop         =   True      Top             =   14      UseFocusRing    =   True      Visible         =   True      Width           =   64   End   Begin Label lblAction      AutoDeactivate  =   True      Bold            =   True      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   96      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      Multiline       =   ""      Scope           =   0      Selectable      =   False      TabIndex        =   1      TabPanelIndex   =   0      Text            =   "Action:"      TextAlign       =   0      TextColor       =   &h000000      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   14      Transparent     =   False      Underline       =   ""      Visible         =   True      Width           =   370   End   Begin Label lblDescription      AutoDeactivate  =   True      Bold            =   False      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   96      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      Multiline       =   ""      Scope           =   0      Selectable      =   False      TabIndex        =   2      TabPanelIndex   =   0      Text            =   "Description"      TextAlign       =   0      TextColor       =   &h000000      TextFont        =   "System"      TextSize        =   12      TextUnit        =   0      Top             =   34      Transparent     =   False      Underline       =   ""      Visible         =   True      Width           =   370   End   Begin ProgressBar pgBar      AutoDeactivate  =   True      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Left            =   96      LockBottom      =   ""      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   True      Maximum         =   100      Scope           =   0      TabPanelIndex   =   0      Top             =   58      Value           =   0      Visible         =   True      Width           =   370   End   Begin PushButton btnCancel      AutoDeactivate  =   True      Bold            =   ""      ButtonStyle     =   0      Cancel          =   True      Caption         =   "#Loc.dlgStop"      Default         =   ""      Enabled         =   True      Height          =   20      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   386      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   False      LockRight       =   True      LockTop         =   False      Scope           =   0      TabIndex        =   3      TabPanelIndex   =   0      TabStop         =   True      TextFont        =   "System"      TextSize        =   0      TextUnit        =   0      Top             =   90      Underline       =   ""      Visible         =   True      Width           =   80   End   Begin Thread thrProgress      Height          =   32      Index           =   -2147483648      InitialParent   =   ""      Left            =   434      LockedInPosition=   False      Priority        =   5      Scope           =   0      StackSize       =   0      TabPanelIndex   =   0      Top             =   139      Width           =   32   End   Begin Label lblDebug      AutoDeactivate  =   True      Bold            =   ""      DataField       =   ""      DataSource      =   ""      Enabled         =   True      Height          =   28      HelpTag         =   ""      Index           =   -2147483648      InitialParent   =   ""      Italic          =   ""      Left            =   96      LockBottom      =   True      LockedInPosition=   False      LockLeft        =   True      LockRight       =   True      LockTop         =   False      Multiline       =   True      Scope           =   0      Selectable      =   False      TabIndex        =   4      TabPanelIndex   =   0      Text            =   ""      TextAlign       =   0      TextColor       =   &h000000      TextFont        =   "System"      TextSize        =   10      TextUnit        =   0      Top             =   82      Transparent     =   False      Underline       =   ""      Visible         =   True      Width           =   278   End   Begin TrailerSckt zTrailerSckteer      Address         =   ""      Height          =   32      Index           =   -2147483648      Left            =   390      LockedInPosition=   False      Port            =   0      Scope           =   0      TabPanelIndex   =   0      Top             =   139      Width           =   32      yield           =   0   EndEnd#tag EndWindow#tag WindowCode	#tag Event		Sub Close()		  // Reset Main		  CommonCore.MassSearch = False		  wndMain.ProgressRunning = False		  wndMain.lstMovies.Enabled = True		  wndMain.lstTVShows.Enabled = True		  		  		  If ActiveSection = 0 Then wndMain.cvsMovieDetails.Reload		  If ActiveSection = 1 Then wndMain.cvsTVShowDetails.Reload		  'ReDim CommonCore.UnfoundTitles(-1)		  'ReDim CommonCore.UnfoundPaths(-1)		  		  'If ActiveSection = 0 Then		  'wndMain.cvsMovieDetails.Reload		  'ElseIf ActiveSection = 1 Then		  'wndMain.cvsTVShowDetails.Reload		  'End If		  		  // Clean Up		  'TrailerSckteer.Close		  'If ThreadMode = "GetTrailer" Then		  'Dim f as FolderItem = SpecialFolder.Temporary.Child("trailer.downloading")		  'If f <> Nil and f.Exists Then f.Delete		  'wndMain.lstMovies.UpdateRow		  'End If		  		  // Reset Self		  ThreadMode = ""		  ItemID = ""		  ItemName = ""		  		  // Stop what you're doing!		  thrProgress.Kill		End Sub	#tag EndEvent	#tag Event		Sub Open()		  Self.Title = ""		  		  ReDim CommonCore.UnfoundTitles(-1)		  ReDim CommonCore.UnfoundPaths(-1)		End Sub	#tag EndEvent	#tag MenuHandler		Function FileCloseWindow() As Boolean Handles FileCloseWindow.Action			Stop()			Return True					End Function	#tag EndMenuHandler	#tag Method, Flags = &h0		Sub Add(Action as String = "", Description as String = "", addValue as Integer = 1, MaxValue as Integer = - 1)		  If Action <> "" Then lblAction.Text = Action.ReplaceAll( " & ", " and " )		  If Description <> "" Then lblDescription.Text = Description.ReplaceAll( " & ", " and " )		  If NOT DebugBuild Then lblDescription.Text = Trim( RegExThis( Description, "\[.*\]", "" ) ).ReplaceAll( " & ", " and " )		  		  If MaxValue > -1 Then pgBar.Maximum = MaxValue		  pgBar.Value = pgBar.Value + addValue		  If pgBar.Value >= pgBar.Maximum Then pgBar.Maximum = 0		  Self.Refresh		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Debug(debugtext as String)		  lblDebug.Text = debugtext.ReplaceAll( " & ", " and " )		  Self.Refresh		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Reset()		  pgBar.Value = 0		  Self.Debug( "" )		  Self.Refresh		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub SpecialInit(tmpItemID as String, tmpItemName as String)		  ItemID = tmpItemID		  ItemName = tmpItemName		  		  If ActiveSection = 0 Then		    Start( Loc.kProcessing + ":", "TMDB: " + tmpItemName, 15, "FetchSingleMovie" )		  ElseIf ActiveSection = 1 Then		    Start( Loc.kProcessing + ":", "TVDB: " + tmpItemName, 15, "FetchSingleTVShow" )		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub SpecialSeason(tmpItemID as String, tmpItemName as String, tmpSeason as Integer = - 1, tmpMode as String = "Season")		  ItemID = tmpItemID		  ItemName = tmpItemName		  Season = tmpSeason		  		  If ActiveSection = 1 Then		    		    Select Case tmpMode		      		    Case "SeasonPoster"		      Start( Loc.kProcessing + ":", "Art: " + tmpItemName + "...", 0, "GetSeasonPoster" )		    Case "SeasonFanart"		      Start( Loc.kProcessing + ":", "Art: " + tmpItemName + "...", 0, "GetSeasonFanart" )		    Case "SeasonBanner"		      Start( Loc.kProcessing + ":", "Art: " + tmpItemName + "...", 0, "GetSeasonBanner" )		    Case "SeasonThumb"		      Start( Loc.kProcessing + ":", "Art: " + tmpItemName + "...", 0, "GetSeasonThumb" )		      		    End Select		    		  End If		  		  'Season = -1		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Start(Action as String, Description as String, Max as Integer, RunThread as String)		  thrProgress.Kill		  lblAction.Text = Action		  lblDescription.Text = Description		  If NOT DebugBuild Then lblDescription.Text = Trim( RegExThis( Description, "\[.*\]", "" ) )'.ReplaceAll( " & ", " and " )		  		  pgBar.Maximum = Max		  pgBar.Value = 0		  self.Refresh		  		  ThreadMode = RunThread		  thrProgress.Run		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Stop()		  pgBar.Value = pgBar.Maximum		  Self.Refresh		  		  Close		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Update(Action as String = "", Description as String = "", Value as Integer, Max as Integer = - 1)		  If Action <> "" then lblAction.Text = Action.ReplaceAll( " & ", " and " )		  If Description <> "" then lblDescription.Text = Description.ReplaceAll( " & ", " and " )		  If NOT DebugBuild Then lblDescription.Text = Trim( RegExThis( Description, "\[.*\]", "" ) ).ReplaceAll( " & ", " and " )		  		  If Max > -1 Then pgBar.Maximum = Max		  If Value = -1 Then		    pgBar.Value = pgBar.Value		  Else		    If  Value >= pgBar.Maximum Then pgBar.Maximum = 0 Else pgBar.Value = Value		  End If		  Self.Refresh		End Sub	#tag EndMethod	#tag Property, Flags = &h1		Protected ItemID As String	#tag EndProperty	#tag Property, Flags = &h0		ItemName As String	#tag EndProperty	#tag Property, Flags = &h0		Season As Integer	#tag EndProperty	#tag Property, Flags = &h0		ThreadMode As String	#tag EndProperty	#tag Constant, Name = msgNoDestination, Type = String, Dynamic = True, Default = \"Destination not found.", Scope = Public		#Tag Instance, Platform = Any, Language = en, Definition  = \"Destination not found."		#Tag Instance, Platform = Any, Language = nl, Definition  = \"Bestemming niet gevonden."		#Tag Instance, Platform = Any, Language = sv, Definition  = \"Destinationen hittades inte."		#Tag Instance, Platform = Any, Language = de, Definition  = \"Ziel nicht gefunden."		#Tag Instance, Platform = Any, Language = fr, Definition  = \"Destination non trouv\xC3\xA9e."	#tag EndConstant#tag EndWindowCode#tag Events btnCancel	#tag Event		Sub Action()		  If CommonCore.UnfoundTitles.Ubound > -1 Then CommonCore.ShowUnfoundTitles( "" )		  Stop()		End Sub	#tag EndEvent#tag EndEvents#tag Events thrProgress	#tag Event		Sub Run()		  Dim ID as String		  Dim LstBox as ListBox = ActiveListBox		  Dim Lindex as Integer = LstBox.ListIndex		  		  wndMain.ProgressRunning = True		  		  wndMain.lstMovies.Enabled = False		  wndMain.lstTVShows.Enabled = False		  'wndMain.lstAnime.Enabled = False		  		  Select Case ActiveSection		  Case 0		    ID = MovieAttr.ID_TMDB		    If ID = "" Then ID = MovieAttr.ID_IMDB		  Case 1		    ID = TVAttr.ID_TVDB		    If ID = "" Then ID = TVAttr.ID_IMDb		  Case 2		    'ID = AnimeAttr.ID_AniDB		    'If ID = "" Then ID = AnimeAttr.ID_IMDb		  End Select		  		  		  // ## Movies		  		  Select Case ThreadMode		    		  Case "ReloadMovies"		    wndMain.lstMovies.CreateList( CommonCore.ReloadUpdate )		    		  Case "BatchRenameMovies"		    lblDescription.TextSize = 10		    LstBox.ListIndex = -1		    		    For i as Integer = 0 to LstBox.ListCount -1		      'If LstBox.Cell( i, 2 ) = "" Then Continue // If unscraped, Skip It!		      SingleRenamer( GetFolderItem( LstBox.Cell( i, 1 ) ), i, True )		    Next		    		    lblDescription.TextSize = 0		    LstBox.ListIndex = Lindex		    		    		  Case "SearchMovie"		    MovieCore.MovieSearch( lblDescription.Text )		  Case "ManualSearchMovie"		    MovieCore.MovieSearch( lblDescription.Text, True )		    		    		  Case "FetchSingleMovie"		    MovieCore.MovieByID( ItemID )		  Case "FetchMissingMovies"		    MovieCore.MissingMovies()		    		  Case "UpdateSingleMovie"		    MovieCore.MovieUpdate( ID )		  Case "UpdateAllMovies"		    MovieCore.MovieUpdateAll()		    		    		  Case "UpdateSingleMovieRating"		    MovieCore.MovieUpdateRating()		  Case "UpdateAllMovieRatings"		    CommonCore.MassSearch = True		    For i as Integer = 0 to LstBox.ListCount -1		      Dim f as FolderItem = GetFolderItem( LstBox.Cell( i, 1 ) )		      If ( f = NIL OR NOT f.Exists ) OR LstBox.Cell( i, 2 ) = "" Then Continue // If nothing to update, Skip It!		      		      MovieAttr.FolderParent = f		      MovieAttr.NFORead( f )		      		      Self.Add( Loc.kUpdating + ":", CommonCore.CurrentItemName, 1, LstBox.ListCount )		      		      MovieCore.MovieUpdateRating( i )		    Next		    CommonCore.MassSearch = False		    		    		  Case "UpdateSingleMovieImages"		    lblDescription.TextSize = 10		    MovieCore.UpdateArt( LstBox.Cell( LstBox.ListIndex, 2 ), LstBox.ListIndex )		    wndMain.cvsMovieDetails.Reload		    		  Case "UpdateAllMovieImages"		    lblDescription.TextSize = 10		    CommonCore.MassSearch = True		    Dim LastIndex as Integer = LstBox.ListIndex		    		    For i as Integer = 0 to LstBox.ListCount - 1		      If LstBox.Cell( i, 2 ) = "" Then Continue // If unscraped, Skip it!		      MovieCore.UpdateArt( LstBox.Cell( i, 2 ), i )		    Next		    		    lblDescription.TextSize = 0		    CommonCore.MassSearch = False		    LstBox.ListIndex = LastIndex		    		  End Select		  		  // -- Extra Downloads		  		  Select Case ThreadMode		    		    // TMDB Art		  Case "GetMoviePoster"       // Poster		    MovieCore.MovieArt( ID, "Posters" )		  Case "GetMovieFanart"       // Fanart		    MovieCore.MovieArt( ID, "Backdrops" )		    		  Case "GetMovieExtrathumbs"  // ExtraThumbs		    MovieCore.MovieExtraArts( ID, "ExtraThumbs" )		  Case "GetMovieExtraFanart"  // ExtraFanart		    MovieCore.MovieExtraArts( ID, "ExtraBackdrops" )		    		    // Fanart.TV Art		  Case "GetMovieBanner"        // Banner		    MovieCore.MovieArt( ID, "Banners" )		  Case "GetMovieLogo"          // Logo		    MovieCore.MovieArt( ID, "Logos" )		  Case "GetMovieClearArt"      // ClearArt		    MovieCore.MovieArt( ID, "ClearArt")		  Case "GetMovieDisc"          // DiscArt		    MovieCore.MovieArt( ID, "DiscArt" )		  Case "GetMovieThumb"         // Landscape		    MovieCore.MovieArt( ID, "Thumbs" )		    		    // Trailer		  Case "GetTrailer"            // Trailer		    'TrailerSckteer.Download()		    MovieCore.MovieTrailers( ID, True )		    		  End Select		  		  		  // ## Television		  		  Select Case ThreadMode		    		  Case "ReloadTVShows"		    wndMain.lstTVShows.CreateList( CommonCore.ReloadUpdate )		    		  Case "BatchRenameTVShows"		    lblDescription.TextSize = 10		    LstBox.ListIndex = -1		    Dim Shadow as Listbox = wndMain.lstTVShadow		    For i as Integer = 0 to Shadow.ListCount -1		      If Shadow.Cell( i, 2 ) = "" Then Continue // If unscraped, Skip It!		      SingleRenamer( GetFolderItem( Shadow.Cell( i, 1 ) ), i, True )		    Next		    lblDescription.TextSize = 0		    wndMain.lstTVShows.ResetFolderStatus()		    LstBox.ListIndex = Lindex		    		    		  Case "SearchTVShow"		    TVCore.ShowSearch( lblDescription.Text )		  Case "ManualSearchTVShow"		    TVCore.ShowSearch( lblDescription.Text, True )		    		  Case "FetchSingleTVShow"		    TVCore.ShowByID( ItemID )		  Case "FetchMissingTVShows"		    TVCore.MissingShows()		    		  Case "UpdateSingleTVShow"		    TVCore.ShowUpdate( ID )		  Case "UpdateAllTVShows"		    TVCore.ShowUpdateAll()		    		  Case "UpdateSingleTVShowStatus"		    TVCore.ShowStatus( CurrentItemName )		    TVAttr.NFOWrite( TVAttr.FolderParent )		    wndMain.lstTVShows.UpdateRow		    'TVAttr.LoadImages( TVAttr.FolderParent )		    wndMain.cvsTVShowDetails.Reload		    		  Case "UpdateAllTVShowStatus"		    TVCore.ShowStatusAll()		    		  Case "UpdateSingleTVShowRating"		    If TVAttr.ID_TVDB <> "" Then		      TVCore.ShowUpdateRating( TVAttr.ID_TVDB )		    ElseIf TVAttr.ID_IMDb <> "" Then		      TVCore.ShowUpdateRating( TVAttr.ID_IMDb )		    End If		    		  Case "UpdateAllTVShowRatings"		    CommonCore.MassSearch = True		    LstBox = wndMain.lstTVShadow		    For i as Integer = 0 to LstBox.ListCount -1		      Dim f as FolderItem = GetFolderItem( LstBox.Cell( i, 1 ) )		      If ( f = NIL OR NOT f.Exists ) OR LstBox.Cell( i, 2 ) = "" Then Continue // If nothing to update, Skip It!		      		      TVAttr.FolderParent = f		      TVAttr.NFORead( f )		      		      Self.Add( Loc.kUpdating + ":", TVAttr.Title + " " + Loc.mRating.ReplaceAll(":","").Lowercase + "...", 1, LstBox.ListCount )		      ID = TVAttr.ID_TVDB		      If ID = "" Then ID = TVAttr.ID_IMDb		      		      TVCore.ShowUpdateRating( ID )		      wndMain.lstTVShows.UpdateRow( i, Nil, True )		    Next		    CommonCore.MassSearch = False		    wndMain.lstTVShows.ResetFolderStatus		    wndMain.lstTVShows.ListIndex = wndMain.lstTVShows.ListIndex		    		  Case "UpdateSingleTVShowImages"		    TVCore.ShowUpdateArt( ID )		  Case "UpdateAllTVShowImages"		    TVCore.ShowUpdateArtAll()		    		  End Select		  		  // -- Extra Downloads		  		  Select Case ThreadMode		    // TVDB		  Case "GetTVShowPoster"       // Poster		    TVCore.ShowArt( ID, "Posters" )		    		    // Mixed TVDB & Fanart.TV		  Case "GetTVShowFanart"       // Fanart		    TVCore.ShowArt( ID, "Backdrops" )		  Case "GetTVShowBanner"       // Banner		    TVCore.ShowArt( ID, "Banners" )		    		    // Fanart.TV Art		  Case "GetTVShowLogo"         // Logo		    TVCore.ShowArt( ID, "Logos" )		  Case "GetTVShowClearArt"     // ClearArt		    TVCore.ShowArt( ID, "ClearArt" )		  Case "GetTVShowThumb"        // Landscape		    TVCore.ShowArt( ID, "Thumbs" )		  Case "GetTVShowCharacterArt" // CharacterArt		    TVCore.ShowArt( ID, "CharacterArt" )		    		    // Season Art		  Case "GetSeasonPoster"		    TVCore.ShowArt( ID, "SeasonPoster", Season )		  Case "GetSeasonFanart"		    TVCore.ShowArt( ID, "SeasonFanart", Season )		  Case "GetSeasonBanner"		    TVCore.ShowArt( ID, "SeasonBanner", Season )		  Case "GetSeasonThumb"		    TVCore.ShowArt( ID, "SeasonThumb", Season )		    		  Case "GetTVThemeSongs"		    TVCore.GetThemeSong( TVAttr.Title, False )		    		  End Select		  		  		  // Episodes		  Select Case ThreadMode		    		  Case "UpdateEpisodes"		    TVCore.EpisodeUpdate( ID )		    		  Case "UpdateAllEpisodes"		    CommonCore.MassSearch = True		    LstBox = wndMain.lstTVShadow		    Lindex = LstBox.ListIndex		    For i as Integer = 0 to LstBox.ListCount -1		      Dim f as FolderItem = GetFolderItem( LstBox.Cell( i, 1 ) )		      If ( f = NIL OR NOT f.Exists ) OR LstBox.Cell( i, 2 ) = "" Then Continue // If nothing to update, Skip It!		      		      TVAttr.FolderParent = f		      TVAttr.NFORead( f )		      		      Self.Add( Loc.kUpdating + ":", TVAttr.Title + " " + Loc.kEpisodes.ReplaceAll(":","").Lowercase + "...", 1, LstBox.ListCount )		      ID = TVAttr.ID_TVDB		      If ID = "" Then ID = TVAttr.ID_IMDb		      		      TVCore.EpisodeUpdate( ID )		      wndMain.lstTVShows.UpdateRow( i, Nil, True )		    Next		    CommonCore.MassSearch = False		    wndMain.lstTVShows.ResetFolderStatus		    wndMain.lstTVShows.ListIndex = Lindex		    		  End Select		  		  		  // ## Anime		  		  // -- Extra Downloads		  'Select Case ThreadMode		  'End Select		  		  		  // ## Close Process		  		  		  wndMain.lstMovies.Enabled = True		  wndMain.lstTVShows.Enabled = True		  'wndMain.lstAnime.Enabled = False		  		  wndMain.ProgressRunning = False		  		  'If ThreadMode <> "GetTrailer" Then Close		  Close		  		  		  Return		End Sub	#tag EndEvent#tag EndEvents#tag Events zTrailerSckteer	#tag Event		Sub ReceiveProgress(bytesReceived as Integer, totalBytes as Integer, newData as String, Progress as String)		  If NOT CommonCore.MassSearch Then Update( Loc.kDownloading + ":", Loc.kTrailer + "... ", bytesReceived, totalBytes )		  If NOT CommonCore.MassSearch Then Debug Progress		End Sub	#tag EndEvent	#tag Event		Sub DownloadComplete(url as String, httpStatus as Integer, Headers as internetHeaders, file as FolderItem)		  wndMain.lstMovies.UpdateRow		  MovieAttr.LoadImages( MovieAttr.FolderParent )		  Stop		End Sub	#tag EndEvent	#tag Event		Sub DownloadInterupted(URL as String)		  Close		  Stop		End Sub	#tag EndEvent#tag EndEvents