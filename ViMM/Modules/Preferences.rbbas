#tag ModuleProtected Module Preferences	#tag Method, Flags = &h0		Sub AppSupport()		  fAppSupport = SpecialFolder.ApplicationData.Child( app.kAppName )		  If fAppSupport = Nil or NOT fAppSupport.Exists then fAppSupport.CreateAsFolder		  fAppSupport.Child("Cache").CreateAsFolder		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub LoadDefaults()		  // DO NOT DELETE:		  Prefs = NSUserDefaultsMBS.standardUserDefaults		  'Prefs.setBoolValue "AppleMagnifiedMode", False // Enable retina support as soon as possible!		  		  // Main window and element sizing, load application support.		  Dim i as integer		  Dim t() as String		  AppSupport()		  		  'If wndMain.Visible = False Then Return		  		  wndMain.FullScreenAllowed = True		  Preferences.LoadWindowPos( wndMain, "wndMain" )		  'If Prefs.boolForKey("ExitFullScreen") Then wndMain.ToggleFullScreen		  		  'LoadWindowPos( wndMain, "NSWindow Main Size" )		  		  // Sidebar Widths ------------------------------------------		  If Prefs.integerForKey("NSMoviesSidebarWidth") > 0 then		    i = Prefs.integerForKey("NSMoviesSidebarWidth")		    wndMain.lstMovies.Width = i		    wndMain.ActBar(0).Width = i		    'wndMain.cvsMovies.Left  = i - 1		    wndMain.cvsMovieDetails.Left = i - 1		    wndMain.ccSearchBoxMovies.Width = i - 1		    		    #If TargetCocoa Then		      wndMain.pthsMovie.Left = i - 1		      wndMain.pthsMovie.Width = wndMain.Width - wndMain.ActBar(0).Width + 1		    #endif		    		    If ( DebugBuild OR App.Experimental ) And ActiveSection = 0 And wndMain.lstSearch.Left > 0 Then		      'wndMain.lstSearch.Left = i - 2		      'wndMain.lstSearch.Width = wndMain.Width - i + 3		    End If		    		    // wndMain.cvsMovies.Width = 780 - i + 1 // Window default width - actbar width + negative actbar left		  End If		  'wndMain.cvsMovies.Width = wndMain.Width - wndMain.ActBar(0).Width + 1		  wndMain.cvsMovieDetails.Width = wndMain.Width - wndMain.ActBar(0).Width + 1		  		  		  		  		  If Prefs.integerForKey("NSTVShowsSidebarWidth") > 0 then		    i = Prefs.integerForKey("NSTVShowsSidebarWidth")		    		    wndMain.lstTVShows.Width = i		    wndMain.ActBar(1).Width  = i		    		    wndMain.cvsTVShowDetails.Left    = i - 1		    wndMain.ccSearchBoxTVShows.Width = i -1		    		    #If TargetCocoa Then		      wndMain.PthsTVShows.Left = i - 1		      wndMain.PthsTVShows.Width = wndMain.Width - wndMain.ActBar(0).Width + 1		    #endif		    		    		    If ( DebugBuild OR App.Experimental ) And ActiveSection = 1 And wndMain.lstSearch.Left > 0 Then		      'wndMain.lstSearch.Left = i - 2		      'wndMain.lstSearch.Width = wndMain.Width - i + 3		    End If		  End If		  wndMain.cvsTVShowDetails.Width = wndMain.Width - wndMain.ActBar(1).Width + 1		  		  		  		  If Prefs.integerForKey("NSAnimeSidebarWidth") > 0 then		    ' me.Width		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub LoadWindowPos(w As Window, name as String)		  If Name <> "" And Prefs.stringForKey( name ) <> "" Then		    		    Dim t() as String = Prefs.stringForKey( name ).Split(" ")		    w.Left   = val( t(0) )		    w.Top    = val( t(1) )		    w.Width  = val( t(2) )		    w.Height = val( t(3) )		    		  End If		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub SaveWindowPos(w as Window, name as String)		  If Name <> "" Then Prefs.setStringValue name, str( w.Left ) + " " + str( w.Top ) + " " + str( w.Width ) + " " + str( w.Height )		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub SetFirstStartPrefs()		  Prefs.setStringValue("DBLanguage"), SystemLanguage		  Prefs.boolForKey("MainToolbarVisible") = True		  		  // Auto downloads		  Prefs.boolForKey("AutoDownloadPoster")       = True		  Prefs.boolForKey("AutoDownloadBackdrop")     = True		  Prefs.boolForKey("AutoDownloadBanner")       = True		  		  Prefs.boolForKey("AutoDownloadExtraThumbs")  = True		  Prefs.boolForKey("AutoDownloadExtraFanart")  = True		  Prefs.boolForKey("AutoDownloadSeasonArt")    = True		  		  Prefs.boolForKey("AutoDownloadClearArt")     = True		  Prefs.boolForKey("AutoDownloadCharacterArt") = True		  Prefs.boolForKey("AutoDownloadLogo")         = True		  Prefs.boolForKey("AutoDownloadThumb")        = True		  Prefs.boolForKey("AutoDownloadDiscArt")      = True		  		  Prefs.boolForKey("AutoDownloadEpisodeThumb") = True		  		  Prefs.boolForKey("AutoDownloadThemesong")    = True		  Prefs.boolForKey("AutoDownloadTrailer")      = False		  		  Prefs.boolForKey("AutoDownloadActorThumbs")  = False		  		  // --------		  		  // Mini List icons		  Prefs.boolForKey( "ShowMiniIcon-Poster" )         = True		  Prefs.boolForKey( "ShowMiniIcon-Backdrop" )       = True		  Prefs.boolForKey( "ShowMiniIcon-Banner" )         = True		  		  Prefs.boolForKey( "ShowMiniIcon-ExtraThumbs" )    = True		  Prefs.boolForKey( "ShowMiniIcon-ExtraFanart" )    = True		  Prefs.boolForKey( "ShowMiniIcon-SeasonArt" )      = True		  		  Prefs.boolForKey( "ShowMiniIcon-ClearArt" )       = True		  Prefs.boolForKey( "ShowMiniIcon-CharacterArt" )   = True		  Prefs.boolForKey( "ShowMiniIcon-Logo" )           = True		  Prefs.boolForKey( "ShowMiniIcon-Thumb" )          = True		  Prefs.boolForKey( "ShowMiniIcon-DiscArt" )        = True		  		  Prefs.boolForKey( "ShowMiniIcon-Trailer" )        = True		  Prefs.boolForKey( "ShowMiniIcon-Themesong" )      = True		  		  Prefs.boolForKey( "ShowMiniIcon-Subtitles" )      = True		  Prefs.boolForKey( "ShowMiniIcon-Resolution" )     = True		  		  // --------		  		  // Get recommendations		  Prefs.boolForKey("GetRecommendations") = True		  		  // Use folder name foor look-up		  Prefs.boolForKey("UseFolderNameForLookUp")   = True		  		  // Match Finder Labels		  Prefs.boolForKey("MatchFinderLabelsToTVStatus")    = False		  Prefs.boolForKey("MatchFinderLabelsToAnimeStatus") = False		  		  // Anime Genre Weight		  If Prefs.integerForKey("AnimeGenreWeight") <= 0 Then Prefs.setIntegerValue "AnimeGenreWeight", 200		  		  // Extra Art Size		  If Prefs.stringForKey( "PosterSize" ) = "" Then Prefs.setStringValue( "PosterSize", "original" )		  If Prefs.stringForKey( "FanartSize" ) = "" Then Prefs.setStringValue( "FanartSize", "original" )		  		  // Extra Thumbs/Fanart Maximum downloads		  If Prefs.integerForKey("MaxThumbs")    <= 0 Then Prefs.setIntegerValue "MaxThumbs",    4		  If Prefs.integerForKey("MaxBackdrops") <= 0 Then Prefs.setIntegerValue "MaxBackdrops", 4		  If Prefs.integerForKey("MaxActors")    <= 0 Then Prefs.setIntegerValue "MaxActors",    20		  		  // Auto Rename		  Prefs.boolForKey("TargetNOTMacOS") = True		  Prefs.boolForKey("AutoManageMedia") = False		  		  // --------		  		  'If Prefs.integerForKey("SortBy")       <=  0 then Prefs.integerForKey("SortBy")       =  0		  Prefs.boolForKey( "SortMovieAscending" ) = False		  Prefs.boolForKey( "SortTVAscending" )    = False		  Prefs.boolForKey( "SortAnimeAscending" ) = False		  		  // Set default trailer download source/quality		  If Prefs.stringForKey("TrailerSource")  = "" Then Prefs.setStringValue "TrailerSource",  "apple.com"		  If Prefs.stringForKey("TrailerQuality") = "" Then Prefs.setStringValue "TrailerQuality", "480p"		  		  		  If Prefs.integerForKey("MovieListSize") <= 0 Then Prefs.integerForKey("MovieListSize") = 2		  If Prefs.integerForKey("SortByMovie")  <=  0 then Prefs.integerForKey("SortByMovie")  =  0		  If Prefs.integerForKey("SortByTV")     <=  0 then Prefs.integerForKey("SortByTV")     =  0		  		  If Prefs.integerForKey("TimeOut")      <=  0 then Prefs.integerForKey("TimeOut")      = 30		  If Prefs.integerForKey("BatchRename")  <=  0 then Prefs.integerForKey("BatchRename")  =  0		  If Prefs.integerForKey( "PreviewThumbSize" ) <= 0 then Prefs.integerForKey( "PreviewThumbSize" ) = 128		  If Prefs.integerForKey("KeepImages")   <=  0 Then Prefs.integerForKey("KeepImages") = 0		  		  // Use Folder.jpg for file		  If Prefs.stringForKey("FolderJPGForFileTV")    = "" then Prefs.setStringValue "FolderJPGForFileTV",    Loc.None		  If Prefs.stringForKey("FolderJPGForFileAnime") = "" then Prefs.setStringValue "FolderJPGForFileAnime", Loc.None		  		  // Default Thumbs		  If Prefs.stringForKey("DefaultThumbTV")    = ""   then Prefs.setStringValue "DefaultThumbTV",    "Poster"		  If Prefs.stringForKey("DefaultThumbAnime") = ""   then Prefs.setStringValue "DefaultThumbAnime", "Poster"		  		  // Renaming Patterns		  If Prefs.stringForKey("RenameStringMovies")      = "" then Prefs.setStringValue "RenameStringMovies",      "$S ($Y)"		  If Prefs.stringForKey("RenameStringMovieFiles")  = "" then Prefs.setStringValue "RenameStringMovieFiles",  "$T ($Y)"		  		  If Prefs.stringForKey("RenameStringTVShows")  = "" then Prefs.setStringValue "RenameStringTVShows",  "$S"		  If Prefs.stringForKey("RenameStringEpisodes") = "" then Prefs.setStringValue "RenameStringEpisodes", "$N S$0SE$0E - $T"		  		  If Prefs.stringForKey("RenameStringAnime")         = "" then Prefs.setStringValue "RenameStringAnime",   "$T"		  		  // File Names		  If Prefs.stringForKey("FileNamePoster")  = "" then Prefs.setStringValue "FileNamePoster",  "<movie>-poster.jpg"		  If Prefs.stringForKey("FileNameFanart")  = "" then Prefs.setStringValue "FileNameFanart",  "<movie>-fanart.jpg"		  If Prefs.stringForKey("FileNameBanner")  = "" then Prefs.setStringValue "FileNameBanner",  "<movie>-banner.jpg"		  If Prefs.stringForKey("FileNameNFO")     = "" then Prefs.setStringValue "FileNameNFO",     "<movie>.nfo"		  If Prefs.stringForKey("FileNameTrailer") = "" then Prefs.setStringValue "FileNameTrailer", "<movie>-trailer"		  		  If Prefs.stringForKey("FileNameNFOTV")    = "" then Prefs.setStringValue "FileNameNFOTV",    "tvshow.nfo"		  If Prefs.stringForKey("FileNameNFOAnime") = "" then Prefs.setStringValue "FileNameNFOAnime", "tvshow.nfo"		  		  // FileNamePoster  = Prefs.stringForKey("FileNamePoster")		  // FileNameFanart  = Prefs.stringForKey("FileNameFanart")		  // FileNameNFO     = Prefs.stringForKey("FileNameNFO")		  // FileNameTrailer = Prefs.stringForKey("FileNameTrailer")		  		  		  // Services		  // General		  If Prefs.stringForKey("PreferredRatings") = "" Then Prefs.stringForKey("PreferredRatings") = "IMDb"		  		  // TMDB		  If Prefs.integerForKey("TMDBRecommendations") <= 0 Then Prefs.integerForKey("TMDBRecommendations") = 10		  		  // Rotten Tomatoes		  Prefs.boolForKey("RTEnabled") = True		  Prefs.boolForKey("RTRecsEnabled") = True		  Prefs.boolForKey("RTRatingsEnabled") = True		  		  // Fanart.tv		  Prefs.boolForKey("FanartTVEnabled") = True		  		  // IMDb		  Prefs.boolForKey("IMDbFullCast") = True		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub WriteDefaults()		  If Prefs.synchronize then		    'If DebugBuild then MsgBox "Saved preferences!"		  End If		End Sub	#tag EndMethod	#tag Property, Flags = &h0		fAppSupport As FolderItem	#tag EndProperty	#tag Property, Flags = &h0		Prefs As NSUserDefaultsMBS	#tag EndProperty	#tag Constant, Name = SystemLanguage, Type = String, Dynamic = True, Default = \"en", Scope = Public		#Tag Instance, Platform = Any, Language = en, Definition  = \"en"		#Tag Instance, Platform = Any, Language = nl, Definition  = \"nl"		#Tag Instance, Platform = Any, Language = da, Definition  = \"da"		#Tag Instance, Platform = Any, Language = fi, Definition  = \"fi"		#Tag Instance, Platform = Any, Language = de, Definition  = \"de"		#Tag Instance, Platform = Any, Language = it, Definition  = \"it"		#Tag Instance, Platform = Any, Language = es, Definition  = \"es"		#Tag Instance, Platform = Any, Language = fr, Definition  = \"fr"		#Tag Instance, Platform = Any, Language = pl, Definition  = \"pl"		#Tag Instance, Platform = Any, Language = hu, Definition  = \"hu"		#Tag Instance, Platform = Any, Language = el, Definition  = \"el"		#Tag Instance, Platform = Any, Language = tr, Definition  = \"tr"		#Tag Instance, Platform = Any, Language = ru, Definition  = \"ru"		#Tag Instance, Platform = Any, Language = he, Definition  = \"he"		#Tag Instance, Platform = Any, Language = ja, Definition  = \"ja"		#Tag Instance, Platform = Any, Language = pt, Definition  = \"pt"		#Tag Instance, Platform = Any, Language = zh_TW, Definition  = \"zh"		#Tag Instance, Platform = Any, Language = cs, Definition  = \"cs"		#Tag Instance, Platform = Any, Language = sk, Definition  = \"sl"		#Tag Instance, Platform = Any, Language = hr, Definition  = \"hr"		#Tag Instance, Platform = Any, Language = ko, Definition  = \"ko"		#Tag Instance, Platform = Any, Language = no, Definition  = \"no"		#Tag Instance, Platform = Any, Language = sv, Definition  = \"en"	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Module#tag EndModule