#tag ClassProtected Class ThumbViewerInherits Canvas	#tag Event		Function MouseDown(X As Integer, Y As Integer) As Boolean		  If X < Width and Y < Height and X > 5 and Y > 5 then GetSelection X, Y Else Selection = -1		  Invalidate False		  Return True		End Function	#tag EndEvent	#tag Event		Sub MouseDrag(X As Integer, Y As Integer)		  // If within bound, make a selection, otherwise reset selection		  If X < Width and Y < Height and X > 5 and Y > 5 then GetSelection X, Y Else Selection = -1		  		  MouseDrag X, Y		  Invalidate False		End Sub	#tag EndEvent	#tag Event		Sub Open()		  SelectionChanged Selection		End Sub	#tag EndEvent	#tag Event		Sub Paint(g As Graphics)		  // Background		  g.ForeColor = &c929292		  g.FillRect 0, 0, Width, Height		  		  Dim Pic as Picture		  Dim ThumbLeft, ThumbTop as Integer		  Rows = 0		  		  If Thumbs.Ubound > -1 then		    		    // Set Thumb Left & Top		    For t as Integer = 0 to Thumbs.Ubound		      Pic = ScaleImage( Thumbs(t), ThumbSize, ThumbSize, True )		      		      ThumbLeft = 10 + ThumbSize + ThumbLeft		      If ThumbLeft + 10 >= Width then		        Rows = Rows + 1		        ThumbLeft = ThumbSize + 10		      End If		      ThumbTop = 10 + ( 10 * Rows ) + ( Rows * ThumbSize )		      		      // Selection BG		      If t = Selection then		        Dim Ratio, EndRatio as Double		        Dim StartColor as Color = &c3E3E3E		        Dim EndColor   as Color = &c6E6E6E		        		        // Gradient		        For i as Integer = 0 to ThumbSize + 10		          Ratio    = ( ThumbSize - i ) / ThumbSize		          EndRatio = i / ThumbSize		          		          g.ForeColor = RGB( _		          EndColor.Red   * EndRatio + StartColor.Red   * Ratio, _		          EndColor.Green * EndRatio + StartColor.Green * Ratio, _		          EndColor.Blue  * EndRatio + StartColor.Blue  * Ratio )		          		          g.DrawLine _		          ThumbLeft - ThumbSize - 5, _ // X1		          ( Rows * ( ThumbSize + 10 ) ) + i + 5 - ScrollTop, _ // Y1		          ThumbLeft + 5, _ // X2		          ( Rows * ( ThumbSize + 10 ) ) + i + 5 - ScrollTop // Y2		        Next		        		        // Rectangle Border		        g.ForeColor = &cFFFFFF		        g.DrawRect ThumbLeft - ThumbSize - 5,   ThumbTop - 5 - ScrollTop,   ThumbSize + 11,   ThumbSize + 11		      End If		      		      // Draw Thumbs		      g.DrawPicture Pic, _		      ThumbLeft - ThumbSize + ( ThumbSize / 2 - Pic.Width / 2 ), _ // Left		      ThumbTop + ( ThumbSize / 2 - Pic.Height / 2 ) - ScrollTop    // Top		      		      // Draw Dimensions		      If ThumbDimensions.Ubound = Thumbs.Ubound and ThumbSize >= 128 then // and Selection <> t then		        g.TextSize = 10		        		        g.ForeColor = &cEEEEEE		        g.FillRect ThumbLeft - ThumbSize + 2, ThumbTop + 2 - ScrollTop, g.StringWidth( ThumbDimensions(t) ) + 4, 12		        		        g.ForeColor = &c000000		        g.DrawRect ThumbLeft - ThumbSize + 1, ThumbTop + 1 - ScrollTop, g.StringWidth( ThumbDimensions(t) ) + 6, 14		        		        g.DrawString ThumbDimensions(t), ThumbLeft - ThumbSize + 4, g.TextSize + ThumbTop + 2 - ScrollTop, 96, True		      End If		      		    Next		  End If		  		  Columns = Width / ( ThumbSize + 12.5 )		  		  RowsChanged( Rows )		  ThumbsChanged( Thumbs.Ubound + 1 )		  		  // g.ForeColor = &c323232		  // g.DrawRect 0, Height, Width, Height		  // g.DrawRect 0, 0, Width, Height		End Sub	#tag EndEvent	#tag Method, Flags = &h21		Private Sub GetSelection(X as Integer, Y as Integer)		  Dim Column as Integer =   x               / ( ThumbSize + 12.5 )		  Dim Row    as Integer = ( y + ScrollTop ) / ( ThumbSize + 12.5 )		  		  Selection = ( Row * Columns ) + Column		  If Selection > Thumbs.Ubound or Column >= Columns then Selection = -1 // Cancel selection if out of bounds.		  		  SelectionChanged( Selection, Row, Column )		End Sub	#tag EndMethod	#tag Hook, Flags = &h0		Event MouseDrag(X as Integer, Y as Integer)	#tag EndHook	#tag Hook, Flags = &h0		Event RowsChanged(RowAmount as Integer)	#tag EndHook	#tag Hook, Flags = &h0		Event SelectionChanged(Sel As Integer, Row as Integer = -1, Column as Integer = -1)	#tag EndHook	#tag Hook, Flags = &h0		Event ThumbsChanged(ThumbsAmount as Integer)	#tag EndHook	#tag Property, Flags = &h0		Columns As Integer	#tag EndProperty	#tag Property, Flags = &h0		Rows As Integer	#tag EndProperty	#tag Property, Flags = &h0		ScrollTop As Integer = 0	#tag EndProperty	#tag Property, Flags = &h0		Selection As Integer = -1	#tag EndProperty	#tag Property, Flags = &h0		ThumbDimensions() As String	#tag EndProperty	#tag Property, Flags = &h0		Thumbs() As Picture	#tag EndProperty	#tag Property, Flags = &h0		ThumbSize As Integer = 128	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="AcceptFocus"			Visible=true			Group="Behavior"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="AcceptTabs"			Visible=true			Group="Behavior"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="AutoDeactivate"			Visible=true			Group="Appearance"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Backdrop"			Visible=true			Group="Appearance"			Type="Picture"			EditorType="Picture"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Columns"			Group="Behavior"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="DoubleBuffer"			Visible=true			Group="Behavior"			InitialValue="False"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Enabled"			Visible=true			Group="Appearance"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="EraseBackground"			Visible=true			Group="Behavior"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Height"			Visible=true			Group="Position"			InitialValue="100"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="HelpTag"			Visible=true			Group="Appearance"			Type="String"			EditorType="MultiLineEditor"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="InitialParent"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="LockBottom"			Visible=true			Group="Position"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="LockLeft"			Visible=true			Group="Position"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="LockRight"			Visible=true			Group="Position"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="LockTop"			Visible=true			Group="Position"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			Type="String"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Rows"			Group="Behavior"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="ScrollTop"			Group="Behavior"			InitialValue="0"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="Selection"			Group="Behavior"			InitialValue="-1"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="TabIndex"			Visible=true			Group="Position"			InitialValue="0"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="TabPanelIndex"			Group="Position"			InitialValue="0"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="TabStop"			Visible=true			Group="Position"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="ThumbSize"			Group="Behavior"			InitialValue="128"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="UseFocusRing"			Visible=true			Group="Appearance"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Visible"			Visible=true			Group="Appearance"			InitialValue="True"			Type="Boolean"			InheritedFrom="Canvas"		#tag EndViewProperty		#tag ViewProperty			Name="Width"			Visible=true			Group="Position"			InitialValue="100"			Type="Integer"			InheritedFrom="Canvas"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass