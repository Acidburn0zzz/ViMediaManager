
// ===== Animation ==============================

@import "keyframes";

$default-animation-name            : none     !default;
$default-animation-duration        : 1s       !default;
$default-animation-function        : ease     !default;
$default-animation-delay           : false    !default;
$default-animation-fill-mode       : none     !default;
$default-animation-iteration-count : infinite !default;

// One or more name to animation
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin animation-name( $names: $default-animation-name ) {
  @include experimental( animation-name, unquote($names), -moz, -webkit, not -o, -ms, not -khtml, official ) }

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin animation-duration ( $duration: $default-animation-duration ) {
  @if type-of( $duration ) == string { $duration: unquote($duration); }
  @include experimental( animation-duration, $duration, -moz, -webkit, not -o, -ms, not -khtml, official ); }

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin animation-timing-function( $function: $default-animation-function ) {
  @include experimental( animation-timing-function, $function, -moz, -webkit, not -o, -ms, not -khtml, official ); }

// One or more animation-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin animation-delay( $delay: $default-animation-delay ) {
  @if type-of($delay) == string { $delay: unquote($delay); }
  @include experimental( animation-delay, $delay, -moz, -webkit, not -o, -ms, not -khtml, official ); }

// One or more fill mode
//
// * [none | forwards | backwards | both | alternate?]
// * For multiple, use a comma-delimited list

@mixin animation-fill-mode( $fill-mode: $default-animation-fill-mode ) {
  @include experimental( animation-fill-mode, unquote($fill-mode), -moz, -webkit, not -o, -ms, not -khtml, official ); }

// One or more iteration counts (times that the animation will be repeated)
//
// * For multiple, use a comma-delimited list

@mixin animation-iteration( $count: $default-animation-iteration-count ) {
  @if type-of( $count ) == string { $count: unquote($count); }
  @include experimental( animation-iteration, unquote($count), -moz, -webkit, not -o, -ms, not -khtml, official ); }

// animation all-in-one long-hand

@mixin single-animation(
  $name      : $default-animation-name,
  $duration  : $default-animation-duration,
  $function  : $default-animation-function,
  $delay     : $default-animation-delay,
  $iteration : $default-animation-delay,
  $fill-mode : $default-animation-fill-mode
) {
  @include animation-name($name);
  @include animation-duration($duration);
  @if $function  { @include animation-timing-function( $function ); }
  @if $delay     { @include animation-delay( $delay ); }
  @if $iteration { @include animation-iteration( $iteration ); }
  @if $iteration { @include animation-fill-mode( $fill-mode ); } }

// animation all-in-one short-hand
@mixin animation(
  $name      : $default-animation-name,
  $duration  : $default-animation-duration,
  $function  : $default-animation-function,
  $delay     : $default-animation-delay,
  $iteration : $default-animation-delay,
  $fill-mode : $default-animation-fill-mode
) {
  @if $name {
    @include experimental(animation, $name $duration $function $delay $iteration $fill-mode,
                  -moz, -webkit, not -o, not -ms, not -khtml, official ); } }